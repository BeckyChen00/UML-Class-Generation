------------------------------------------------------------
---------------------1/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- Address
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Service Category
- Branch
- Address
- User
- Customer
- Account
- Personal Banker
- Employee

3. Enumerations:
- ServiceCategoryType(national, international)
- AccountType(checking, savings)

4. Classes:
- Bank
- Branch
- Address
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank(serviceCategory: ServiceCategoryType)
- Branch(mainBranch: boolean, type: branchType)
- Address(street: string, city: string, state: string, country: string)
- User(name: string)
- Customer(customerType: customerType, personalBanker: Employee)
- Account(accountNumber: int, accountType: AccountType, isJoint: boolean)
- Employee(employeeType: employeeType, branches: List[Branch])
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ServiceCategoryType(national, international)
   + AccountType(checking, savings)

Classes:
   + Bank(serviceCategory: ServiceCategoryType)
   + Branch(mainBranch: boolean, type: branchType)
   + Address(street: String, city: String, state: String, country: String)
   + User(name: String)
   + Customer(customerType: CustomerType, personalBanker: Employee)
   + Account(accountNumber: int, accountType: AccountType, isJoint: boolean)
   + Employee(employeeType: EmployeeType, branches: List[Branch])
```

Structure Model_Gen:
 Classes:
Class: ServiceCategoryType (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [serviceCategory:ServiceCategoryType]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [mainBranch:boolean,type:branchType]
Class: Address (class) - Enum Attributes: [], Class Attributes: [street:String,city:String,state:String,country:String]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [customerType:CustomerType,personalBanker:Employee]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:int,accountType:AccountType,isJoint:boolean]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [employeeType:EmployeeType,branches:List[Branch]]
Relationships:
--------------------------------------------------------------------------------
--1/5--Classes and attributes matching process:
-Class:
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Address(class)' - 'Address(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'ServiceCategoryType(enum)' - 'ServiceCategory(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'AccountType(enum):savings' - 'savings'
 'Branch(class):type' - 'type'
 'ServiceCategoryType(enum):national' - 'national'
 'ServiceCategoryType(enum):international' - 'international'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             9                   9                   15                  
Attributes          19                  5                   25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------2/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes: Bank, Branch, User, Customer, Account, Employee
2. Key objects/entities: Bank, Branch, User, Customer, Account, Employee

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)
- AddressType(temporary, permanent)
- BranchType(main, express)
- CustomerType(general, VIP)
- AccountType(checking, savings)

4. Classes:
- Bank
- Branch
- Address
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank(type: BankType, serviceCategory: ServiceCategory)
- Branch(type: BranchType, addresses: List<Address>)
- Address(addressType: AddressType, street: string, city: string, state: string, zipCode: string)
- User(name: string)
- Customer(type: CustomerType, accounts: List<Account>, personalBanker: Employee)
- Account(number: string, type: AccountType, holders: List<User>)
- Employee(name: string, position: string, branches: List<Branch>)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
   + AddressType(temporary, permanent)
   + BranchType(main, express)
   + CustomerType(general, VIP)
   + AccountType(checking, savings)

Classes:
   + Bank(type: BankType, serviceCategory: ServiceCategory)
   + Branch(type: BranchType)
   + Address(addressType: AddressType, street: String, city: String, state: String, zipCode: String)
   + User(name: String)
   + Customer(type: CustomerType)
   + Account(number: String, type: AccountType)
   + Employee(name: String, position: String)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AddressType (enum) - Enum Attributes: [temporary, permanent], Class Attributes: []
Class: BranchType (enum) - Enum Attributes: [main, express], Class Attributes: []
Class: CustomerType (enum) - Enum Attributes: [general, VIP], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [type:BankType,serviceCategory:ServiceCategory]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [type:BranchType]
Class: Address (class) - Enum Attributes: [], Class Attributes: [addressType:AddressType,street:String,city:String,state:String,zipCode:String]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [type:CustomerType]
Class: Account (class) - Enum Attributes: [], Class Attributes: [number:String,type:AccountType]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [name:String,position:String]
Relationships:
--------------------------------------------------------------------------------
--2/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'AddressType(enum)' - 'AddressType(enum)'
 'BranchType(enum)' - 'BranchType(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Address(class)' - 'Address(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'CustomerType(enum)' - 'CustomerCategory(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'AddressType(enum):temporary' - 'temporary'
 'AddressType(enum):permanent' - 'permanent'
 'BranchType(enum):main' - 'main'
 'BranchType(enum):express' - 'express'
 'AccountType(enum):savings' - 'savings'
 'Bank(class):type' - 'type'
 'Branch(class):type' - 'type'
 'Account(class):number' - 'number'
 'Account(class):type' - 'type'
 'Employee(class):position' - 'position'
 'CustomerType(enum):general' - 'general'
 'CustomerType(enum):VIP' - 'vip'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  13                  15                  
Attributes          26                  17                  25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------3/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
# Relevant Nouns:
- Bank
- Service category
- Branch
- Address
- User
- Customer
- Account
- Personal banker
- Employee
- Teller
- Manager
- Loan officer

# Key Objects/Entities:
- Bank
- Service Category
- Branch
- Address
- User
- Customer
- Account
- Personal Banker
- Employee

# Enumerations:
- BankType(public, private)
- ServiceCategoryType(national, international)
- AccountType(checking, savings)

# Classes:
- Bank
- ServiceCategory
- Branch
- Address
- User
- Customer
- Account
- PersonalBanker
- Employee

# Attributes:
- Bank(type: BankType, serviceCategory: ServiceCategoryType)
- ServiceCategory(name: string)
- Branch(mainBranch: boolean, branchType: string)
- Address(addressType: string)
- User(name: string)
- Customer(customerType: string)
- Account(accountNumber: string, accountType: AccountType, jointAccount: boolean)
- PersonalBanker(employeeId: string)
- Employee(employeeType: string, branches: List<Branch>)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategoryType(national, international)
   + AccountType(checking, savings)

Classes:
   + Bank(type: BankType, serviceCategory: ServiceCategoryType)
   + ServiceCategory(name: String)
   + Branch(mainBranch: Boolean, branchType: String)
   + Address(addressType: String)
   + User(name: String)
   + Customer(customerType: String)
   + Account(accountNumber: String, accountType: AccountType, jointAccount: Boolean)
   + PersonalBanker(employeeId: String)
   + Employee(employeeType: String, branches: List<Branch>)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategoryType (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [type:BankType,serviceCategory:ServiceCategoryType]
Class: ServiceCategory (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [mainBranch:Boolean,branchType:String]
Class: Address (class) - Enum Attributes: [], Class Attributes: [addressType:String]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [customerType:String]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:String,accountType:AccountType,jointAccount:Boolean]
Class: PersonalBanker (class) - Enum Attributes: [], Class Attributes: [employeeId:String]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [employeeType:String,branches:List<Branch>]
Relationships:
--------------------------------------------------------------------------------
--3/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'ServiceCategory(class)' - 'ServiceCategory(enum)'
 'Branch(class)' - 'Branch(class)'
 'Address(class)' - 'Address(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'AccountType(enum):savings' - 'savings'
 'Bank(class):type' - 'type'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             12                  10                  15                  
Attributes          20                  5                   25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------4/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Public Bank
- Private Bank
- Service Category (national, international)
- Address (temporary, permanent)
- Branch Type (main branch, express branch)
- User Type (customer, employee)
- Customer Type (general customer, VIP customer)
- Account Type (checking account, savings account, joint account)
- Employee Position (teller, manager, loan officer)

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)
- BranchType(main, express)
- UserType(customer, employee)
- CustomerType(general, VIP)
- AccountType(checking, savings, joint)
- EmployeePosition(teller, manager, loan officer)

4. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank()
   - name: string
   - type: BankType
   - serviceCategory: ServiceCategory

- Branch()
   - name: string
   - addresses: Address[]
   - type: BranchType
   - bankId: string

- User()
   - name: string
   - type: UserType

- Customer()
   - customerId: string
   - type: CustomerType
   - accountId: string
   - personalBankerId: string

- Account()
   - accountId: string
   - type: AccountType
   - customerId: string

- Employee()
   - employeeId: string
   - name: string
   - position: EmployeePosition
   - branchIds: string[]
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
   + BranchType(main, express)
   + UserType(customer, employee)
   + CustomerType(general, VIP)
   + AccountType(checking, savings, joint)
   + EmployeePosition(teller, manager, loanOfficer)

Classes:
   + Bank(name: String, type: BankType, serviceCategory: ServiceCategory)
   + Branch(name: String, addresses: Address[], type: BranchType, bankId: String)
   + User(name: String, type: UserType)
   + Customer(customerId: String, type: CustomerType, accountId: String, personalBankerId: String)
   + Account(accountId: String, type: AccountType, customerId: String)
   + Employee(employeeId: String, name: String, position: EmployeePosition, branchIds: String[])
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: BranchType (enum) - Enum Attributes: [main, express], Class Attributes: []
Class: UserType (enum) - Enum Attributes: [customer, employee], Class Attributes: []
Class: CustomerType (enum) - Enum Attributes: [general, VIP], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings, joint], Class Attributes: []
Class: EmployeePosition (enum) - Enum Attributes: [teller, manager, loanOfficer], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [name:String,type:BankType,serviceCategory:ServiceCategory]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [name:String,addresses:Address[],type:BranchType,bankId:String]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String,type:UserType]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [customerId:String,type:CustomerType,accountId:String,personalBankerId:String]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountId:String,type:AccountType,customerId:String]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [employeeId:String,name:String,position:EmployeePosition,branchIds:String[]]
Relationships:
--------------------------------------------------------------------------------
--4/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'BranchType(enum)' - 'BranchType(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'CustomerType(enum)' - 'CustomerCategory(enum)'
 'EmployeePosition(enum)' - 'EmpPosition(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'BranchType(enum):main' - 'main'
 'BranchType(enum):express' - 'express'
 'AccountType(enum):savings' - 'savings'
 'Bank(class):type' - 'type'
 'Branch(class):type' - 'type'
 'Account(class):type' - 'type'
 'Employee(class):position' - 'position'
 'CustomerType(enum):general' - 'general'
 'CustomerType(enum):VIP' - 'vip'
 'EmployeePosition(enum):teller' - 'teller'
 'EmployeePosition(enum):manager' - 'manager'
 'EmployeePosition(enum):loanOfficer' - 'loanOfficer'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  12                  15                  
Attributes          36                  17                  25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------5/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Employee
- Account

2. Key Objects/Entities:
- Bank
- Branch
- User
- Customer
- Employee
- Account

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)
- AddressType(temporary, permanent)
- BranchType(main, express)
- CustomerType(general, VIP)
- AccountType(checking, savings)

4. Classes:
- Bank
- Branch
- User
- Customer
- Employee
- Account

5. Attributes:
- Bank(type: BankType, serviceCategory: ServiceCategory)
- Branch(type: BranchType, addresses: List<Address>, bankId: int)
- User(name: str)
- Customer(type: CustomerType, branchId: int, personalBankerId: int)
- Employee(type: str, bankId: int, branchIds: List[int])
- Account(number: int, type: AccountType, customerId: int, jointCustomerId: int)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
   + AddressType(temporary, permanent)
   + BranchType(main, express)
   + CustomerType(general, VIP)
   + AccountType(checking, savings)
Classes:
   + Bank(type: BankType, serviceCategory: ServiceCategory)
   + Branch(type: BranchType, addresses: List<Address>, bankId: int)
   + User(name: String)
   + Customer(type: CustomerType, branchId: int, personalBankerId: int)
   + Employee(type: String, bankId: int, branchIds: List[int])
   + Account(number: int, type: AccountType, customerId: int, jointCustomerId: int)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AddressType (enum) - Enum Attributes: [temporary, permanent], Class Attributes: []
Class: BranchType (enum) - Enum Attributes: [main, express], Class Attributes: []
Class: CustomerType (enum) - Enum Attributes: [general, VIP], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [type:BankType,serviceCategory:ServiceCategory]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [type:BranchType,addresses:List<Address>,bankId:int]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [type:CustomerType,branchId:int,personalBankerId:int]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [type:String,bankId:int,branchIds:List[int]]
Class: Account (class) - Enum Attributes: [], Class Attributes: [number:int,type:AccountType,customerId:int,jointCustomerId:int]
Relationships:
--------------------------------------------------------------------------------
--5/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'AddressType(enum)' - 'AddressType(enum)'
 'BranchType(enum)' - 'BranchType(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Employee(class)' - 'Employee(class)'
 'Account(class)' - 'Account(class)'
 'CustomerType(enum)' - 'CustomerCategory(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'AddressType(enum):temporary' - 'temporary'
 'AddressType(enum):permanent' - 'permanent'
 'BranchType(enum):main' - 'main'
 'BranchType(enum):express' - 'express'
 'AccountType(enum):savings' - 'savings'
 'Bank(class):type' - 'type'
 'Branch(class):type' - 'type'
 'Account(class):number' - 'number'
 'Account(class):type' - 'type'
 'CustomerType(enum):general' - 'general'
 'CustomerType(enum):VIP' - 'vip'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             12                  12                  15                  
Attributes          28                  16                  25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
Bank Management System (BMS), avg-method2
--------------------------------------------------------------------------------
Metric              Precision      Recall         F1             F2             
--------------------------------------------------------------------------------
Classes             0.949          0.747          0.836          0.780
Attributes          0.465          0.528          0.495          0.514
Associations        0.000          0.000          0.000          0.000
Inheritances        0.000          0.000          0.000          0.000
--------------------------------------------------------------------------------
