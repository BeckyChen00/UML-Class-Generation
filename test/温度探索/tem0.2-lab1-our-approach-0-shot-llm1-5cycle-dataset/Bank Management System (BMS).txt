------------------------------------------------------------
---------------------1/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Branch
- User
- Customer
- Account
- Employee

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)
- AddressType(temporary, permanent)
- BranchType(main, express)
- CustomerType(general, VIP)
- AccountType(checking, savings)
- EmployeeRole(teller, manager, loan officer)

4. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank()
  - name: string
  - type: BankType
  - service_category: ServiceCategory

- Branch()
  - name: string
  - type: BranchType
  - addresses: list of tuples (address: string, type: AddressType)

- User()
  - name: string

- Customer()
  - user_id: int
  - type: CustomerType
  - accounts: list of Account
  - personal_banker_id: int

- Account()
  - account_number: int
  - type: AccountType
  - owners: list of Customer

- Employee()
  - user_id: int
  - role: EmployeeRole
  - branches_worked: list of Branch
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
   + AddressType(temporary, permanent)
   + BranchType(main, express)
   + CustomerType(general, VIP)
   + AccountType(checking, savings)
   + EmployeeRole(teller, manager, loanOfficer)

Classes:
   + Bank(name: String, type: BankType, serviceCategory: ServiceCategory)
   + Branch(name: String, type: BranchType, addresses: List<(address: String, type: AddressType)>)
   + User(name: String)
   + Customer(userId: int, type: CustomerType, accounts: List<Account>, personalBankerId: int)
   + Account(accountNumber: int, type: AccountType, owners: List<Customer>)
   + Employee(userId: int, role: EmployeeRole, branchesWorked: List<Branch>)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AddressType (enum) - Enum Attributes: [temporary, permanent], Class Attributes: []
Class: BranchType (enum) - Enum Attributes: [main, express], Class Attributes: []
Class: CustomerType (enum) - Enum Attributes: [general, VIP], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: EmployeeRole (enum) - Enum Attributes: [teller, manager, loanOfficer], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [name:String,type:BankType,serviceCategory:ServiceCategory]
Class: Branch (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [userId:int,type:CustomerType,accounts:List<Account>,personalBankerId:int]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:int,type:AccountType,owners:List<Customer>]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [userId:int,role:EmployeeRole,branchesWorked:List<Branch>]
Relationships:
--------------------------------------------------------------------------------
--1/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'AddressType(enum)' - 'AddressType(enum)'
 'BranchType(enum)' - 'BranchType(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'CustomerType(enum)' - 'CustomerCategory(enum)'
 'EmployeeRole(enum)' - 'EmpPosition(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'AddressType(enum):temporary' - 'temporary'
 'AddressType(enum):permanent' - 'permanent'
 'BranchType(enum):main' - 'main'
 'BranchType(enum):express' - 'express'
 'AccountType(enum):savings' - 'savings'
 'Bank(class):type' - 'type'
 'Account(class):type' - 'type'
 'CustomerType(enum):general' - 'general'
 'CustomerType(enum):VIP' - 'vip'
 'EmployeeRole(enum):teller' - 'teller'
 'EmployeeRole(enum):manager' - 'manager'
 'EmployeeRole(enum):loanOfficer' - 'loanOfficer'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  13                  15                  
Attributes          29                  17                  25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------2/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
# Relevant Nouns:
- Bank
- Service Category
- Branch
- Address
- User
- Customer
- Account
- Personal Banker
- Employee
- Teller
- Manager
- Loan Officer

# Key Objects/Entities:
- Bank
- Service Category
- Branch
- Address
- User
- Customer
- Account
- Personal Banker
- Employee

# Enumerations:
- BankType(public, private)
- ServiceCategoryType(national, international)
- AccountType(checking, savings)
- EmployeeType(teller, manager, loan officer)

# Classes:
- Bank
- ServiceCategory
- Branch
- Address
- User
- Customer
- Account
- PersonalBanker
- Employee

# Attributes:
- Bank()
- ServiceCategory()
- Branch()
- Address(temporaryAddress: string, permanentAddress: string, branchType: string)
- User(name: string)
- Customer(customerType: string)
- Account(accountNumber: string, accountType: string, isJointAccount: boolean)
- PersonalBanker()
- Employee(employeeType: string, branchesWorked: list)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategoryType(national, international)
   + AccountType(checking, savings)
   + EmployeeType(teller, manager, loanOfficer)

Classes:
   + Bank()
   + ServiceCategory()
   + Branch()
   + Address(temporaryAddress: String, permanentAddress: String, branchType: String)
   + User(name: String)
   + Customer(customerType: String)
   + Account(accountNumber: String, accountType: String, isJointAccount: boolean)
   + PersonalBanker()
   + Employee(employeeType: String, branchesWorked: List)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategoryType (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: EmployeeType (enum) - Enum Attributes: [teller, manager, loanOfficer], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: []
Class: ServiceCategory (class) - Enum Attributes: [], Class Attributes: []
Class: Branch (class) - Enum Attributes: [], Class Attributes: []
Class: Address (class) - Enum Attributes: [], Class Attributes: [temporaryAddress:String,permanentAddress:String,branchType:String]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [customerType:String]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:String,accountType:String,isJointAccount:boolean]
Class: PersonalBanker (class) - Enum Attributes: [], Class Attributes: []
Class: Employee (class) - Enum Attributes: [], Class Attributes: [employeeType:String,branchesWorked:List]
Relationships:
--------------------------------------------------------------------------------
--2/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'ServiceCategory(class)' - 'ServiceCategory(enum)'
 'Branch(class)' - 'Branch(class)'
 'Address(class)' - 'Address(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'EmployeeType(enum)' - 'EmpPosition(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'AccountType(enum):savings' - 'savings'
 'EmployeeType(enum):teller' - 'teller'
 'EmployeeType(enum):manager' - 'manager'
 'EmployeeType(enum):loanOfficer' - 'loanOfficer'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  11                  15                  
Attributes          19                  7                   25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------3/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Service Category
- Branch
- Address
- User
- Customer
- Account
- Employee

3. Enumerations:
- ServiceCategoryType(national, international)
- AccountType(checking, savings)
- EmployeeType(teller, manager, loan officer)

4. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank()
- Branch(serviceCategory: ServiceCategoryType, branchType: main branch/express branch)
- User(name: string)
- Customer(customerType: general/VIP, personalBanker: Employee)
- Account(accountNumber: string, accountType: AccountType, isJointAccount: boolean)
- Employee(employeeType: EmployeeType, branches: list of Branch)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ServiceCategoryType(national, international)
   + AccountType(checking, savings)
   + EmployeeType(teller, manager, loanOfficer)
Classes:
   + Bank()
   + Branch(serviceCategory: ServiceCategoryType, branchType: string)
   + User(name: String)
   + Customer(customerType: String, personalBanker: Employee)
   + Account(accountNumber: String, accountType: AccountType, isJointAccount: boolean)
   + Employee(employeeType: EmployeeType, branches: List<Branch>)
```

Structure Model_Gen:
 Classes:
Class: ServiceCategoryType (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: EmployeeType (enum) - Enum Attributes: [teller, manager, loanOfficer], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: []
Class: Branch (class) - Enum Attributes: [], Class Attributes: [serviceCategory:ServiceCategoryType,branchType:string]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [customerType:String,personalBanker:Employee]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:String,accountType:AccountType,isJointAccount:boolean]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [employeeType:EmployeeType,branches:List<Branch>]
Relationships:
--------------------------------------------------------------------------------
--3/5--Classes and attributes matching process:
-Class:
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'ServiceCategoryType(enum)' - 'ServiceCategory(enum)'
 'EmployeeType(enum)' - 'EmpPosition(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'AccountType(enum):savings' - 'savings'
 'ServiceCategoryType(enum):national' - 'national'
 'ServiceCategoryType(enum):international' - 'international'
 'EmployeeType(enum):teller' - 'teller'
 'EmployeeType(enum):manager' - 'manager'
 'EmployeeType(enum):loanOfficer' - 'loanOfficer'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             9                   9                   15                  
Attributes          17                  7                   25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------4/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Relevant nouns:
- Bank
- Public bank
- Private bank
- Service category
- National service category
- International service category
- Branch
- Address
- Temporary address
- Permanent address
- Main branch
- Express branch
- User
- Customer
- Employee
- Name
- General customer
- VIP customer
- Account
- Account number
- Checking account
- Savings account
- Joint account
- Personal banker
- Teller
- Manager
- Loan officer

2. Key objects/entities:
- Bank
- Service category
- Branch
- Address
- User
- Customer
- Account
- Personal banker
- Employee

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)

4. Classes:
- Bank
- Branch
- Address
- User
- Customer
- Account
- PersonalBanker
- Employee

5. Attributes:
- Bank()
- Branch()
- Address()
- User(name: string)
- Customer()
- Account(accountNumber: string)
- PersonalBanker()
- Employee()
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
Classes:
   + Bank()
   + Branch()
   + Address()
   + User(name: String)
   + Customer()
   + Account(accountNumber: String)
   + PersonalBanker()
   + Employee()
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: []
Class: Branch (class) - Enum Attributes: [], Class Attributes: []
Class: Address (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: []
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:String]
Class: PersonalBanker (class) - Enum Attributes: [], Class Attributes: []
Class: Employee (class) - Enum Attributes: [], Class Attributes: []
Relationships:
--------------------------------------------------------------------------------
--4/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Address(class)' - 'Address(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  9                   15                  
Attributes          6                   5                   25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------5/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Branch
- User
- Customer
- Account
- Employee

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)
- AddressType(temporary, permanent)
- BranchType(main, express)
- CustomerType(general, VIP)
- AccountType(checking, savings)
- EmployeeRole(teller, manager, loan officer)

4. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank()
  - name: string
  - type: BankType
  - service_category: ServiceCategory

- Branch()
  - name: string
  - bank_id: int
  - type: BranchType

- User()
  - name: string

- Customer()
  - user_id: int
  - type: CustomerType
  - personal_banker_id: int

- Account()
  - account_number: int
  - type: AccountType
  - is_joint: bool

- Employee()
  - user_id: int
  - role: EmployeeRole
  - branch_ids: list of int
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
   + AddressType(temporary, permanent)
   + BranchType(main, express)
   + CustomerType(general, VIP)
   + AccountType(checking, savings)
   + EmployeeRole(teller, manager, loanOfficer)

Classes:
   + Bank(name: String, type: BankType, serviceCategory: ServiceCategory)
   + Branch(name: String, bankId: int, type: BranchType)
   + User(name: String)
   + Customer(userId: int, type: CustomerType, personalBankerId: int)
   + Account(accountNumber: int, type: AccountType, isJoint: boolean)
   + Employee(userId: int, role: EmployeeRole, branchIds: int[])
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AddressType (enum) - Enum Attributes: [temporary, permanent], Class Attributes: []
Class: BranchType (enum) - Enum Attributes: [main, express], Class Attributes: []
Class: CustomerType (enum) - Enum Attributes: [general, VIP], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: EmployeeRole (enum) - Enum Attributes: [teller, manager, loanOfficer], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [name:String,type:BankType,serviceCategory:ServiceCategory]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [name:String,bankId:int,type:BranchType]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [userId:int,type:CustomerType,personalBankerId:int]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:int,type:AccountType,isJoint:boolean]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [userId:int,role:EmployeeRole,branchIds:int[]]
Relationships:
--------------------------------------------------------------------------------
--5/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'AddressType(enum)' - 'AddressType(enum)'
 'BranchType(enum)' - 'BranchType(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'CustomerType(enum)' - 'CustomerCategory(enum)'
 'EmployeeRole(enum)' - 'EmpPosition(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'AddressType(enum):temporary' - 'temporary'
 'AddressType(enum):permanent' - 'permanent'
 'BranchType(enum):main' - 'main'
 'BranchType(enum):express' - 'express'
 'AccountType(enum):savings' - 'savings'
 'Bank(class):type' - 'type'
 'Branch(class):type' - 'type'
 'Account(class):type' - 'type'
 'CustomerType(enum):general' - 'general'
 'CustomerType(enum):VIP' - 'vip'
 'EmployeeRole(enum):teller' - 'teller'
 'EmployeeRole(enum):manager' - 'manager'
 'EmployeeRole(enum):loanOfficer' - 'loanOfficer'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  13                  15                  
Attributes          31                  18                  25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
Bank Management System (BMS), avg-method2
--------------------------------------------------------------------------------
Metric              Precision      Recall         F1             F2             
--------------------------------------------------------------------------------
Classes             0.948          0.733          0.827          0.768
Attributes          0.529          0.440          0.481          0.455
Associations        0.000          0.000          0.000          0.000
Inheritances        0.000          0.000          0.000          0.000
--------------------------------------------------------------------------------
