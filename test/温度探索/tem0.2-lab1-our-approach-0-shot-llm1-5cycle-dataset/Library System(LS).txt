------------------------------------------------------------
---------------------1/5------Library System(LS):
------------------------------------------------------------
1st conversation AI:
1. Relevant nouns:
- Book
- User
- Member User
- Guest User

2. Key objects/entities:
- Book
- User

3. Enumerations:
- UserStatus(active, inactive)

4. Classes:
- Book
- User

5. Attributes:
- Book(title: string, barcode: string, ISBN: string, numPages: int)
- User(name: string, email: string, address: string, ID: string)
- User(status: UserStatus)
- Loan(startDate: date, endDate: date)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + UserStatus(active, inactive)
Classes:
   + Book(title: String, barcode: String, ISBN: String, numPages: int)
   + User(name: String, email: String, address: String, ID: String, status: UserStatus)
   + Loan(startDate: Date, endDate: Date)
```

Structure Model_Gen:
 Classes:
Class: UserStatus (enum) - Enum Attributes: [active, inactive], Class Attributes: []
Class: Book (class) - Enum Attributes: [], Class Attributes: [title:String,barcode:String,ISBN:String,numPages:int]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,address:String,ID:String,status:UserStatus]
Class: Loan (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date]
Relationships:
--------------------------------------------------------------------------------
--1/5--Classes and attributes matching process:
-Class:
 'Book(class)' - 'Book(class)'
 'User(class)' - 'User(class)'
 'Loan(class)' - 'Loan(class)'
-Attributes:
 'Book(class):title' - 'title'
 'Book(class):ISBN' - 'isbn'
 'User(class):name' - 'name'
 'User(class):email' - 'email'
 'User(class):ID' - 'id'
 'Loan(class):startDate' - 'startDate'
 'Loan(class):endDate' - 'endDate'
-Relationships:
--------------------------------------------------------------------------------
Library System(LS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             4                   3                   6                   
Attributes          13                  7                   10                  
Associations        0                   0                   3                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------2/5------Library System(LS):
------------------------------------------------------------
1st conversation AI:
1. Relevant nouns:
- Book
- User
- Member User
- Guest User

2. Key objects/entities:
- Book
- User

3. Enumerations:
- UserStatus(active, inactive)

4. Classes:
- Book
- User

5. Attributes:
- Book(title: string, barcode: string, ISBN: string, numPages: int)
- User(name: string, email: string, address: string, ID: string, status: UserStatus)
- Loan(startDate: date, endDate: date)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + UserStatus(active, inactive)
Classes:
   + Book(title: String, barcode: String, ISBN: String, numPages: int)
   + User(name: String, email: String, address: String, ID: String, status: UserStatus)
   + Loan(startDate: Date, endDate: Date)
```

Structure Model_Gen:
 Classes:
Class: UserStatus (enum) - Enum Attributes: [active, inactive], Class Attributes: []
Class: Book (class) - Enum Attributes: [], Class Attributes: [title:String,barcode:String,ISBN:String,numPages:int]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,address:String,ID:String,status:UserStatus]
Class: Loan (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date]
Relationships:
--------------------------------------------------------------------------------
--2/5--Classes and attributes matching process:
-Class:
 'Book(class)' - 'Book(class)'
 'User(class)' - 'User(class)'
 'Loan(class)' - 'Loan(class)'
-Attributes:
 'Book(class):title' - 'title'
 'Book(class):ISBN' - 'isbn'
 'User(class):name' - 'name'
 'User(class):email' - 'email'
 'User(class):ID' - 'id'
 'Loan(class):startDate' - 'startDate'
 'Loan(class):endDate' - 'endDate'
-Relationships:
--------------------------------------------------------------------------------
Library System(LS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             4                   3                   6                   
Attributes          13                  7                   10                  
Associations        0                   0                   3                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------3/5------Library System(LS):
------------------------------------------------------------
1st conversation AI:
1. Relevant nouns: library, book, title, barcode, ISBN, number of pages, user, member, guest, name, email, address, ID, loan, start date, end date

2. Key objects/entities: library, book, user, loan

3. Enumerations:
- UserStatus(active, inactive): Represents the status of a user (member/guest) in the system.

4. Classes:
- Library: Represents the library in the system.
- Book: Represents a book in the library.
- User: Represents a user (member/guest) in the system.
- Loan: Represents a book loan made by a user.

5. Attributes:
- Library():
- Book(title: string, barcode: string, ISBN: string, number_of_pages: int)
- User(name: string, email: string, address: string, ID: string, status: UserStatus)
- Loan(start_date: date, end_date: date)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + UserStatus(active, inactive)
Classes:
   + Library()
   + Book(title: String, barcode: String, ISBN: String, numberOfPages: int)
   + User(name: String, email: String, address: String, ID: String, status: UserStatus)
   + Loan(startDate: Date, endDate: Date)
```

Structure Model_Gen:
 Classes:
Class: UserStatus (enum) - Enum Attributes: [active, inactive], Class Attributes: []
Class: Library (class) - Enum Attributes: [], Class Attributes: []
Class: Book (class) - Enum Attributes: [], Class Attributes: [title:String,barcode:String,ISBN:String,numberOfPages:int]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,address:String,ID:String,status:UserStatus]
Class: Loan (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date]
Relationships:
--------------------------------------------------------------------------------
--3/5--Classes and attributes matching process:
-Class:
 'Book(class)' - 'Book(class)'
 'User(class)' - 'User(class)'
 'Loan(class)' - 'Loan(class)'
-Attributes:
 'Book(class):title' - 'title'
 'Book(class):ISBN' - 'isbn'
 'Book(class):numberOfPages' - 'numberOfPages'
 'User(class):name' - 'name'
 'User(class):email' - 'email'
 'User(class):ID' - 'id'
 'Loan(class):startDate' - 'startDate'
 'Loan(class):endDate' - 'endDate'
-Relationships:
--------------------------------------------------------------------------------
Library System(LS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             5                   3                   6                   
Attributes          13                  8                   10                  
Associations        0                   0                   3                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------4/5------Library System(LS):
------------------------------------------------------------
1st conversation AI:
1. Relevant nouns:
- Book
- User
- Member User
- Guest User

2. Key objects/entities:
- Book
- User

3. Enumerations:
- UserStatus(active, inactive)

4. Classes:
- Book
- User

5. Attributes:
- Book(title: string, barcode: string, ISBN: string, numPages: int)
- User(name: string, email: string, address: string, ID: string)
- User(status: UserStatus)
- Loan(startDate: date, endDate: date)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + UserStatus(active, inactive)
Classes:
   + Book(title: String, barcode: String, ISBN: String, numPages: int)
   + User(name: String, email: String, address: String, ID: String, status: UserStatus)
   + Loan(startDate: Date, endDate: Date)
```

Structure Model_Gen:
 Classes:
Class: UserStatus (enum) - Enum Attributes: [active, inactive], Class Attributes: []
Class: Book (class) - Enum Attributes: [], Class Attributes: [title:String,barcode:String,ISBN:String,numPages:int]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,address:String,ID:String,status:UserStatus]
Class: Loan (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date]
Relationships:
--------------------------------------------------------------------------------
--4/5--Classes and attributes matching process:
-Class:
 'Book(class)' - 'Book(class)'
 'User(class)' - 'User(class)'
 'Loan(class)' - 'Loan(class)'
-Attributes:
 'Book(class):title' - 'title'
 'Book(class):ISBN' - 'isbn'
 'User(class):name' - 'name'
 'User(class):email' - 'email'
 'User(class):ID' - 'id'
 'Loan(class):startDate' - 'startDate'
 'Loan(class):endDate' - 'endDate'
-Relationships:
--------------------------------------------------------------------------------
Library System(LS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             4                   3                   6                   
Attributes          13                  7                   10                  
Associations        0                   0                   3                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------5/5------Library System(LS):
------------------------------------------------------------
1st conversation AI:
1. Relevant nouns:
- Book
- User
- Member User
- Guest User

2. Key objects/entities:
- Book
- User

3. Enumerations:
- UserType(MEMBER, GUEST)

4. Classes:
- Book
- User

5. Attributes:
- Book(title: string, barcode: string, ISBN: string, numPages: int)
- User(name: string, email: string, address: string, ID: string)
- User(userType: UserType)
- Loan(startDate: date, endDate: date)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + UserType(MEMBER, GUEST)
Classes:
   + Book(title: String, barcode: String, ISBN: String, numPages: int)
   + User(name: String, email: String, address: String, ID: String, userType: UserType)
   + Loan(startDate: Date, endDate: Date)
```

Structure Model_Gen:
 Classes:
Class: UserType (enum) - Enum Attributes: [MEMBER, GUEST], Class Attributes: []
Class: Book (class) - Enum Attributes: [], Class Attributes: [title:String,barcode:String,ISBN:String,numPages:int]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,address:String,ID:String,userType:UserType]
Class: Loan (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date]
Relationships:
--------------------------------------------------------------------------------
--5/5--Classes and attributes matching process:
-Class:
 'Book(class)' - 'Book(class)'
 'User(class)' - 'User(class)'
 'Loan(class)' - 'Loan(class)'
-Attributes:
 'Book(class):title' - 'title'
 'Book(class):ISBN' - 'isbn'
 'User(class):name' - 'name'
 'User(class):email' - 'email'
 'User(class):ID' - 'id'
 'Loan(class):startDate' - 'startDate'
 'Loan(class):endDate' - 'endDate'
-Relationships:
--------------------------------------------------------------------------------
Library System(LS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             4                   3                   6                   
Attributes          13                  7                   10                  
Associations        0                   0                   3                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
Library System(LS), avg-method2
--------------------------------------------------------------------------------
Metric              Precision      Recall         F1             F2             
--------------------------------------------------------------------------------
Classes             0.714          0.500          0.588          0.532
Attributes          0.554          0.720          0.626          0.679
Associations        0.000          0.000          0.000          0.000
Inheritances        0.000          0.000          0.000          0.000
--------------------------------------------------------------------------------
