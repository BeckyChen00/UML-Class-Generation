------------------------------------------------------------
---------------------1/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Service Category
- Branch
- Address
- User
- Customer
- Account
- Employee

3. Enumerations:
- ServiceCategoryType(national, international)
- AccountType(checking, savings)

4. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank()
  - type: BankType
  - serviceCategory: ServiceCategoryType

- Branch()
  - type: BranchType
  - addresses: List[Address]
  - isMainBranch: boolean
  - isExpressBranch: boolean

- User()
  - name: string

- Customer()
  - type: CustomerType
  - accounts: List[Account]
  - personalBanker: Employee

- Account()
  - number: string
  - type: AccountType
  - isJointAccount: boolean

- Employee()
  - type: EmployeeType
  - branches: List[Branch]
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ServiceCategoryType(national, international)
   + AccountType(checking, savings)

Classes:
   + Bank(type: BankType, serviceCategory: ServiceCategoryType)
   + Branch(type: BranchType, addresses: List[Address], isMainBranch: boolean, isExpressBranch: boolean)
   + User(name: String)
   + Customer(type: CustomerType, accounts: List[Account], personalBanker: Employee)
   + Account(number: String, type: AccountType, isJointAccount: boolean)
   + Employee(type: EmployeeType, branches: List[Branch])
```

Structure Model_Gen:
 Classes:
Class: ServiceCategoryType (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [type:BankType,serviceCategory:ServiceCategoryType]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [type:BranchType,addresses:List[Address],isMainBranch:boolean,isExpressBranch:boolean]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [type:CustomerType,accounts:List[Account],personalBanker:Employee]
Class: Account (class) - Enum Attributes: [], Class Attributes: [number:String,type:AccountType,isJointAccount:boolean]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [type:EmployeeType,branches:List[Branch]]
Relationships:
--------------------------------------------------------------------------------
--1/5--Classes and attributes matching process:
-Class:
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'ServiceCategoryType(enum)' - 'ServiceCategory(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'AccountType(enum):savings' - 'savings'
 'Bank(class):type' - 'type'
 'Branch(class):type' - 'type'
 'Account(class):number' - 'number'
 'Account(class):type' - 'type'
 'ServiceCategoryType(enum):national' - 'national'
 'ServiceCategoryType(enum):international' - 'international'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             8                   8                   15                  
Attributes          19                  8                   25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------2/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Service Category
- Branch
- Address
- User
- Customer
- Account
- Employee
- Personal Banker

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)
- AccountType(checking, savings)

4. Classes and Attributes:
- Bank(serviceCategory: ServiceCategory)
- Branch(mainBranch: boolean, expressBranch: boolean)
- User(name: string)
- Customer(customerType: enum[General, VIP], personalBanker: Employee)
- Account(accountNumber: string, accountType: AccountType, isJointAccount: boolean)
- Employee(employeeType: enum[Teller, Manager, Loan Officer], branches: list[Branch])
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
   + AccountType(checking, savings)

Classes:
   + Bank(serviceCategory: ServiceCategory)
   + Branch(mainBranch: boolean, expressBranch: boolean)
   + User(name: String)
   + Customer(customerType: AccountType, personalBanker: Employee)
   + Account(accountNumber: String, accountType: AccountType, isJointAccount: boolean)
   + Employee(employeeType: EmployeeType, branches: List<Branch>)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [serviceCategory:ServiceCategory]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [mainBranch:boolean,expressBranch:boolean]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [customerType:AccountType,personalBanker:Employee]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:String,accountType:AccountType,isJointAccount:boolean]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [employeeType:EmployeeType,branches:List<Branch>]
Relationships:
--------------------------------------------------------------------------------
--2/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'AccountType(enum):savings' - 'savings'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             9                   9                   15                  
Attributes          17                  6                   25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------3/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- Address
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Branch
- Address
- User
- Customer
- Account
- Employee

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)
- CustomerType(general, VIP)
- AccountType(checking, savings)

4. Classes:
- Bank
- Branch
- Address
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank(type: BankType, serviceCategory: ServiceCategory)
- Branch(mainBranch: boolean, branchType: string)
- Address(addressType: string)
- User(name: string)
- Customer(customerType: CustomerType, personalBanker: Employee)
- Account(accountNumber: string, accountType: AccountType)
- Employee(employeeType: string, branches: List<Branch>)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
   + CustomerType(general, VIP)
   + AccountType(checking, savings)
Classes:
   + Bank(type: BankType, serviceCategory: ServiceCategory)
   + Branch(mainBranch: boolean, branchType: String)
   + Address(addressType: String)
   + User(name: String)
   + Customer(customerType: CustomerType, personalBanker: Employee)
   + Account(accountNumber: String, accountType: AccountType)
   + Employee(employeeType: String, branches: List<Branch>)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: CustomerType (enum) - Enum Attributes: [general, VIP], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [type:BankType,serviceCategory:ServiceCategory]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [mainBranch:boolean,branchType:String]
Class: Address (class) - Enum Attributes: [], Class Attributes: [addressType:String]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [customerType:CustomerType,personalBanker:Employee]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:String,accountType:AccountType]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [employeeType:String,branches:List<Branch>]
Relationships:
--------------------------------------------------------------------------------
--3/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Address(class)' - 'Address(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'CustomerType(enum)' - 'CustomerCategory(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'AccountType(enum):savings' - 'savings'
 'Bank(class):type' - 'type'
 'CustomerType(enum):general' - 'general'
 'CustomerType(enum):VIP' - 'vip'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  11                  15                  
Attributes          20                  9                   25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------4/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Service Category
- Branch
- Address
- User
- Customer
- Account
- Employee
- Personal Banker

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)
- AccountType(checking, savings)
- CustomerType(general, VIP)
- EmployeeType(teller, manager, loan officer)

4. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank()
  - name: string
  - type: BankType
  - serviceCategory: ServiceCategory

- Branch()
  - branchId: int
  - addresses: list<Address>
  - branchType: string (main branch/express branch)

- User()
  - userId: int
  - name: string

- Customer()
  - customerId: int
  - userType: CustomerType
  - accounts: list<Account>
  - personalBanker: Employee

- Account()
  - accountNumber: int
  - accountType: AccountType
  - isJointAccount: boolean
  - owners: list<Customer>

- Employee()
  - employeeId: int
  - employeeType: EmployeeType
  - branches: list<Branch>
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
   + AccountType(checking, savings)
   + CustomerType(general, VIP)
   + EmployeeType(teller, manager, loan officer)

Classes:
   + Bank(name: String, type: BankType, serviceCategory: ServiceCategory)
   + Branch(branchId: int, addresses: list<Address>, branchType: String)
   + User(userId: int, name: String)
   + Customer(customerId: int, userType: CustomerType, accounts: list<Account>, personalBanker: Employee)
   + Account(accountNumber: int, accountType: AccountType, isJointAccount: boolean, owners: list<Customer>)
   + Employee(employeeId: int, employeeType: EmployeeType, branches: list<Branch>)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: CustomerType (enum) - Enum Attributes: [general, VIP], Class Attributes: []
Class: EmployeeType (enum) - Enum Attributes: [teller, manager, officer], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [name:String,type:BankType,serviceCategory:ServiceCategory]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [branchId:int,addresses:list<Address>,branchType:String]
Class: User (class) - Enum Attributes: [], Class Attributes: [userId:int,name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [customerId:int,userType:CustomerType,accounts:list<Account>,personalBanker:Employee]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:int,accountType:AccountType,isJointAccount:boolean,owners:list<Customer>]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [employeeId:int,employeeType:EmployeeType,branches:list<Branch>]
Relationships:
--------------------------------------------------------------------------------
--4/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'CustomerType(enum)' - 'CustomerCategory(enum)'
 'EmployeeType(enum)' - 'EmpPosition(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'AccountType(enum):savings' - 'savings'
 'Bank(class):type' - 'type'
 'CustomerType(enum):general' - 'general'
 'CustomerType(enum):VIP' - 'vip'
 'EmployeeType(enum):teller' - 'teller'
 'EmployeeType(enum):manager' - 'manager'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  11                  15                  
Attributes          30                  11                  25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------5/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
# Relevant Nouns:
1. Bank
2. Service Category
3. Branch
4. Address
5. User
6. Customer
7. Account
8. Personal Banker
9. Employee
10. Teller
11. Manager
12. Loan Officer

# Key Objects/Entities:
1. Bank
2. Service Category
3. Branch
4. Address
5. User
6. Customer
7. Account
8. Personal Banker
9. Employee
10. Teller
11. Manager
12. Loan Officer

# Enumerations:
1. BankType(public, private)
2. ServiceCategoryType(national, international)
3. AccountType(checking, savings)
4. EmployeeType(teller, manager, loan officer)

# Classes:
1. Bank
2. ServiceCategory
3. Branch
4. Address
5. User
6. Customer
7. Account
8. PersonalBanker
9. Employee

# Attributes:
1. Bank()
2. ServiceCategory()
3. Branch()
4. Address(temporaryAddress: string, permanentAddress: string, branchType: string)
5. User(name: string)
6. Customer(customerType: string)
7. Account(accountNumber: string, accountType: string, isJointAccount: boolean)
8. PersonalBanker()
9. Employee(employeeType: string, branchesWorked: list)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategoryType(national, international)
   + AccountType(checking, savings)
   + EmployeeType(teller, manager, loanOfficer)

Classes:
   + Bank()
   + ServiceCategory()
   + Branch()
   + Address(temporaryAddress: String, permanentAddress: String, branchType: String)
   + User(name: String)
   + Customer(customerType: String)
   + Account(accountNumber: String, accountType: String, isJointAccount: boolean)
   + PersonalBanker()
   + Employee(employeeType: String, branchesWorked: List)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategoryType (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: EmployeeType (enum) - Enum Attributes: [teller, manager, loanOfficer], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: []
Class: ServiceCategory (class) - Enum Attributes: [], Class Attributes: []
Class: Branch (class) - Enum Attributes: [], Class Attributes: []
Class: Address (class) - Enum Attributes: [], Class Attributes: [temporaryAddress:String,permanentAddress:String,branchType:String]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [customerType:String]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:String,accountType:String,isJointAccount:boolean]
Class: PersonalBanker (class) - Enum Attributes: [], Class Attributes: []
Class: Employee (class) - Enum Attributes: [], Class Attributes: [employeeType:String,branchesWorked:List]
Relationships:
--------------------------------------------------------------------------------
--5/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'ServiceCategory(class)' - 'ServiceCategory(enum)'
 'Branch(class)' - 'Branch(class)'
 'Address(class)' - 'Address(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'EmployeeType(enum)' - 'EmpPosition(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'AccountType(enum):savings' - 'savings'
 'EmployeeType(enum):teller' - 'teller'
 'EmployeeType(enum):manager' - 'manager'
 'EmployeeType(enum):loanOfficer' - 'loanOfficer'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  11                  15                  
Attributes          19                  7                   25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
Bank Management System (BMS), avg-method2
--------------------------------------------------------------------------------
Metric              Precision      Recall         F1             F2             
--------------------------------------------------------------------------------
Classes             0.962          0.667          0.787          0.710
Attributes          0.390          0.368          0.379          0.372
Associations        0.000          0.000          0.000          0.000
Inheritances        0.000          0.000          0.000          0.000
--------------------------------------------------------------------------------
