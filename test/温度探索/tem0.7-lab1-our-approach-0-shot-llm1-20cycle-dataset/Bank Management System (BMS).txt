------------------------------------------------------------
---------------------1/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Branch
- User
- Customer
- Account
- Employee

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)
- AddressType(temporary, permanent)
- BranchType(main, express)
- CustomerType(general, VIP)
- AccountType(checking, savings)

4. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank()
  - type: BankType
  - serviceCategory: ServiceCategory

- Branch()
  - type: BranchType
  - addresses: list of Address
  - bankId: int

- User()
  - name: string

- Customer()
  - type: CustomerType
  - accounts: list of Account
  - personalBankerId: int

- Account()
  - number: string
  - type: AccountType
  - holders: list of User

- Employee()
  - role: string
  - branches: list of Branch
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
   + AddressType(temporary, permanent)
   + BranchType(main, express)
   + CustomerType(general, VIP)
   + AccountType(checking, savings)

Classes:
   + Bank(type: BankType, serviceCategory: ServiceCategory)
   + Branch(type: BranchType, addresses: list of Address, bankId: int)
   + User(name: String)
   + Customer(type: CustomerType, accounts: list of Account, personalBankerId: int)
   + Account(number: String, type: AccountType, holders: list of User)
   + Employee(role: String, branches: list of Branch)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AddressType (enum) - Enum Attributes: [temporary, permanent], Class Attributes: []
Class: BranchType (enum) - Enum Attributes: [main, express], Class Attributes: []
Class: CustomerType (enum) - Enum Attributes: [general, VIP], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [type:BankType,serviceCategory:ServiceCategory]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [type:BranchType,addresses:list of Address,bankId:int]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [type:CustomerType,accounts:list of Account,personalBankerId:int]
Class: Account (class) - Enum Attributes: [], Class Attributes: [number:String,type:AccountType,holders:list of User]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [role:String,branches:list of Branch]
Relationships:
--------------------------------------------------------------------------------
--1/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'AddressType(enum)' - 'AddressType(enum)'
 'BranchType(enum)' - 'BranchType(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'CustomerType(enum)' - 'CustomerCategory(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'AddressType(enum):temporary' - 'temporary'
 'AddressType(enum):permanent' - 'permanent'
 'BranchType(enum):main' - 'main'
 'BranchType(enum):express' - 'express'
 'AccountType(enum):savings' - 'savings'
 'Bank(class):type' - 'type'
 'Branch(class):type' - 'type'
 'Account(class):number' - 'number'
 'Account(class):type' - 'type'
 'CustomerType(enum):general' - 'general'
 'CustomerType(enum):VIP' - 'vip'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             12                  12                  15                  
Attributes          26                  16                  25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------2/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Branch
- User
- Customer
- Account
- Employee

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)
- AddressType(temporary, permanent)
- BranchType(main branch, express branch)
- CustomerType(general customer, VIP customer)
- AccountType(checking account, savings account)
- EmployeeRole(teller, manager, loan officer)

4. Classes:
- Bank
- Branch
- User (can be further split into Customer and Employee subclasses)

5. Attributes:
- Bank()
- Branch(address: AddressType, branchType: BranchType)
- User(name: string)
- Customer(customerType: CustomerType, personalBanker: Employee)
- Account(accountNumber: int, accountType: AccountType, isJointAccount: bool)
- Employee(name: string, role: EmployeeRole, branches: list[Branch])
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
   + AddressType(temporary, permanent)
   + BranchType(mainBranch, expressBranch)
   + CustomerType(generalCustomer, VIPCustomer)
   + AccountType(checkingAccount, savingsAccount)
   + EmployeeRole(teller, manager, loanOfficer)

Classes:
   + Bank()
   + Branch(address: AddressType, branchType: BranchType)
   + User(name: String)
   + Customer(customerType: CustomerType, personalBanker: Employee)
   + Account(accountNumber: int, accountType: AccountType, isJointAccount: boolean)
   + Employee(name: String, role: EmployeeRole, branches: List<Branch>)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AddressType (enum) - Enum Attributes: [temporary, permanent], Class Attributes: []
Class: BranchType (enum) - Enum Attributes: [mainBranch, expressBranch], Class Attributes: []
Class: CustomerType (enum) - Enum Attributes: [generalCustomer, VIPCustomer], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checkingAccount, savingsAccount], Class Attributes: []
Class: EmployeeRole (enum) - Enum Attributes: [teller, manager, loanOfficer], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: []
Class: Branch (class) - Enum Attributes: [], Class Attributes: [address:AddressType,branchType:BranchType]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [customerType:CustomerType,personalBanker:Employee]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:int,accountType:AccountType,isJointAccount:boolean]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [name:String,role:EmployeeRole,branches:List<Branch>]
Relationships:
--------------------------------------------------------------------------------
--2/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'AddressType(enum)' - 'AddressType(enum)'
 'BranchType(enum)' - 'BranchType(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'EmployeeRole(enum)' - 'EmpPosition(enum)'
 'User(class)' - 'Person(class)'
 'CustomerType(enum)' - 'CustomerCategory(enum)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'AddressType(enum):temporary' - 'temporary'
 'AddressType(enum):permanent' - 'permanent'
 'EmployeeRole(enum):teller' - 'teller'
 'EmployeeRole(enum):manager' - 'manager'
 'EmployeeRole(enum):loanOfficer' - 'loanOfficer'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  13                  15                  
Attributes          26                  10                  25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------3/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Branch
- User
- Customer
- Account
- Employee

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)
- AddressType(temporary, permanent)
- BranchType(main, express)
- CustomerType(general, VIP)
- AccountType(checking, savings)
- EmployeeRole(teller, manager, loan officer)

4. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank()
  - bankType: BankType
  - serviceCategory: ServiceCategory

- Branch()
  - addressType: AddressType
  - branchType: BranchType
  - mainBranch: boolean

- User()
  - name: string

- Customer()
  - customerType: CustomerType
  - personalBanker: Employee

- Account()
  - accountNumber: string
  - accountType: AccountType
  - jointAccount: boolean

- Employee()
  - name: string
  - employeeRole: EmployeeRole
  - branches: List<Branch>
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
   + AddressType(temporary, permanent)
   + BranchType(main, express)
   + CustomerType(general, VIP)
   + AccountType(checking, savings)
   + EmployeeRole(teller, manager, loanOfficer)

Classes:
   + Bank(bankType: BankType, serviceCategory: ServiceCategory)
   + Branch(addressType: AddressType, branchType: BranchType, mainBranch: boolean)
   + User(name: String)
   + Customer(customerType: CustomerType, personalBanker: Employee)
   + Account(accountNumber: String, accountType: AccountType, jointAccount: boolean)
   + Employee(name: String, employeeRole: EmployeeRole, branches: List<Branch>)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AddressType (enum) - Enum Attributes: [temporary, permanent], Class Attributes: []
Class: BranchType (enum) - Enum Attributes: [main, express], Class Attributes: []
Class: CustomerType (enum) - Enum Attributes: [general, VIP], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: EmployeeRole (enum) - Enum Attributes: [teller, manager, loanOfficer], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [bankType:BankType,serviceCategory:ServiceCategory]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [addressType:AddressType,branchType:BranchType,mainBranch:boolean]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [customerType:CustomerType,personalBanker:Employee]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:String,accountType:AccountType,jointAccount:boolean]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [name:String,employeeRole:EmployeeRole,branches:List<Branch>]
Relationships:
--------------------------------------------------------------------------------
--3/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'AddressType(enum)' - 'AddressType(enum)'
 'BranchType(enum)' - 'BranchType(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'CustomerType(enum)' - 'CustomerCategory(enum)'
 'EmployeeRole(enum)' - 'EmpPosition(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'AddressType(enum):temporary' - 'temporary'
 'AddressType(enum):permanent' - 'permanent'
 'BranchType(enum):main' - 'main'
 'BranchType(enum):express' - 'express'
 'AccountType(enum):savings' - 'savings'
 'CustomerType(enum):general' - 'general'
 'CustomerType(enum):VIP' - 'vip'
 'EmployeeRole(enum):teller' - 'teller'
 'EmployeeRole(enum):manager' - 'manager'
 'EmployeeRole(enum):loanOfficer' - 'loanOfficer'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  13                  15                  
Attributes          29                  15                  25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------4/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Service Category
- Branch
- Address
- User
- Customer
- Account
- Employee

3. Enumerations:
- BankType(public, private)
- ServiceCategory(national, international)
- AccountType(checking, savings)
- EmployeeType(teller, manager, loan officer)

4. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank(serviceCategory: ServiceCategory)
- Branch(addresses: List<Address>, branchType: BranchType)
- User(name: String)
- Customer(customerType: CustomerType, personalBanker: Employee)
- Account(accountNumber: String, accountType: AccountType)
- Employee(employeeType: EmployeeType, branches: List<Branch>)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BankType(public, private)
   + ServiceCategory(national, international)
   + AccountType(checking, savings)
   + EmployeeType(teller, manager, loanOfficer)

Classes:
   + Bank(serviceCategory: ServiceCategory)
   + Branch(addresses: List<Address>, branchType: BranchType)
   + User(name: String)
   + Customer(customerType: CustomerType, personalBanker: Employee)
   + Account(accountNumber: String, accountType: AccountType)
   + Employee(employeeType: EmployeeType, branches: List<Branch)
```

Structure Model_Gen:
 Classes:
Class: BankType (enum) - Enum Attributes: [public, private], Class Attributes: []
Class: ServiceCategory (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: EmployeeType (enum) - Enum Attributes: [teller, manager, loanOfficer], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [serviceCategory:ServiceCategory]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [addresses:List<Address>,branchType:BranchType]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [customerType:CustomerType,personalBanker:Employee]
Class: Account (class) - Enum Attributes: [], Class Attributes: [accountNumber:String,accountType:AccountType]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [employeeType:EmployeeType,branches:List<Branch]
Relationships:
--------------------------------------------------------------------------------
--4/5--Classes and attributes matching process:
-Class:
 'BankType(enum)' - 'BankType(enum)'
 'ServiceCategory(enum)' - 'ServiceCategory(enum)'
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'EmployeeType(enum)' - 'EmpPosition(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'BankType(enum):public' - 'public'
 'BankType(enum):private' - 'private'
 'ServiceCategory(enum):national' - 'national'
 'ServiceCategory(enum):international' - 'international'
 'AccountType(enum):savings' - 'savings'
 'EmployeeType(enum):teller' - 'teller'
 'EmployeeType(enum):manager' - 'manager'
 'EmployeeType(enum):loanOfficer' - 'loanOfficer'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  10                  15                  
Attributes          19                  9                   25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------5/5------Bank Management System (BMS):
------------------------------------------------------------
1st conversation AI:
1. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

2. Key Objects/Entities:
- Bank
- Service Category
- Branch
- Address
- User
- Customer
- Account
- Employee
- Personal Banker

3. Enumerations:
- ServiceCategoryType(national, international)
- AccountType(checking, savings)
- EmployeeType(teller, manager, loan officer)

4. Classes:
- Bank
- Branch
- User
- Customer
- Account
- Employee

5. Attributes:
- Bank()
    - type: String
    - serviceCategory: ServiceCategoryType

- Branch()
    - type: String
    - addresses: List<Address>
    - branchType: String (main branch, express branch)

- User()
    - name: String

- Customer()
    - type: String (general customer, VIP customer)
    - accounts: List<Account>
    - personalBanker: Employee

- Account()
    - number: String
    - type: AccountType
    - owners: List<Customer>

- Employee()
    - type: EmployeeType
    - branches: List<Branch>
    - customers: List<Customer>
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ServiceCategoryType(national, international)
   + AccountType(checking, savings)
   + EmployeeType(teller, manager, loanOfficer)

Classes:
   + Bank(type: String, serviceCategory: ServiceCategoryType)
   + Branch(type: String, addresses: List<Address>, branchType: String)
   + User(name: String)
   + Customer(type: String, accounts: List<Account>, personalBanker: Employee)
   + Account(number: String, type: AccountType, owners: List<Customer)
   + Employee(type: EmployeeType, branches: List<Branch>, customers: List<Customer)
```

Structure Model_Gen:
 Classes:
Class: ServiceCategoryType (enum) - Enum Attributes: [national, international], Class Attributes: []
Class: AccountType (enum) - Enum Attributes: [checking, savings], Class Attributes: []
Class: EmployeeType (enum) - Enum Attributes: [teller, manager, loanOfficer], Class Attributes: []
Class: Bank (class) - Enum Attributes: [], Class Attributes: [type:String,serviceCategory:ServiceCategoryType]
Class: Branch (class) - Enum Attributes: [], Class Attributes: [type:String,addresses:List<Address>,branchType:String]
Class: User (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Customer (class) - Enum Attributes: [], Class Attributes: [type:String,accounts:List<Account>,personalBanker:Employee]
Class: Account (class) - Enum Attributes: [], Class Attributes: [number:String,type:AccountType,owners:List<Customer]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [type:EmployeeType,branches:List<Branch>,customers:List<Customer]
Relationships:
--------------------------------------------------------------------------------
--5/5--Classes and attributes matching process:
-Class:
 'AccountType(enum)' - 'AccountType(enum)'
 'Bank(class)' - 'Bank(class)'
 'Branch(class)' - 'Branch(class)'
 'Customer(class)' - 'Customer(class)'
 'Account(class)' - 'Account(class)'
 'Employee(class)' - 'Employee(class)'
 'ServiceCategoryType(enum)' - 'ServiceCategory(enum)'
 'EmployeeType(enum)' - 'EmpPosition(enum)'
 'User(class)' - 'Person(class)'
-Attributes:
 'AccountType(enum):savings' - 'savings'
 'Bank(class):type' - 'type'
 'Branch(class):type' - 'type'
 'Account(class):number' - 'number'
 'Account(class):type' - 'type'
 'ServiceCategoryType(enum):national' - 'national'
 'ServiceCategoryType(enum):international' - 'international'
 'EmployeeType(enum):teller' - 'teller'
 'EmployeeType(enum):manager' - 'manager'
 'EmployeeType(enum):loanOfficer' - 'loanOfficer'
 'User(class):name' - 'name'
-Relationships:
--------------------------------------------------------------------------------
Bank Management System (BMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             9                   9                   15                  
Attributes          22                  11                  25                  
Associations        0                   0                   7                   
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
Bank Management System (BMS), avg-method2
--------------------------------------------------------------------------------
Metric              Precision      Recall         F1             F2             
--------------------------------------------------------------------------------
Classes             1.000          0.760          0.864          0.798
Attributes          0.500          0.488          0.494          0.490
Associations        0.000          0.000          0.000          0.000
Inheritances        0.000          0.000          0.000          0.000
--------------------------------------------------------------------------------
