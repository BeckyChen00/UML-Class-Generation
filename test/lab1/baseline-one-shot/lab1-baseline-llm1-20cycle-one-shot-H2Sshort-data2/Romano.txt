------------------------------------------------------------
---------------------1/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
MenuCategory(Appetizer, Entree, Dessert, Beverage)
UnitOfMeasure(Each, Ounce, Sheet, Pound, Gram, Dozen)
Classes:
Romano()
Reservation(string reservationNumber, Date date, Time time, int numberOfPeople, string name, string phoneNumber, string seatingPreference, string smokingPreference, string groupname, string paymentMethod)
Table(string tableNumber, string description, int capacity)
Person(string name, Date dateOfBirth, string driverLicenseNumber)
abstract Employee(string name, Date dateOfBirth, string driverLicenseNumber)
Manager(string name, Date dateOfBirth, string driverLicenseNumber)
Maitre(string name, Date dateOfBirth, string driverLicenseNumber)
Waiter(string name, Date dateOfBirth, string driverLicenseNumber)
Bartender(string name, Date dateOfBirth, string driverLicenseNumber)
Chef(string name, Date dateOfBirth, string driverLicenseNumber)
Cook(string name, Date dateOfBirth, string driverLicenseNumber)
BusPerson(string name, Date dateOfBirth, string driverLicenseNumber)
Dishwasher(string name, Date dateOfBirth, string driverLicenseNumber)
MenuItem(string menuItemNumber, string description, int prepTime, MenuCategory category, float priceLunch, float priceDinner, float priceHappyHour)
FoodItem(string foodItemNumber, string description, boolean purchaseFlag)
ReservationMenuItems(string reservationNumber, string menuItemNumber, Time timeOrdered)
MenuItemFoodItem(int parentFoodItemNumber, int childFoodItemNumber, int quantity)

Relationships:
1 Romano contain *Reservation
1 Romano contain *Table
1 Romano contain *Employee
1 Romano contain *MenuItem
1 Romano contain *FoodItem
1 Reservation associate *Table
1 Reservation associate *Waiter
1 Reservation associate *MenuItem
1 Reservation associate *MenuItem
1 MenuItem associate *FoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: MenuCategory (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [Each, Ounce, Sheet, Pound, Gram, Dozen], Class Attributes: []
Class: Romano (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:string,date:Date,time:Time,numberOfPeople:int,name:string,phoneNumber:string,seatingPreference:string,smokingPreference:string,groupname:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:string,description:string,capacity:int]
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: abstract (class) - Enum Attributes: [], Class Attributes: []
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:string,description:string,prepTime:int,category:MenuCategory,priceLunch:float,priceDinner:float,priceHappyHour:float]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:string,description:string,purchaseFlag:boolean]
Class: ReservationMenuItems (class) - Enum Attributes: [], Class Attributes: [reservationNumber:string,menuItemNumber:string,timeOrdered:Time]
Class: MenuItemFoodItem (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:int,childFoodItemNumber:int,quantity:int]
Relationships:
 1 Romano association * Reservation
 1 Romano association * Table
 1 Romano association * Employee
 1 Romano association * MenuItem
 1 Romano association * FoodItem
 1 Reservation association * Table
 1 Reservation association * Waiter
 1 Reservation association * MenuItem
 1 MenuItem association * FoodItem
--------------------------------------------------------------------------------
--1/20--Classes and attributes matching process:
-Classes:
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'MenuCategory(enum)'	-	'MenuItemType(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Person(class)'	-	'Employee(class)'
 'MenuItemFoodItem(class)'	-	'Ingredient(class)'
-Attributes:
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):description'	-	'description'
 'MenuCategory(enum):Appetizer'	-	'appetizer'
 'MenuCategory(enum):Entree'	-	'entree'
 'MenuCategory(enum):Dessert'	-	'dessert'
 'UnitOfMeasure(enum):Ounce'	-	'ounce'
 'UnitOfMeasure(enum):Sheet'	-	'sheet'
 'UnitOfMeasure(enum):Pound'	-	'pound'
 'UnitOfMeasure(enum):Gram'	-	'gram'
 'UnitOfMeasure(enum):Dozen'	-	'dozen'
 'Person(class):name'	-	'name'
 'Person(class):dateOfBirth'	-	'dateOfBirth'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
 'MenuItemFoodItem(class):quantity'	-	'quantity'
-Relationships:
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             19                  8                   17                  
Attributes          66                  23                  51                  
Associations        8                   1                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------2/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
ReservationCategory(Individual, Banquet)
TableSize(2-person, 4-person, 6-person)
MenuItemCategory(Appetizer, Entree, Dessert, Beverage)
UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)

Classes:
Restaurant()
Reservation(int reservationNumber, Date time, int numberOfPeople, string name, string phoneNumber)
IndividualReservation(bool seatingPreference, bool smokingPreference)
BanquetReservation(string groupName, string paymentMethod)
Table(int tableNumber, string description, TableSize size)
Manager(string name, Date dateOfBirth, string driverLicenseNumber)
Maitre(string name, Date dateOfBirth, string driverLicenseNumber)
Waiter(string name, Date dateOfBirth, string driverLicenseNumber)
Bartender(string name, Date dateOfBirth, string driverLicenseNumber)
Chef(string name, Date dateOfBirth, string driverLicenseNumber)
Cook(string name, Date dateOfBirth, string driverLicenseNumber)
BusPerson(string name, Date dateOfBirth, string driverLicenseNumber)
Dishwasher(string name, Date dateOfBirth, string driverLicenseNumber)
MenuItem(int menuItemNumber, string description, int prepTime, MenuItemCategory category, float lunchPrice, float dinnerPrice, float happyHourPrice)
FoodItem(int foodItemNumber, string description, bool purchaseFlag, UnitOfMeasure unitOfMeasure)
MenuOrder(int reservationNumber, int menuItemNumber, Date timeOrdered, float quantity)
Ingredient(int parentFoodItemNumber, int childFoodItemNumber, float quantity)

Relationships:
1 Restaurant contain *Reservation
1 Restaurant contain *Table
1 Restaurant contain *Manager
1 Restaurant contain *Maitre
1 Restaurant contain *Waiter
1 Restaurant contain *Bartender
1 Restaurant contain *Chef
1 Restaurant contain *Cook
1 Restaurant contain *BusPerson
1 Restaurant contain *Dishwasher
1 Reservation associate 1 Table
1 Reservation associate *MenuOrder
1 Reservation associate 1 Waiter
1 MenuItem associate *MenuOrder
1 MenuItem associate *Ingredient
1 FoodItem associate *Ingredient

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationCategory (enum) - Enum Attributes: [Individual, Banquet], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: MenuItemCategory (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,time:Date,numberOfPeople:int,name:string,phoneNumber:string]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:bool,smokingPreference:bool]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:string,size:TableSize]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:string,prepTime:int,category:MenuItemCategory,lunchPrice:float,dinnerPrice:float,happyHourPrice:float]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:bool,unitOfMeasure:UnitOfMeasure]
Class: MenuOrder (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,menuItemNumber:int,timeOrdered:Date,quantity:float]
Class: Ingredient (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:int,childFoodItemNumber:int,quantity:float]
Relationships:
 1 Restaurant association * Reservation
 1 Restaurant association * Table
 1 Restaurant association * Manager
 1 Restaurant association * Maitre
 1 Restaurant association * Waiter
 1 Restaurant association * Bartender
 1 Restaurant association * Chef
 1 Restaurant association * Cook
 1 Restaurant association * BusPerson
 1 Restaurant association * Dishwasher
 1 Reservation association 1 Table
 1 Reservation association * MenuOrder
 1 Reservation association 1 Waiter
 1 MenuItem association * MenuOrder
 1 MenuItem association * Ingredient
 1 FoodItem association * Ingredient
--------------------------------------------------------------------------------
--2/20--Classes and attributes matching process:
-Classes:
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'Ingredient(class)'	-	'Ingredient(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'MenuItemCategory(enum)'	-	'MenuItemType(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
-Attributes:
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):description'	-	'description'
 'Ingredient(class):quantity'	-	'quantity'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'MenuItemCategory(enum):Appetizer'	-	'appetizer'
 'MenuItemCategory(enum):Entree'	-	'entree'
 'MenuItemCategory(enum):Dessert'	-	'dessert'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * Manager'	-	' 1 Restaurant association * Employee'
 ' 1 Reservation association 1 Table'	-	' 1 Reservation association 0..* Table'
 ' 1 MenuItem association * Ingredient'	-	' 1 MenuItem association * Ingredient'
 ' 1 FoodItem association * Ingredient'	-	' 1 FoodItem association * Ingredient'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             21                  12                  17                  
Attributes          69                  29                  51                  
Associations        16                  6                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------3/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)
Classes:
Restaurant()
Reservation(int reservationNumber, Date time, int numberPeople, string name, string phoneNumber)
IndividualReservation(bool inside, bool patio, bool smoking, bool nonSmoking)
BanquetReservation(string groupName, string paymentMethod)
Table(int tableNumber, string description, int capacity)
ReservationTable(int reservationNumber, int tableNumber)
Person(string name, Date dateOfBirth, string driverLicenseNumber)
EmployeeRole()
Manager()
MaitreD()
Waiter()
Bartender()
Chef()
Cook()
BusPerson()
Dishwasher()
MenuItem(int menuItemNumber, string description, int prepTime, string type)
FoodItem(int foodItemNumber, string description, bool purchaseFlag)
FoodItemRelationship(int parentFoodItemNumber, int childFoodItemNumber, int quantity)

Relationships:
1 Restaurant contain *Reservation
1 Restaurant contain *Table
1 Restaurant contain *MenuItem
1 Restaurant contain *FoodItem
1 Reservation associate *ReservationTable
1 Person associate *EmployeeRole
1 EmployeeRole inherit Manager
1 EmployeeRole inherit MaitreD
1 EmployeeRole inherit Waiter
1 EmployeeRole inherit Bartender
1 EmployeeRole inherit Chef
1 EmployeeRole inherit Cook
1 EmployeeRole inherit BusPerson
1 EmployeeRole inherit Dishwasher
1 MenuItem associate *FoodItem
1 MenuItem associate *ReservationTable

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,time:Date,numberPeople:int,name:string,phoneNumber:string]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [inside:bool,patio:bool,smoking:bool,nonSmoking:bool]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:string,capacity:int]
Class: ReservationTable (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,tableNumber:int]
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: EmployeeRole (class) - Enum Attributes: [], Class Attributes: []
Class: Manager (class) - Enum Attributes: [], Class Attributes: []
Class: MaitreD (class) - Enum Attributes: [], Class Attributes: []
Class: Waiter (class) - Enum Attributes: [], Class Attributes: []
Class: Bartender (class) - Enum Attributes: [], Class Attributes: []
Class: Chef (class) - Enum Attributes: [], Class Attributes: []
Class: Cook (class) - Enum Attributes: [], Class Attributes: []
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: []
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:string,prepTime:int,type:string]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:bool]
Relationships:
 1 Restaurant association * Reservation
 1 Restaurant association * Table
 1 Restaurant association * MenuItem
 1 Restaurant association * FoodItem
 1 Reservation association * ReservationTable
 1 Person association * EmployeeRole
 False EmployeeRole inheritance False Manager
 False EmployeeRole inheritance False MaitreD
 False EmployeeRole inheritance False Waiter
 False EmployeeRole inheritance False Bartender
 False EmployeeRole inheritance False Chef
 False EmployeeRole inheritance False Cook
 False EmployeeRole inheritance False BusPerson
 False EmployeeRole inheritance False Dishwasher
 1 MenuItem association * FoodItem
 1 MenuItem association * ReservationTable
--------------------------------------------------------------------------------
--3/20--Classes and attributes matching process:
-Classes:
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Person(class)'	-	'Employee(class)'
 'EmployeeRole(class)'	-	'Role(enum)'
-Attributes:
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'MenuItem(class):type'	-	'type'
 'FoodItem(class):description'	-	'description'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Person(class):name'	-	'name'
 'Person(class):dateOfBirth'	-	'dateOfBirth'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * FoodItem'	-	' 1 Restaurant association * FoodItem'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             19                  10                  17                  
Attributes          32                  21                  51                  
Associations        8                   3                   13                  
Inheritances        8                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------4/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
UnitOfMeasure(Each, Ounce, Sheet, Pound, Gram, Dozen)
Role(Manager, Maitre, Waiter, Bartender, Chef, Cook, BusPerson, Dishwasher)
MenuCategory(Appetizer, Entree, Dessert, Beverage)
TableSize(2, 4, 6)

Classes:
RomanoRestaurant()
Reservation(int reservationNumber, Date dateTime, int numberOfPeople)
IndividualReservation(bool smokingPreference, bool seatingPreference)
BanquetReservation(string groupName, string paymentMethod)
Table(int tableNumber, string description, TableSize size)
Person(string name, Date birthDate, string driverLicenseNumber)
RestaurantManager(string name)
Maitre(string name)
Waiter(string name)
Bartender(string name)
Chef(string name)
Cook(string name)
BusPerson(string name)
Dishwasher(string name)
MenuItem(int itemNumber, string description, int prepTime, MenuCategory category)
FoodItem(int foodItemNumber, string description, bool purchaseFlag, UnitOfMeasure unitOfMeasure)
Ingredient(int parentFoodItemNumber, int childFoodItemNumber, int quantity)

Relationships:
1 RomanoRestaurant contain *Reservation
1 RomanoRestaurant contain *Table
1 RomanoRestaurant contain *Person
1 RomanoRestaurant contain *RestaurantManager
1 RomanoRestaurant contain *Maitre
1 RomanoRestaurant contain *Waiter
1 RomanoRestaurant contain *Bartender
1 RomanoRestaurant contain *Chef
1 RomanoRestaurant contain *Cook
1 RomanoRestaurant contain *BusPerson
1 RomanoRestaurant contain *Dishwasher
1 RomanoRestaurant contain *MenuItem
1 RomanoRestaurant contain *FoodItem
1 Reservation associate 1 Table
1 Reservation associate 1 Person
1 Reservation associate *MenuItem
1 Table associate *Reservation
1 Person associate 1 Role
1 Role associate *Person
1 MenuItem associate *FoodItem
1 FoodItem associate *MenuItem
1 FoodItem associate *Ingredient

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: UnitOfMeasure (enum) - Enum Attributes: [Each, Ounce, Sheet, Pound, Gram, Dozen], Class Attributes: []
Class: Role (enum) - Enum Attributes: [Manager, Maitre, Waiter, Bartender, Chef, Cook, BusPerson, Dishwasher], Class Attributes: []
Class: MenuCategory (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2, 4, 6], Class Attributes: []
Class: RomanoRestaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,dateTime:Date,numberOfPeople:int]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [smokingPreference:bool,seatingPreference:bool]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:string,size:TableSize]
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:string,birthDate:Date,driverLicenseNumber:string]
Class: RestaurantManager (class) - Enum Attributes: [], Class Attributes: [name:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [itemNumber:int,description:string,prepTime:int,category:MenuCategory]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:bool,unitOfMeasure:UnitOfMeasure]
Class: Ingredient (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:int,childFoodItemNumber:int,quantity:int]
Relationships:
 1 RomanoRestaurant association * Reservation
 1 RomanoRestaurant association * Table
 1 RomanoRestaurant association * Person
 1 RomanoRestaurant association * RestaurantManager
 1 RomanoRestaurant association * Maitre
 1 RomanoRestaurant association * Waiter
 1 RomanoRestaurant association * Bartender
 1 RomanoRestaurant association * Chef
 1 RomanoRestaurant association * Cook
 1 RomanoRestaurant association * BusPerson
 1 RomanoRestaurant association * Dishwasher
 1 RomanoRestaurant association * MenuItem
 1 RomanoRestaurant association * FoodItem
 1 Reservation association 1 Table
 1 Reservation association 1 Person
 1 Reservation association * MenuItem
 1 Table association * Reservation
 1 Person association 1 Role
 1 Role association * Person
 1 MenuItem association * FoodItem
 1 FoodItem association * MenuItem
 1 FoodItem association * Ingredient
--------------------------------------------------------------------------------
--4/20--Classes and attributes matching process:
-Classes:
 'Role(enum)'	-	'Role(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'Ingredient(class)'	-	'Ingredient(class)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'MenuCategory(enum)'	-	'MenuItemType(enum)'
 'TableSize(enum)'	-	'TableType(enum)'
 'Person(class)'	-	'Employee(class)'
-Attributes:
 'Role(enum):Manager'	-	'manager'
 'Role(enum):Maitre'	-	'Maitre'
 'Role(enum):Waiter'	-	'waiter'
 'Role(enum):Bartender'	-	'bartender'
 'Role(enum):Chef'	-	'chef'
 'Role(enum):Cook'	-	'cook'
 'Role(enum):BusPerson'	-	'busPerson'
 'Role(enum):Dishwasher'	-	'dishwasher'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):description'	-	'description'
 'Ingredient(class):quantity'	-	'quantity'
 'UnitOfMeasure(enum):Ounce'	-	'ounce'
 'UnitOfMeasure(enum):Sheet'	-	'sheet'
 'UnitOfMeasure(enum):Pound'	-	'pound'
 'UnitOfMeasure(enum):Gram'	-	'gram'
 'UnitOfMeasure(enum):Dozen'	-	'dozen'
 'MenuCategory(enum):Appetizer'	-	'appetizer'
 'MenuCategory(enum):Entree'	-	'entree'
 'MenuCategory(enum):Dessert'	-	'dessert'
 'Person(class):name'	-	'name'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Reservation association 1 Table'	-	' 1 Reservation association 0..* Table'
 ' 1 Reservation association 1 Person'	-	' 1 Reservation association 1 Employee'
 ' 1 FoodItem association * Ingredient'	-	' 1 FoodItem association * Ingredient'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             21                  12                  17                  
Attributes          53                  30                  51                  
Associations        22                  3                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------5/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
UnitOfMeasure(Each, Ounce, Sheet, Pound, Gram, Dozen)
ItemCategory(Appetizer, Entree, Dessert, Beverage)
Role(Manager, Maitre, Waiter, Bartender, Chef, Cook, BusPerson, Dishwasher)

Classes:
Romano()
Reservation(int reservationNumber, Date date, Time time, int numberOfPeople)
IndividualReservation(seatingPreference, smokingPreference)
BanquetReservation(groupName, paymentMethod)
Table(int tableNumber, string description, int capacity)
Person(string name, Date dateOfBirth, string driverLicenseNumber)
Menu()
MenuItem(int menuItemNumber, string description, int prepTime, ItemCategory category)
FoodItem(int foodItemNumber, string description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
Relation(parentFoodItemNumber, childFoodItemNumber, int quantity)

Relationships:
Romano contain *Reservation
Romano contain *Table
Romano contain *Person
Romano contain *Role
Reservation associate *Table
Reservation associate *Person
Reservation associate *MenuItem
MenuItem associate *FoodItem
FoodItem associate *Relation
FoodItem associate *UnitOfMeasure
Person associate *Role

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: UnitOfMeasure (enum) - Enum Attributes: [Each, Ounce, Sheet, Pound, Gram, Dozen], Class Attributes: []
Class: ItemCategory (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: Role (enum) - Enum Attributes: [Manager, Maitre, Waiter, Bartender, Chef, Cook, BusPerson, Dishwasher], Class Attributes: []
Class: Romano (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,date:Date,time:Time,numberOfPeople:int]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:,smokingPreference:]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:,paymentMethod:]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:string,capacity:int]
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Menu (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:string,prepTime:int,category:ItemCategory]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: Relation (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:,childFoodItemNumber:,quantity:int]
Relationships:
 1 Romano association * Reservation
 1 Romano association * Table
 1 Romano association * Person
 1 Romano association * Role
 1 Reservation association * Table
 1 Reservation association * Person
 1 Reservation association * MenuItem
 1 MenuItem association * FoodItem
 1 FoodItem association * Relation
 1 FoodItem association * UnitOfMeasure
 1 Person association * Role
--------------------------------------------------------------------------------
--5/20--Classes and attributes matching process:
-Classes:
 'Role(enum)'	-	'Role(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'Menu(class)'	-	'Menu(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'ItemCategory(enum)'	-	'MenuItemType(enum)'
 'Person(class)'	-	'Employee(class)'
-Attributes:
 'Role(enum):Manager'	-	'manager'
 'Role(enum):Maitre'	-	'Maitre'
 'Role(enum):Waiter'	-	'waiter'
 'Role(enum):Bartender'	-	'bartender'
 'Role(enum):Chef'	-	'chef'
 'Role(enum):Cook'	-	'cook'
 'Role(enum):BusPerson'	-	'busPerson'
 'Role(enum):Dishwasher'	-	'dishwasher'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):description'	-	'description'
 'UnitOfMeasure(enum):Ounce'	-	'ounce'
 'UnitOfMeasure(enum):Sheet'	-	'sheet'
 'UnitOfMeasure(enum):Pound'	-	'pound'
 'UnitOfMeasure(enum):Gram'	-	'gram'
 'UnitOfMeasure(enum):Dozen'	-	'dozen'
 'ItemCategory(enum):Appetizer'	-	'appetizer'
 'ItemCategory(enum):Entree'	-	'entree'
 'ItemCategory(enum):Dessert'	-	'dessert'
 'Person(class):name'	-	'name'
 'Person(class):dateOfBirth'	-	'dateOfBirth'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
 ' 1 Reservation association * Person'	-	' 1 Reservation association 1 Employee'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  11                  17                  
Attributes          43                  32                  51                  
Associations        11                  2                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------6/20------Romano:
------------------------------------------------------------
AI:
Enumerations:
UnitOfMeasure(EACH, OUNCE, SHEET, POUND, GRAM, DOZEN)
MenuCategory(APPETIZER, ENTREE, DESSERT, BEVERAGE)

Classes:
Romano()
Person(string name, Date dateOfBirth, string driverLicenseNumber)
Reservation(int reservationNumber, Date dateTime, int numberOfPeople)
IndividualReservation(bool seatingPreference, bool smokingPreference)
BanquetReservation(string groupName, string paymentMethod)
Table(int tableNumber, string description, int capacity)
Manager()
Maitre()
Waiter()
Bartender()
Chef()
Cook()
BusPerson()
Dishwasher()
MenuItem(int menuItemNumber, string description, int prepTime, MenuCategory category)
FoodItem(int foodItemNumber, string description, bool purchaseFlag, UnitOfMeasure unitOfMeasure)

Relationships:
1 Romano contain *Person
1 Romano contain *Reservation
1 Romano contain *Table
1 Romano contain *Manager
1 Manager manage *Maitre
1 Manager manage *Chef
1 Maitre manage *Waiter
1 Maitre manage *Bartender
1 Maitre manage *BusPerson
1 Maitre manage *Dishwasher
1 Waiter assignedTo *Reservation
1 Reservation assignedTo *Table
1 Reservation associatedWith *MenuItem
1 MenuItem utilize *FoodItem
1 FoodItem usedIn *MenuItem

MenuItem inherit FoodItem

ParentFoodItem(int parentFoodItemNumber, int childFoodItemNumber, int quantity)
ChildFoodItem(int childFoodItemNumber, int parentFoodItemNumber, int quantity)

1 ParentFoodItem associate *ChildFoodItem
1 ChildFoodItem associate *ParentFoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: UnitOfMeasure (enum) - Enum Attributes: [EACH, OUNCE, SHEET, POUND, GRAM, DOZEN], Class Attributes: []
Class: MenuCategory (enum) - Enum Attributes: [APPETIZER, ENTREE, DESSERT, BEVERAGE], Class Attributes: []
Class: Romano (class) - Enum Attributes: [], Class Attributes: []
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,dateTime:Date,numberOfPeople:int]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:bool,smokingPreference:bool]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:string,capacity:int]
Class: Manager (class) - Enum Attributes: [], Class Attributes: []
Class: Maitre (class) - Enum Attributes: [], Class Attributes: []
Class: Waiter (class) - Enum Attributes: [], Class Attributes: []
Class: Bartender (class) - Enum Attributes: [], Class Attributes: []
Class: Chef (class) - Enum Attributes: [], Class Attributes: []
Class: Cook (class) - Enum Attributes: [], Class Attributes: []
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: []
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:string,prepTime:int,category:MenuCategory]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:bool,unitOfMeasure:UnitOfMeasure]
Relationships:
 1 Romano association * Person
 1 Romano association * Reservation
 1 Romano association * Table
 1 Romano association * Manager
 1 Manager association * Maitre
 1 Manager association * Chef
 1 Maitre association * Waiter
 1 Maitre association * Bartender
 1 Maitre association * BusPerson
 1 Maitre association * Dishwasher
 1 Waiter association * Reservation
 1 Reservation association * Table
 1 Reservation association * MenuItem
 1 MenuItem association * FoodItem
 1 FoodItem association * MenuItem
 False MenuItem inheritance False FoodItem
 1 ParentFoodItem association * ChildFoodItem
 1 ChildFoodItem association * ParentFoodItem
--------------------------------------------------------------------------------
--6/20--Classes and attributes matching process:
-Classes:
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'MenuCategory(enum)'	-	'MenuItemType(enum)'
 'Person(class)'	-	'Employee(class)'
-Attributes:
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):description'	-	'description'
 'UnitOfMeasure(enum):OUNCE'	-	'ounce'
 'UnitOfMeasure(enum):SHEET'	-	'sheet'
 'UnitOfMeasure(enum):POUND'	-	'pound'
 'UnitOfMeasure(enum):GRAM'	-	'gram'
 'UnitOfMeasure(enum):DOZEN'	-	'dozen'
 'MenuCategory(enum):APPETIZER'	-	'appetizer'
 'MenuCategory(enum):ENTREE'	-	'entree'
 'MenuCategory(enum):DESSERT'	-	'dessert'
 'Person(class):name'	-	'name'
 'Person(class):dateOfBirth'	-	'dateOfBirth'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             18                  9                   17                  
Attributes          31                  22                  51                  
Associations        15                  1                   13                  
Inheritances        1                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------7/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
UnitOfMeasure (Each, Ounce, Sheet, Pound, Gram, Dozen)
FoodItem (Chicken, Mushrooms, Bread sticks, Red sauce, Cream sauce, etc.)
Person (Name, DateOfBirth, DriverLicenseNumber)
ReservationType (Individual, Banquet)
SeatingPreference (Inside, Patio)
SmokingPreference (Smoking, NonSmoking)
TableSize (2-person, 4-person, 6-person)
MenuItemType (Appetizer, Entree, Dessert, Beverage)

Classes:
Romano()
Reservation(datetime time, int numberOfPeople, String name, String phoneNumber, String reservationNumber)
ReservationDetail(ReservationType type, SeatingPreference seatingPreference, SmokingPreference smokingPreference, String groupname, PaymentMethod paymentMethod)
Table(int tableNumber, String description, TableSize size)
Manager()
Maitre()
Waiter()
Bartender()
Chef()
Cook()
BusPerson()
Dishwasher()
MenuItem(int menuItemNumber, String description, int prepTime, MenuItemType type, double price)
MenuOrder(datetime timeOrdered)
FoodItem(int foodItemNumber, String description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure, double quantity)
Ingredient(int parentFoodItemNumber, int childFoodItemNumber, double quantity)

Relationships:
1 Romano contain *Reservation
1 Romano contain *Table
1 Romano contain *Manager
1 Romano contain *Maitre
1 Romano contain *Waiter
1 Romano contain *Bartender
1 Romano contain *Chef
1 Romano contain *Cook
1 Romano contain *BusPerson
1 Romano contain *Dishwasher
1 Romano contain *MenuItem
1 Romano contain *MenuOrder
1 Romano contain *FoodItem
1 Romano contain *Ingredient
1 Reservation associate *ReservationDetail
1 Reservation associate *Table
1 Reservation associate *MenuOrder
1 Reservation associate *Waiter
1 Reservation associate *MenuItem
1 MenuItem associate *FoodItem
1 FoodItem associate *Ingredient

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: UnitOfMeasure (enum) - Enum Attributes: [Each, Ounce, Sheet, Pound, Gram, Dozen], Class Attributes: []
Class: FoodItem (enum) - Enum Attributes: [Chicken, Mushrooms, sticks, sauce, sauce, etc.], Class Attributes: []
Class: Person (enum) - Enum Attributes: [Name, DateOfBirth, DriverLicenseNumber], Class Attributes: []
Class: ReservationType (enum) - Enum Attributes: [Individual, Banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [Inside, Patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [Smoking, NonSmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: Romano (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [time:datetime,numberOfPeople:int,name:String,phoneNumber:String,reservationNumber:String]
Class: ReservationDetail (class) - Enum Attributes: [], Class Attributes: [type:ReservationType,seatingPreference:SeatingPreference,smokingPreference:SmokingPreference,groupname:String,paymentMethod:PaymentMethod]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:String,size:TableSize]
Class: Manager (class) - Enum Attributes: [], Class Attributes: []
Class: Maitre (class) - Enum Attributes: [], Class Attributes: []
Class: Waiter (class) - Enum Attributes: [], Class Attributes: []
Class: Bartender (class) - Enum Attributes: [], Class Attributes: []
Class: Chef (class) - Enum Attributes: [], Class Attributes: []
Class: Cook (class) - Enum Attributes: [], Class Attributes: []
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: []
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:String,prepTime:int,type:MenuItemType,price:double]
Class: MenuOrder (class) - Enum Attributes: [], Class Attributes: [timeOrdered:datetime]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:String,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure,quantity:double]
Class: Ingredient (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:int,childFoodItemNumber:int,quantity:double]
Relationships:
 1 Romano association * Reservation
 1 Romano association * Table
 1 Romano association * Manager
 1 Romano association * Maitre
 1 Romano association * Waiter
 1 Romano association * Bartender
 1 Romano association * Chef
 1 Romano association * Cook
 1 Romano association * BusPerson
 1 Romano association * Dishwasher
 1 Romano association * MenuItem
 1 Romano association * MenuOrder
 1 Romano association * FoodItem
 1 Romano association * Ingredient
 1 Reservation association * ReservationDetail
 1 Reservation association * Table
 1 Reservation association * MenuOrder
 1 Reservation association * Waiter
 1 Reservation association * MenuItem
 1 MenuItem association * FoodItem
 1 FoodItem association * Ingredient
--------------------------------------------------------------------------------
--7/20--Classes and attributes matching process:
-Classes:
 'FoodItem(enum)'	-	'FoodItem(class)'
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'Ingredient(class)'	-	'Ingredient(class)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Person(enum)'	-	'Employee(class)'
 'TableSize(enum)'	-	'TableType(enum)'
-Attributes:
 'SeatingPreference(enum):Inside'	-	'inside'
 'SeatingPreference(enum):Patio'	-	'patio'
 'SmokingPreference(enum):Smoking'	-	'smoking'
 'SmokingPreference(enum):NonSmoking'	-	'nonsmoking'
 'MenuItemType(enum):Appetizer'	-	'appetizer'
 'MenuItemType(enum):Entree'	-	'entree'
 'MenuItemType(enum):Dessert'	-	'dessert'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'MenuItem(class):type'	-	'type'
 'Ingredient(class):quantity'	-	'quantity'
 'UnitOfMeasure(enum):Ounce'	-	'ounce'
 'UnitOfMeasure(enum):Sheet'	-	'sheet'
 'UnitOfMeasure(enum):Pound'	-	'pound'
 'UnitOfMeasure(enum):Gram'	-	'gram'
 'UnitOfMeasure(enum):Dozen'	-	'dozen'
 'Person(enum):Name'	-	'name'
 'Person(enum):DateOfBirth'	-	'dateOfBirth'
 'Person(enum):DriverLicenseNumber'	-	'driverLicenseNumber'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
-Relationships:
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
 ' 1 FoodItem association * Ingredient'	-	' 1 FoodItem association * Ingredient'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             24                  11                  17                  
Attributes          55                  29                  51                  
Associations        21                  2                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------8/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
FoodItem(Olive Oil, Mozzarella Cheese, ...)
MenuItem(Chicken Marsala, Fish Soup, ...)
ReservationType(Individual, Banquet, ...)
UserRole(Manager, Maitre, Waiter, ...)
UnitOfMeasure(Each, Ounce, ...)
Classes:
Restaurant(name)
Reservation(number, date, time, numberPeople)
IndividualReservation(seatingPreference, smokingPreference)
BanquetReservation(groupName, paymentMethod)
Table(number, description, capacity)
Person(name, dateOfBirth, driverLicenseNumber)
Manager(subordinates)
Maitre(subordinates)
Waiter()
Bartender()
Chef(subordinates)
Cook()
BusPerson()
Dishwasher()
Menu(number, description, prepTime, type, price)
Order(reservationNumber, menuItemNumber, timeOrdered)
FoodItem(number, description, purchaseFlag, unitOfMeasure)
Ingredient(parentFoodItemNumber, childFoodItemNumber, quantity)

Relationships:
1 Restaurant contains *Reservation
1 Restaurant contains *Table
1 Restaurant contains *Person
1 Restaurant contains *Manager
1 Restaurant contains *Maitre
1 Restaurant contains *Waiter
1 Restaurant contains *Bartender
1 Restaurant contains *Chef
1 Restaurant contains *Cook
1 Restaurant contains *BusPerson
1 Restaurant contains *Dishwasher
1 Restaurant contains *Menu
1 Reservation associate *Table
1 Reservation associate *Person
1 Reservation associate *Order
1 Reservation associate *Waiter
1 Menu associate *FoodItem
1 Menu associate *MenuItem
1 MenuItem associate *FoodItem
1 FoodItem associate *Ingredient

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: FoodItem (enum) - Enum Attributes: [Oil, Cheese, ...], Class Attributes: []
Class: MenuItem (enum) - Enum Attributes: [Marsala, Soup, ...], Class Attributes: []
Class: ReservationType (enum) - Enum Attributes: [Individual, Banquet, ...], Class Attributes: []
Class: UserRole (enum) - Enum Attributes: [Manager, Maitre, Waiter, ...], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [Each, Ounce, ...], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: [name:]
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:,date:,time:,numberPeople:]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:,smokingPreference:]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:,paymentMethod:]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:,description:,capacity:]
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [subordinates:]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [subordinates:]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: []
Class: Bartender (class) - Enum Attributes: [], Class Attributes: []
Class: Chef (class) - Enum Attributes: [], Class Attributes: [subordinates:]
Class: Cook (class) - Enum Attributes: [], Class Attributes: []
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: []
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: []
Class: Menu (class) - Enum Attributes: [], Class Attributes: [number:,description:,prepTime:,type:,price:]
Class: Order (class) - Enum Attributes: [], Class Attributes: [reservationNumber:,menuItemNumber:,timeOrdered:]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:,description:,purchaseFlag:,unitOfMeasure:]
Class: Ingredient (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:,childFoodItemNumber:,quantity:]
Relationships:
 1 Restaurant association * Reservation
 1 Restaurant association * Table
 1 Restaurant association * Person
 1 Restaurant association * Manager
 1 Restaurant association * Maitre
 1 Restaurant association * Waiter
 1 Restaurant association * Bartender
 1 Restaurant association * Chef
 1 Restaurant association * Cook
 1 Restaurant association * BusPerson
 1 Restaurant association * Dishwasher
 1 Restaurant association * Menu
 1 Reservation association * Table
 1 Reservation association * Person
 1 Reservation association * Order
 1 Reservation association * Waiter
 1 Menu association * FoodItem
 1 Menu association * MenuItem
 1 MenuItem association * FoodItem
 1 FoodItem association * Ingredient
--------------------------------------------------------------------------------
--8/20--Classes and attributes matching process:
-Classes:
 'FoodItem(enum)'	-	'FoodItem(class)'
 'MenuItem(enum)'	-	'MenuItem(class)'
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'Menu(class)'	-	'Menu(class)'
 'Ingredient(class)'	-	'Ingredient(class)'
 'Person(class)'	-	'Employee(class)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
-Attributes:
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberPeople'	-	'numberOfPeople'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):description'	-	'description'
 'Ingredient(class):quantity'	-	'quantity'
 'Person(class):name'	-	'name'
 'Person(class):dateOfBirth'	-	'dateOfBirth'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
 'UnitOfMeasure(enum):Ounce'	-	'ounce'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * Person'	-	' 1 Restaurant association * Employee'
 ' 1 Restaurant association * Menu'	-	' 1 Restaurant association 1 Menu'
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
 ' 1 Reservation association * Person'	-	' 1 Reservation association 1 Employee'
 ' 1 FoodItem association * Ingredient'	-	' 1 FoodItem association * Ingredient'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             23                  11                  17                  
Attributes          49                  13                  51                  
Associations        20                  7                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------9/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
TableSize(2-person, 4-person, 6-person)
ReservationType(individual, banquet)
MenuItemType(appetizer, entree, dessert, beverage)
UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)

Classes:
Restaurant()
Person(string name, Date dateOfBirth, string driverLicenseNumber)
abstract Employee()
Manager()
Maitre()
Waiter()
Bartender()
Chef()
Cook()
BusPerson()
Dishwasher()
Reservation(string reservationNumber, Date dateTime, int numberOfPeople)
ReservationDetail(ReservationType reservationType, string seatingPreference, string smokingPreference, string groupName, string paymentMethod)
Table(string tableNumber, string description, TableSize tableSize)
Menu()
MenuItem(int menuItemNumber, string itemDescription, int prepTime, MenuItemType menuItemType, double priceLunch, double priceDinner, double priceHappyHour)
FoodItem(int foodItemNumber, string description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
FoodItemRelationship(int parentFoodItemNumber, int childFoodItemNumber, double quantity)

Relationships:
1 Restaurant contain *Employee
1 Restaurant contain *Table
1 Restaurant contain *Menu
1 Restaurant contain *FoodItem
1 Employee associate *Person
1 Manager inherit Employee
1 Maitre inherit Employee
1 Waiter inherit Employee
1 Bartender inherit Employee
1 Chef inherit Employee
1 Cook inherit Employee
1 BusPerson inherit Employee
1 Dishwasher inherit Employee
1 Reservation associate *ReservationDetail
1 Reservation associate *Table
1 Reservation associate *MenuItem
1 Waiter associate *Reservation

MenuItem contain *FoodItem
FoodItem contain *FoodItemRelationship

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: ReservationType (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: abstract (class) - Enum Attributes: [], Class Attributes: []
Class: Manager (class) - Enum Attributes: [], Class Attributes: []
Class: Maitre (class) - Enum Attributes: [], Class Attributes: []
Class: Waiter (class) - Enum Attributes: [], Class Attributes: []
Class: Bartender (class) - Enum Attributes: [], Class Attributes: []
Class: Chef (class) - Enum Attributes: [], Class Attributes: []
Class: Cook (class) - Enum Attributes: [], Class Attributes: []
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: []
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:string,dateTime:Date,numberOfPeople:int]
Class: ReservationDetail (class) - Enum Attributes: [], Class Attributes: [reservationType:ReservationType,seatingPreference:string,smokingPreference:string,groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:string,description:string,tableSize:TableSize]
Class: Menu (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,itemDescription:string,prepTime:int,menuItemType:MenuItemType,priceLunch:double,priceDinner:double,priceHappyHour:double]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Relationships:
 1 Restaurant association * Employee
 1 Restaurant association * Table
 1 Restaurant association * Menu
 1 Restaurant association * FoodItem
 1 Employee association * Person
 False Manager inheritance False Employee
 False Maitre inheritance False Employee
 False Waiter inheritance False Employee
 False Bartender inheritance False Employee
 False Chef inheritance False Employee
 False Cook inheritance False Employee
 False BusPerson inheritance False Employee
 False Dishwasher inheritance False Employee
 1 Reservation association * ReservationDetail
 1 Reservation association * Table
 1 Reservation association * MenuItem
 1 Waiter association * Reservation
 1 MenuItem association * FoodItem
--------------------------------------------------------------------------------
--9/20--Classes and attributes matching process:
-Classes:
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'Menu(class)'	-	'Menu(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Person(class)'	-	'Employee(class)'
-Attributes:
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Person(class):name'	-	'name'
 'Person(class):dateOfBirth'	-	'dateOfBirth'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * Menu'	-	' 1 Restaurant association 1 Menu'
 ' 1 Restaurant association * FoodItem'	-	' 1 Restaurant association * FoodItem'
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             21                  10                  17                  
Attributes          40                  20                  51                  
Associations        8                   4                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------10/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
TableClassification(2-person, 4-person, 6-person)
ReservationType(Individual, Banquet)
MenuCategory(Appetizer, Entree, Dessert, Beverage)
UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)

Classes:
Romano()
Reservation(string reservationNumber, Date time, int numberOfPeople)
IndividualReservation(seatingPreference, smokingPreference)
BanquetReservation(groupName, paymentMethod)
Table(number, description, TableClassification class)
Manager(string name, Date dateOfBirth, string driverLicenseNumber)
Maitre(string name, Date dateOfBirth, string driverLicenseNumber)
Waiter(string name, Date dateOfBirth, string driverLicenseNumber)
Bartender(string name, Date dateOfBirth, string driverLicenseNumber)
Chef(string name, Date dateOfBirth, string driverLicenseNumber)
Cook(string name, Date dateOfBirth, string driverLicenseNumber)
BusPerson(string name, Date dateOfBirth, string driverLicenseNumber)
Dishwasher(string name, Date dateOfBirth, string driverLicenseNumber)
MenuItem(number, description, prepTime, MenuCategory category, double priceLunch, double priceDinner, double priceHappyHour)
FoodItem(number, description, purchaseFlag, UnitOfMeasure unit)
MenuItemFoodItem(parentFoodItemNumber, childFoodItemNumber, quantity)

Relationships:
1 Romano contain *Reservation
1 Romano contain *Table
1 Romano contain *Manager
1 Romano contain *Maitre
1 Romano contain *Waiter
1 Romano contain *Bartender
1 Romano contain *Chef
1 Romano contain *Cook
1 Romano contain *BusPerson
1 Romano contain *Dishwasher
1 Reservation associate *Table
1 Reservation associate *Waiter
1 Reservation associate *MenuItem
1 MenuItem associate *FoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: TableClassification (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: ReservationType (enum) - Enum Attributes: [Individual, Banquet], Class Attributes: []
Class: MenuCategory (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Romano (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:string,time:Date,numberOfPeople:int]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:,smokingPreference:]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:,paymentMethod:]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:,description:,class:TableClassification]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [number:,description:,prepTime:,category:MenuCategory,priceLunch:double,priceDinner:double,priceHappyHour:double]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:,description:,purchaseFlag:,unit:UnitOfMeasure]
Class: MenuItemFoodItem (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:,childFoodItemNumber:,quantity:]
Relationships:
 1 Romano association * Reservation
 1 Romano association * Table
 1 Romano association * Manager
 1 Romano association * Maitre
 1 Romano association * Waiter
 1 Romano association * Bartender
 1 Romano association * Chef
 1 Romano association * Cook
 1 Romano association * BusPerson
 1 Romano association * Dishwasher
 1 Reservation association * Table
 1 Reservation association * Waiter
 1 Reservation association * MenuItem
 1 MenuItem association * FoodItem
--------------------------------------------------------------------------------
--10/20--Classes and attributes matching process:
-Classes:
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableClassification(enum)'	-	'TableType(enum)'
 'MenuCategory(enum)'	-	'MenuItemType(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
 'MenuItemFoodItem(class)'	-	'Ingredient(class)'
-Attributes:
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):description'	-	'description'
 'MenuItem(class):number'	-	'number'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):number'	-	'number'
 'FoodItem(class):description'	-	'description'
 'FoodItem(class):unit'	-	'unit'
 'TableClassification(enum):2-person'	-	'2person'
 'TableClassification(enum):4-person'	-	'4person'
 'TableClassification(enum):6-person'	-	'6person'
 'MenuCategory(enum):Appetizer'	-	'appetizer'
 'MenuCategory(enum):Entree'	-	'entree'
 'MenuCategory(enum):Dessert'	-	'dessert'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
 'MenuItemFoodItem(class):quantity'	-	'quantity'
-Relationships:
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             20                  11                  17                  
Attributes          63                  29                  51                  
Associations        14                  1                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------11/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
ItemCategory(Appetizer, Entree, Dessert, Beverage)
UnitOfMeasure(Tablespoon, Ounce, Sheet, Pound, Gram, Dozen)

Classes:
Restaurant()
Reservation(int reservationNumber, Date date, Time time, int numberOfPeople)
IndividualReservation(boolean insideSeating, boolean patioSeating, boolean smokingPreference)
BanquetReservation(string groupName, string paymentMethod)
Table(int tableNumber, String description, int capacity)
Person(string name, Date dateOfBirth, string driverLicenseNumber)
abstract Employee(string position)
Manager() 
MaitreD() 
Waiter() 
Bartender() 
Chef() 
Cook() 
BusPerson() 
Dishwasher()
MenuItem(int menuItemNumber, string description, int prepTime, double lunchPrice, double dinnerPrice, double happyHourPrice)
FoodItem(int foodItemNumber, string description, boolean purchaseFlag)
MenuComposition(int parentFoodItemNumber, int childFoodItemNumber, double quantity)

Relationships:
1 Restaurant contain *Reservation
1 Restaurant contain *Table
1 Restaurant contain *Employee
1 Restaurant contain *MenuItem
1 Restaurant contain *FoodItem
1 Restaurant contain *MenuComposition
1 Reservation associate *Table
1 Reservation associate *MenuItem
1 Reservation associate *Waiter
1 MenuItem associate *FoodItem
1 FoodItem associate *MenuComposition
1 Manager inherit Employee
1 MaitreD inherit Employee
1 Waiter inherit Employee
1 Bartender inherit Employee
1 Chef inherit Employee
1 Cook inherit Employee
1 BusPerson inherit Employee
1 Dishwasher inherit Employee
1 Employee associate *Person

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ItemCategory (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [Tablespoon, Ounce, Sheet, Pound, Gram, Dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,date:Date,time:Time,numberOfPeople:int]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [insideSeating:boolean,patioSeating:boolean,smokingPreference:boolean]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:String,capacity:int]
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: abstract (class) - Enum Attributes: [], Class Attributes: []
Class: Manager (class) - Enum Attributes: [], Class Attributes: []
Class: MaitreD (class) - Enum Attributes: [], Class Attributes: []
Class: Waiter (class) - Enum Attributes: [], Class Attributes: []
Class: Bartender (class) - Enum Attributes: [], Class Attributes: []
Class: Chef (class) - Enum Attributes: [], Class Attributes: []
Class: Cook (class) - Enum Attributes: [], Class Attributes: []
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: []
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:string,prepTime:int,lunchPrice:double,dinnerPrice:double,happyHourPrice:double]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:boolean]
Class: MenuComposition (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:int,childFoodItemNumber:int,quantity:double]
Relationships:
 1 Restaurant association * Reservation
 1 Restaurant association * Table
 1 Restaurant association * Employee
 1 Restaurant association * MenuItem
 1 Restaurant association * FoodItem
 1 Restaurant association * MenuComposition
 1 Reservation association * Table
 1 Reservation association * MenuItem
 1 Reservation association * Waiter
 1 MenuItem association * FoodItem
 1 FoodItem association * MenuComposition
 False Manager inheritance False Employee
 False MaitreD inheritance False Employee
 False Waiter inheritance False Employee
 False Bartender inheritance False Employee
 False Chef inheritance False Employee
 False Cook inheritance False Employee
 False BusPerson inheritance False Employee
 False Dishwasher inheritance False Employee
 1 Employee association * Person
--------------------------------------------------------------------------------
--11/20--Classes and attributes matching process:
-Classes:
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'ItemCategory(enum)'	-	'MenuItemType(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Person(class)'	-	'Employee(class)'
-Attributes:
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):description'	-	'description'
 'ItemCategory(enum):Appetizer'	-	'appetizer'
 'ItemCategory(enum):Entree'	-	'entree'
 'ItemCategory(enum):Dessert'	-	'dessert'
 'UnitOfMeasure(enum):Ounce'	-	'ounce'
 'UnitOfMeasure(enum):Sheet'	-	'sheet'
 'UnitOfMeasure(enum):Pound'	-	'pound'
 'UnitOfMeasure(enum):Gram'	-	'gram'
 'UnitOfMeasure(enum):Dozen'	-	'dozen'
 'Person(class):name'	-	'name'
 'Person(class):dateOfBirth'	-	'dateOfBirth'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * FoodItem'	-	' 1 Restaurant association * FoodItem'
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             20                  10                  17                  
Attributes          37                  23                  51                  
Associations        10                  4                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------12/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
MenuCategory(appetizer, entree, dessert, beverage)
Person(name, dateOfBirth, driverLicenseNumber)
Role(manager, Maitre, waiter, bartender, chef, cook, busPerson, dishwasher)
UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)

Classes:
Romano()
Reservation(number, dateTime, numberOfPeople, name, phoneNumber)
IndividualReservation(seatingPreference, smokingPreference)
BanquetReservation(groupName, paymentMethod)
Table(number, description, capacity)
ReservationTable(reservation, table)
Manager(person)
Maitre(person)
Waiter(person)
Bartender(person)
Chef(person)
Cook(person)
BusPerson(person)
Dishwasher(person)
MenuItem(number, description, prepTime, priceLunch, priceDinner, priceHappyHour, menuCategory)
FoodItem(number, description, purchaseFlag, unitOfMeasure)
MenuOrder(reservation, menuItem, orderTime)
FoodItemComposition(parentFoodItem, childFoodItem, quantity)

Relationships:
1 Romano contains *Reservation
1 Romano contains *Table
1 Romano contains *Manager
1 Romano contains *Maitre
1 Romano contains *Waiter
1 Romano contains *Bartender
1 Romano contains *Chef
1 Romano contains *Cook
1 Romano contains *BusPerson
1 Romano contains *Dishwasher
1 Reservation associate 1 Table
1 ReservationTable associate * Reservation
1 ReservationTable associate * Table
1 Manager associate * Maitre
1 Manager associate * Chef
1 Maitre associate * Waiter
1 Maitre associate * Bartender
1 Maitre associate * BusPerson
1 Chef associate * Cook
1 Chef associate * Dishwasher
1 Person associate * Role
1 MenuOrder associate * Reservation
1 MenuOrder associate * MenuItem
1 FoodItemComposition associate * FoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: MenuCategory (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: Person (enum) - Enum Attributes: [name, dateOfBirth, driverLicenseNumber], Class Attributes: []
Class: Role (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, busPerson, dishwasher], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Romano (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:,dateTime:,numberOfPeople:,name:,phoneNumber:]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:,smokingPreference:]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:,paymentMethod:]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:,description:,capacity:]
Class: ReservationTable (class) - Enum Attributes: [], Class Attributes: [reservation:,table:]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [person:]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [person:]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [person:]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [person:]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [person:]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [person:]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [person:]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [person:]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [number:,description:,prepTime:,priceLunch:,priceDinner:,priceHappyHour:,menuCategory:]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:,description:,purchaseFlag:,unitOfMeasure:]
Class: MenuOrder (class) - Enum Attributes: [], Class Attributes: [reservation:,menuItem:,orderTime:]
Class: FoodItemComposition (class) - Enum Attributes: [], Class Attributes: [parentFoodItem:,childFoodItem:,quantity:]
Relationships:
 1 Romano association * Reservation
 1 Romano association * Table
 1 Romano association * Manager
 1 Romano association * Maitre
 1 Romano association * Waiter
 1 Romano association * Bartender
 1 Romano association * Chef
 1 Romano association * Cook
 1 Romano association * BusPerson
 1 Romano association * Dishwasher
 1 Reservation association 1 Table
 1 ReservationTable association * Reservation
 1 ReservationTable association * Table
 1 Manager association * Maitre
 1 Manager association * Chef
 1 Maitre association * Waiter
 1 Maitre association * Bartender
 1 Maitre association * BusPerson
 1 Chef association * Cook
 1 Chef association * Dishwasher
 1 Person association * Role
 1 MenuOrder association * Reservation
 1 MenuOrder association * MenuItem
 1 FoodItemComposition association * FoodItem
--------------------------------------------------------------------------------
--12/20--Classes and attributes matching process:
-Classes:
 'Role(enum)'	-	'Role(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'MenuCategory(enum)'	-	'MenuItemType(enum)'
 'Person(enum)'	-	'Employee(class)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
-Attributes:
 'Role(enum):manager'	-	'manager'
 'Role(enum):Maitre'	-	'Maitre'
 'Role(enum):waiter'	-	'waiter'
 'Role(enum):bartender'	-	'bartender'
 'Role(enum):chef'	-	'chef'
 'Role(enum):cook'	-	'cook'
 'Role(enum):busPerson'	-	'busPerson'
 'Role(enum):dishwasher'	-	'dishwasher'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):description'	-	'description'
 'MenuItem(class):number'	-	'number'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):number'	-	'number'
 'FoodItem(class):description'	-	'description'
 'MenuCategory(enum):appetizer'	-	'appetizer'
 'MenuCategory(enum):entree'	-	'entree'
 'MenuCategory(enum):dessert'	-	'dessert'
 'Person(enum):name'	-	'name'
 'Person(enum):dateOfBirth'	-	'dateOfBirth'
 'Person(enum):driverLicenseNumber'	-	'driverLicenseNumber'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
-Relationships:
 ' 1 Reservation association 1 Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             22                  10                  17                  
Attributes          60                  32                  51                  
Associations        24                  1                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------13/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
ItemCategory(Appetizer, Entree, Dessert, Beverage)
UnitOfMeasure(Tbsp, oz, sheet, pound, gram, dozen)

Classes:
Restaurant(name)
Reservation(number, date, time, numberPeople, name, phoneNumber)
BanquetReservation(groupName, paymentMethod)
IndividualReservation(seatingPreference, smokingPreference)
Table(number, description, size)
Manager(name, dateOfBirth, driverLicenseNumber)
Maitre(name, dateOfBirth, driverLicenseNumber)
Waiter(name, dateOfBirth, driverLicenseNumber)
Bartender(name, dateOfBirth, driverLicenseNumber)
Chef(name, dateOfBirth, driverLicenseNumber)
Cook(name, dateOfBirth, driverLicenseNumber)
BusPerson(name, dateOfBirth, driverLicenseNumber)
Dishwasher(name, dateOfBirth, driverLicenseNumber)
MenuItem(number, description, prepTime, priceLunch, priceDinner, priceHappyHour)
FoodItem(number, description, purchaseFlag)
Ingredient(parentFoodItemNumber, childFoodItemNumber, quantity)

Relationships:
1 Restaurant contain *Reservation
1 Reservation associate *Table
1 Reservation associate *MenuItem
1 MenuItem associate *FoodItem
1 FoodItem associate *UnitOfMeasure
1 Ingredient associate *FoodItem

1 Restaurant contain *Manager
1 Restaurant contain *Maitre
1 Restaurant contain *Waiter
1 Restaurant contain *Bartender
1 Restaurant contain *Chef
1 Restaurant contain *Cook
1 Restaurant contain *BusPerson
1 Restaurant contain *Dishwasher

1 Waiter associate *Reservation

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ItemCategory (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [Tbsp, oz, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: [name:]
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:,date:,time:,numberPeople:,name:,phoneNumber:]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:,paymentMethod:]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:,smokingPreference:]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:,description:,size:]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [number:,description:,prepTime:,priceLunch:,priceDinner:,priceHappyHour:]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:,description:,purchaseFlag:]
Class: Ingredient (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:,childFoodItemNumber:,quantity:]
Relationships:
 1 Restaurant association * Reservation
 1 Reservation association * Table
 1 Reservation association * MenuItem
 1 MenuItem association * FoodItem
 1 FoodItem association * UnitOfMeasure
 1 Ingredient association * FoodItem
 1 Restaurant association * Manager
 1 Restaurant association * Maitre
 1 Restaurant association * Waiter
 1 Restaurant association * Bartender
 1 Restaurant association * Chef
 1 Restaurant association * Cook
 1 Restaurant association * BusPerson
 1 Restaurant association * Dishwasher
 1 Waiter association * Reservation
--------------------------------------------------------------------------------
--13/20--Classes and attributes matching process:
-Classes:
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'Ingredient(class)'	-	'Ingredient(class)'
 'ItemCategory(enum)'	-	'MenuItemType(enum)'
 'Manager(class)'	-	'Employee(class)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
-Attributes:
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'Table(class):description'	-	'description'
 'MenuItem(class):number'	-	'number'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):number'	-	'number'
 'FoodItem(class):description'	-	'description'
 'Ingredient(class):quantity'	-	'quantity'
 'ItemCategory(enum):Appetizer'	-	'appetizer'
 'ItemCategory(enum):Entree'	-	'entree'
 'ItemCategory(enum):Dessert'	-	'dessert'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
 ' 1 Ingredient association * FoodItem'	-	' 1 FoodItem association * Ingredient'
 ' 1 Restaurant association * Manager'	-	' 1 Restaurant association * Employee'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             18                  11                  17                  
Attributes          60                  26                  51                  
Associations        15                  4                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------14/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
UnitOfMeasure(Teaspoon, Ounce, Sheet, Pound, Gram, Dozen)
Role(Manager, Maitre, Waiter, Bartender, Chef, Cook, Bus Person, Dishwasher)
ItemType(Appetizer, Entree, Dessert, Beverage)
FoodPurchaseFlag(Purchased, In-house)

Classes:
Restaurant(name)
Reservation(number, date, time, numberOfPeople)
IndividualReservation(seatingPreference, smokingPreference)
BanquetReservation(groupName, paymentMethod)
Table(number, description, classification)
Person(name, dateOfBirth, driverLicenseNumber)
Manager(reportTo)
Maitre(reportTo)
Waiter(assignToReservation)
Bartender(assignToReservation)
Chef(reportTo)
Cook(reportToChef)
BusPerson(reportToMaitre)
Dishwasher(reportToChef)
MenuItem(number, description, prepTime, priceLunch, priceDinner, priceHappyHour, itemType)
Menu(foodItems)
FoodItem(number, description, unitOfMeasure, purchaseFlag)
FoodItemRelation(parentFoodItem, childFoodItem, quantity)

Relationships:
1 Restaurant contain *Reservation
1 Restaurant contain *Table
1 Restaurant contain *Person
1 Restaurant contain *Role
1 Person associate 1 Role
1 Person associate *Reservation
1 Reservation associate *Table
1 Reservation associate *MenuItem
1 MenuItem associate *FoodItem
1 FoodItem associate *UnitOfMeasure
1 FoodItemRelation associate *FoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: UnitOfMeasure (enum) - Enum Attributes: [Teaspoon, Ounce, Sheet, Pound, Gram, Dozen], Class Attributes: []
Class: Role (enum) - Enum Attributes: [Manager, Maitre, Waiter, Bartender, Chef, Cook, Person, Dishwasher], Class Attributes: []
Class: ItemType (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: FoodPurchaseFlag (enum) - Enum Attributes: [Purchased, In-house], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: [name:]
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:,date:,time:,numberOfPeople:]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:,smokingPreference:]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:,paymentMethod:]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:,description:,classification:]
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [reportTo:]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [reportTo:]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [assignToReservation:]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [assignToReservation:]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [reportTo:]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [reportToChef:]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [reportToMaitre:]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [reportToChef:]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [number:,description:,prepTime:,priceLunch:,priceDinner:,priceHappyHour:,itemType:]
Class: Menu (class) - Enum Attributes: [], Class Attributes: [foodItems:]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:,description:,unitOfMeasure:,purchaseFlag:]
Class: FoodItemRelation (class) - Enum Attributes: [], Class Attributes: [parentFoodItem:,childFoodItem:,quantity:]
Relationships:
 1 Restaurant association * Reservation
 1 Restaurant association * Table
 1 Restaurant association * Person
 1 Restaurant association * Role
 1 Person association 1 Role
 1 Person association * Reservation
 1 Reservation association * Table
 1 Reservation association * MenuItem
 1 MenuItem association * FoodItem
 1 FoodItem association * UnitOfMeasure
 1 FoodItemRelation association * FoodItem
--------------------------------------------------------------------------------
--14/20--Classes and attributes matching process:
-Classes:
 'Role(enum)'	-	'Role(enum)'
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'Menu(class)'	-	'Menu(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'ItemType(enum)'	-	'MenuItemType(enum)'
 'Person(class)'	-	'Employee(class)'
-Attributes:
 'Role(enum):Manager'	-	'manager'
 'Role(enum):Maitre'	-	'Maitre'
 'Role(enum):Waiter'	-	'waiter'
 'Role(enum):Bartender'	-	'bartender'
 'Role(enum):Chef'	-	'chef'
 'Role(enum):Cook'	-	'cook'
 'Role(enum):Dishwasher'	-	'dishwasher'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):description'	-	'description'
 'MenuItem(class):number'	-	'number'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):number'	-	'number'
 'FoodItem(class):description'	-	'description'
 'UnitOfMeasure(enum):Ounce'	-	'ounce'
 'UnitOfMeasure(enum):Sheet'	-	'sheet'
 'UnitOfMeasure(enum):Pound'	-	'pound'
 'UnitOfMeasure(enum):Gram'	-	'gram'
 'UnitOfMeasure(enum):Dozen'	-	'dozen'
 'ItemType(enum):Appetizer'	-	'appetizer'
 'ItemType(enum):Entree'	-	'entree'
 'ItemType(enum):Dessert'	-	'dessert'
 'Person(class):name'	-	'name'
 'Person(class):dateOfBirth'	-	'dateOfBirth'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * Person'	-	' 1 Restaurant association * Employee'
 ' 1 Person association * Reservation'	-	' 1 Reservation association 1 Employee'
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             22                  12                  17                  
Attributes          58                  31                  51                  
Associations        11                  5                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------15/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
ReservationType(Individual, Banquet)
TableSize(2, 4, 6)
MenuItemType(Appetizer, Entree, Dessert, Beverage)
UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)

Classes:
Restaurant()
Reservation(int reservationNumber, Date time, Date date, int numberOfPeople, string name, string phoneNumber)
IndividualReservation(ReservationType reservationType, string seatingPreference, string smokingPreference)
BanquetReservation(ReservationType reservationType, string groupName, string paymentMethod)
Table(int tableNumber, string description, TableSize tableSize)
Person(string name, Date dateOfBirth, string driverLicenseNumber)
Manager(Person person)
Maitre(Person person)
Waiter(Person person)
Bartender(Person person)
Chef(Person person)
Cook(Person person)
BusPerson(Person person)
Dishwasher(Person person)
MenuItem(int menuItemNumber, string description, int prepTime, MenuItemType menuItemType)
FoodItem(int foodItemNumber, string description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
MenuItemFoodItem(int quantity)
MenuOrder(Reservation reservation, MenuItem menuItem, Date timeOrdered)

Relationships:
1 Restaurant contain *Table
1 Restaurant contain *Person
1 Restaurant contain *Reservation
1 Restaurant contain *Manager
1 Restaurant contain *Maitre
1 Restaurant contain *Waiter
1 Restaurant contain *Bartender
1 Restaurant contain *Chef
1 Restaurant contain *Cook
1 Restaurant contain *BusPerson
1 Restaurant contain *Dishwasher
1 MenuItem contain *FoodItem
1 MenuItem contain *MenuItemFoodItem
1 Reservation associate *Table
1 Reservation associate *Person
1 Reservation associate *MenuOrder
1 Person associate *Manager
1 Person associate *Maitre
1 Person associate *Waiter
1 Person associate *Bartender
1 Person associate *Chef
1 Person associate *Cook
1 Person associate *BusPerson
1 Person associate *Dishwasher

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationType (enum) - Enum Attributes: [Individual, Banquet], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2, 4, 6], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,time:Date,date:Date,numberOfPeople:int,name:string,phoneNumber:string]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [reservationType:ReservationType,seatingPreference:string,smokingPreference:string]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [reservationType:ReservationType,groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:string,tableSize:TableSize]
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [person:Person]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [person:Person]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [person:Person]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [person:Person]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [person:Person]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [person:Person]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [person:Person]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [person:Person]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:string,prepTime:int,menuItemType:MenuItemType]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: MenuItemFoodItem (class) - Enum Attributes: [], Class Attributes: [quantity:int]
Class: MenuOrder (class) - Enum Attributes: [], Class Attributes: [reservation:Reservation,menuItem:MenuItem,timeOrdered:Date]
Relationships:
 1 Restaurant association * Table
 1 Restaurant association * Person
 1 Restaurant association * Reservation
 1 Restaurant association * Manager
 1 Restaurant association * Maitre
 1 Restaurant association * Waiter
 1 Restaurant association * Bartender
 1 Restaurant association * Chef
 1 Restaurant association * Cook
 1 Restaurant association * BusPerson
 1 Restaurant association * Dishwasher
 1 MenuItem association * FoodItem
 1 MenuItem association * MenuItemFoodItem
 1 Reservation association * Table
 1 Reservation association * Person
 1 Reservation association * MenuOrder
 1 Person association * Manager
 1 Person association * Maitre
 1 Person association * Waiter
 1 Person association * Bartender
 1 Person association * Chef
 1 Person association * Cook
 1 Person association * BusPerson
 1 Person association * Dishwasher
--------------------------------------------------------------------------------
--15/20--Classes and attributes matching process:
-Classes:
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Person(class)'	-	'Employee(class)'
 'MenuItemFoodItem(class)'	-	'Ingredient(class)'
 'TableSize(enum)'	-	'TableType(enum)'
-Attributes:
 'MenuItemType(enum):Appetizer'	-	'appetizer'
 'MenuItemType(enum):Entree'	-	'entree'
 'MenuItemType(enum):Dessert'	-	'dessert'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):time'	-	'time'
 'Reservation(class):date'	-	'date'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):description'	-	'description'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Person(class):name'	-	'name'
 'Person(class):dateOfBirth'	-	'dateOfBirth'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
 'MenuItemFoodItem(class):quantity'	-	'quantity'
-Relationships:
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * Person'	-	' 1 Restaurant association * Employee'
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 MenuItem association * MenuItemFoodItem'	-	' 1 MenuItem association * Ingredient'
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
 ' 1 Reservation association * Person'	-	' 1 Reservation association 1 Employee'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             22                  12                  17                  
Attributes          53                  27                  51                  
Associations        24                  6                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------16/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)
Role(Manager, Maitre, Waiter, Bartender, Chef, Cook, BusPerson, Dishwasher)
Category(Appetizer, Entree, Dessert, Beverage)

Classes:
Restaurant()
Reservation(number: int, time: Time, date: Date, numPeople: int, name: string, phoneNumber: string)
IndividualReservation(seatingPreference: string, smokingPreference: string)
BanquetReservation(groupName: string, paymentMethod: string)
Table(number: int, description: string, size: int)
Person(name: string, dateOfBirth: Date, driverLicenseNumber: string)
Menu()
MenuItem(number: int, description: string, prepTime: int, category: Category, price: float)
FoodItem(number: int, description: string, purchaseFlag: boolean, unitOfMeasure: UnitOfMeasure)
MenuOrder(reservation: Reservation, menuItem: MenuItem, timeOrdered: Time)
Ingredient(parentFoodItem: FoodItem, childFoodItem: FoodItem, quantity: int)

Relationships:
1 Restaurant contain *Reservation
1 Restaurant contain *Table
1 Restaurant contain *Person
1 Restaurant contain *Role
1 Restaurant contain *Menu
1 Restaurant contain *FoodItem
1 Table associate *Reservation
1 Person associate *Role
1 Reservation associate *Person
1 Reservation associate *Table
1 Reservation associate *MenuOrder
1 MenuOrder associate *MenuItem
1 MenuItem associate *FoodItem
1 FoodItem associate *Ingredient

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Role (enum) - Enum Attributes: [Manager, Maitre, Waiter, Bartender, Chef, Cook, BusPerson, Dishwasher], Class Attributes: []
Class: Category (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:int,time:Time,date:Date,numPeople:int,name:string,phoneNumber:string]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:string,smokingPreference:string]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,size:int]
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Menu (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,prepTime:int,category:Category,price:float]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: MenuOrder (class) - Enum Attributes: [], Class Attributes: [reservation:Reservation,menuItem:MenuItem,timeOrdered:Time]
Class: Ingredient (class) - Enum Attributes: [], Class Attributes: [parentFoodItem:FoodItem,childFoodItem:FoodItem,quantity:int]
Relationships:
 1 Restaurant association * Reservation
 1 Restaurant association * Table
 1 Restaurant association * Person
 1 Restaurant association * Role
 1 Restaurant association * Menu
 1 Restaurant association * FoodItem
 1 Table association * Reservation
 1 Person association * Role
 1 Reservation association * Person
 1 Reservation association * Table
 1 Reservation association * MenuOrder
 1 MenuOrder association * MenuItem
 1 MenuItem association * FoodItem
 1 FoodItem association * Ingredient
--------------------------------------------------------------------------------
--16/20--Classes and attributes matching process:
-Classes:
 'Role(enum)'	-	'Role(enum)'
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'Menu(class)'	-	'Menu(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'Ingredient(class)'	-	'Ingredient(class)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Category(enum)'	-	'MenuItemType(enum)'
 'Person(class)'	-	'Employee(class)'
-Attributes:
 'Role(enum):Manager'	-	'manager'
 'Role(enum):Maitre'	-	'Maitre'
 'Role(enum):Waiter'	-	'waiter'
 'Role(enum):Bartender'	-	'bartender'
 'Role(enum):Chef'	-	'chef'
 'Role(enum):Cook'	-	'cook'
 'Role(enum):BusPerson'	-	'busPerson'
 'Role(enum):Dishwasher'	-	'dishwasher'
 'Reservation(class):time'	-	'time'
 'Reservation(class):date'	-	'date'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):description'	-	'description'
 'MenuItem(class):number'	-	'number'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):number'	-	'number'
 'FoodItem(class):description'	-	'description'
 'Ingredient(class):quantity'	-	'quantity'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Category(enum):Appetizer'	-	'appetizer'
 'Category(enum):Entree'	-	'entree'
 'Category(enum):Dessert'	-	'dessert'
 'Person(class):name'	-	'name'
 'Person(class):dateOfBirth'	-	'dateOfBirth'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * Person'	-	' 1 Restaurant association * Employee'
 ' 1 Restaurant association * Menu'	-	' 1 Restaurant association 1 Menu'
 ' 1 Restaurant association * FoodItem'	-	' 1 Restaurant association * FoodItem'
 ' 1 Table association * Reservation'	-	' 1 Reservation association 0..* Table'
 ' 1 Reservation association * Person'	-	' 1 Reservation association 1 Employee'
 ' 1 FoodItem association * Ingredient'	-	' 1 FoodItem association * Ingredient'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  13                  17                  
Attributes          49                  34                  51                  
Associations        14                  8                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------17/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
UnitOfMeasure(EACH, OUNCE, SHEET, POUND, GRAM, DOZEN)
MenuItemType(APPETIZER, ENTREE, DESSERT, BEVERAGE)
PersonRole(MANAGER, MAITRE, WAITER, BARTENDER, CHEF, COOK, BUS_PERSON, DISHWASHER)

Classes:
Romano()
Reservation(int number, Date dateTime, int partySize)
IndividualReservation(int seatingPreference, boolean smokingPreference)
BanquetReservation(string groupName, string paymentMethod)
Table(int number, string description, int capacity, boolean isOccupied)
Manager(string name, Date dateOfBirth, string driverLicenseNumber)
Maitre(string name, Date dateOfBirth, string driverLicenseNumber)
Waiter(string name, Date dateOfBirth, string driverLicenseNumber)
Bartender(string name, Date dateOfBirth, string driverLicenseNumber)
Chef(string name, Date dateOfBirth, string driverLicenseNumber)
Cook(string name, Date dateOfBirth, string driverLicenseNumber)
BusPerson(string name, Date dateOfBirth, string driverLicenseNumber)
Dishwasher(string name, Date dateOfBirth, string driverLicenseNumber)
MenuItem(int number, string description, int prepTime, double lunchPrice, double dinnerPrice, double happyHourPrice, MenuItemType type)
FoodItem(int number, string description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
Relationships:
1 Romano contain *Reservation
1 Romano contain *Table
1 Romano contain *Manager
1 Romano contain *Maitre
1 Romano contain *Waiter
1 Romano contain *Bartender
1 Romano contain *Chef
1 Romano contain *Cook
1 Romano contain *BusPerson
1 Romano contain *Dishwasher
1 MenuItem contain *FoodItem
1 Reservation associate *Table
1 Reservation associate *MenuItem
1 Manager associate *Maitre
1 Maitre associate *Waiter
1 Waiter associate *MenuItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: UnitOfMeasure (enum) - Enum Attributes: [EACH, OUNCE, SHEET, POUND, GRAM, DOZEN], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [APPETIZER, ENTREE, DESSERT, BEVERAGE], Class Attributes: []
Class: PersonRole (enum) - Enum Attributes: [MANAGER, MAITRE, WAITER, BARTENDER, CHEF, COOK, BUS_PERSON, DISHWASHER], Class Attributes: []
Class: Romano (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:int,dateTime:Date,partySize:int]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:int,smokingPreference:boolean]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,capacity:int,isOccupied:boolean]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,prepTime:int,lunchPrice:double,dinnerPrice:double,happyHourPrice:double,type:MenuItemType]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Relationships:
 1 Romano association * Reservation
 1 Romano association * Table
 1 Romano association * Manager
 1 Romano association * Maitre
 1 Romano association * Waiter
 1 Romano association * Bartender
 1 Romano association * Chef
 1 Romano association * Cook
 1 Romano association * BusPerson
 1 Romano association * Dishwasher
 1 MenuItem association * FoodItem
 1 Reservation association * Table
 1 Reservation association * MenuItem
 1 Manager association * Maitre
 1 Maitre association * Waiter
 1 Waiter association * MenuItem
--------------------------------------------------------------------------------
--17/20--Classes and attributes matching process:
-Classes:
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'PersonRole(enum)'	-	'Role(enum)'
 'Manager(class)'	-	'Employee(class)'
-Attributes:
 'MenuItemType(enum):APPETIZER'	-	'appetizer'
 'MenuItemType(enum):ENTREE'	-	'entree'
 'MenuItemType(enum):DESSERT'	-	'dessert'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):description'	-	'description'
 'MenuItem(class):number'	-	'number'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'MenuItem(class):type'	-	'type'
 'FoodItem(class):number'	-	'number'
 'FoodItem(class):description'	-	'description'
 'UnitOfMeasure(enum):OUNCE'	-	'ounce'
 'UnitOfMeasure(enum):SHEET'	-	'sheet'
 'UnitOfMeasure(enum):POUND'	-	'pound'
 'UnitOfMeasure(enum):GRAM'	-	'gram'
 'UnitOfMeasure(enum):DOZEN'	-	'dozen'
 'PersonRole(enum):MANAGER'	-	'manager'
 'PersonRole(enum):MAITRE'	-	'Maitre'
 'PersonRole(enum):WAITER'	-	'waiter'
 'PersonRole(enum):BARTENDER'	-	'bartender'
 'PersonRole(enum):CHEF'	-	'chef'
 'PersonRole(enum):COOK'	-	'cook'
 'PersonRole(enum):BUS_PERSON'	-	'busPerson'
 'PersonRole(enum):DISHWASHER'	-	'dishwasher'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             18                  10                  17                  
Attributes          64                  30                  51                  
Associations        16                  1                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------18/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
FoodItem(Olive Oil, Mozzarella Cheese, ...)
MenuItem(Chicken Marsala, Fish Soup, ...)
ReservationCategory(Individual, Banquet)
Person(name, dateofBirth, driverLicenseNumber)
JobTitle(Manager, Maitre, Waiter, Bartender, Chef, Cook, BusPerson, Dishwasher)
UnitOfMeasure(Each, Ounce, Sheet, Pound, Gram, Dozen)

Classes:
Romano()
Reservation(time, date, numberOfPeople, name, phoneNumber, reservationNumber, seatingPreference, smokingPreference, groupname, paymentMethod)
Table(tableNumber, description, size)
Manager()
Maitre()
Waiter()
Bartender()
Chef()
Cook()
BusPerson()
Dishwasher()
FoodItemRelationship(parentFoodItemNumber, childFoodItemNumber, quantity)
MenuCategory(Appetizer, Entree, Dessert, Beverage)
MenuItemPrice(menuItemNumber, price, timeOfDay)
MenuOrder(reservationNumber, menuItemNumber, timeOrdered)

Relationships:
1 Romano contain *Reservation
1 Romano contain *Table
1 Romano contain *Person
1 Romano contain *JobTitle
1 Romano contain *FoodItem
1 Person associate *JobTitle
1 Reservation associate *Table
1 Reservation associate *Person
1 Reservation associate *MenuItem
1 JobTitle associate *Person
1 FoodItem associate *UnitOfMeasure
1 FoodItem associate *FoodItemRelationship
1 MenuItem associate *MenuCategory
1 MenuItem associate *FoodItem
1 MenuItem associate *MenuItemPrice
1 MenuItem associate *MenuOrder

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: FoodItem (enum) - Enum Attributes: [Oil, Cheese, ...], Class Attributes: []
Class: MenuItem (enum) - Enum Attributes: [Marsala, Soup, ...], Class Attributes: []
Class: ReservationCategory (enum) - Enum Attributes: [Individual, Banquet], Class Attributes: []
Class: Person (enum) - Enum Attributes: [name, dateofBirth, driverLicenseNumber], Class Attributes: []
Class: JobTitle (enum) - Enum Attributes: [Manager, Maitre, Waiter, Bartender, Chef, Cook, BusPerson, Dishwasher], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [Each, Ounce, Sheet, Pound, Gram, Dozen], Class Attributes: []
Class: Romano (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [time:,date:,numberOfPeople:,name:,phoneNumber:,reservationNumber:,seatingPreference:,smokingPreference:,groupname:,paymentMethod:]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:,description:,size:]
Class: Manager (class) - Enum Attributes: [], Class Attributes: []
Class: Maitre (class) - Enum Attributes: [], Class Attributes: []
Class: Waiter (class) - Enum Attributes: [], Class Attributes: []
Class: Bartender (class) - Enum Attributes: [], Class Attributes: []
Class: Chef (class) - Enum Attributes: [], Class Attributes: []
Class: Cook (class) - Enum Attributes: [], Class Attributes: []
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: []
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 1 Romano association * Reservation
 1 Romano association * Table
 1 Romano association * Person
 1 Romano association * JobTitle
 1 Romano association * FoodItem
 1 Person association * JobTitle
 1 Reservation association * Table
 1 Reservation association * Person
 1 Reservation association * MenuItem
 1 JobTitle association * Person
 1 FoodItem association * UnitOfMeasure
 1 MenuItem association * MenuCategory
 1 MenuItem association * FoodItem
 1 MenuItem association * MenuItemPrice
 1 MenuItem association * MenuOrder
--------------------------------------------------------------------------------
--18/20--Classes and attributes matching process:
-Classes:
 'FoodItem(enum)'	-	'FoodItem(class)'
 'MenuItem(enum)'	-	'MenuItem(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'Person(enum)'	-	'Employee(class)'
 'JobTitle(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
-Attributes:
 'Reservation(class):time'	-	'time'
 'Reservation(class):date'	-	'date'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'Person(enum):name'	-	'name'
 'Person(enum):dateofBirth'	-	'dateOfBirth'
 'Person(enum):driverLicenseNumber'	-	'driverLicenseNumber'
 'JobTitle(enum):Manager'	-	'manager'
 'JobTitle(enum):Maitre'	-	'Maitre'
 'JobTitle(enum):Waiter'	-	'waiter'
 'JobTitle(enum):Bartender'	-	'bartender'
 'JobTitle(enum):Chef'	-	'chef'
 'JobTitle(enum):Cook'	-	'cook'
 'JobTitle(enum):BusPerson'	-	'busPerson'
 'JobTitle(enum):Dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):Ounce'	-	'ounce'
 'UnitOfMeasure(enum):Sheet'	-	'sheet'
 'UnitOfMeasure(enum):Pound'	-	'pound'
 'UnitOfMeasure(enum):Gram'	-	'gram'
 'UnitOfMeasure(enum):Dozen'	-	'dozen'
-Relationships:
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
 ' 1 Reservation association * Person'	-	' 1 Reservation association 1 Employee'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             17                  7                   17                  
Attributes          38                  24                  51                  
Associations        12                  2                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------19/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
FoodItem(Olive Oil, Mozzarella Cheese, ...)
MenuItem(Chicken Marsala, Fish Soup, ...)
FoodRelationship(foodItemNumber, ingredientFoodItemNumber, quantity)
UnitOfMeasure(tsp, oz, sheet, pound, gram, dozen)
Person(name, dateOfBirth, driverLicenseNumber)
ReservationCategory(Individual, Banquet)
TableCategory(2-person, 4-person, 6-person)
MenuCategory(Appetizer, Entree, Dessert, Beverage)

Classes:
Romano()
Manager()
Maitre()
Waiter()
Bartender()
Chef()
Cook()
BusPerson()
Dishwasher()
Reservation(number, time, date, numberOfPeople, phoneNumber, name, seatingPreference, smokingPreference, groupname, paymentMethod)
Table(number, description, category)
MenuItem(number, description, prepTime, priceLunch, priceDinner, priceHappyHour, category)
FoodItem(number, description, purchaseFlag)
FoodUtilization(foodItemNumber, menuItemNumber)
MenuUtilization(menuItemNumber, foodItemNumber)
FoodRelationship(foodItemNumber, ingredientFoodItemNumber, quantity)
UnitOfMeasure(name)

Relationships:
1 Romano contain *Manager
1 Romano contain *Maitre
1 Romano contain *Waiter
1 Romano contain *Bartender
1 Romano contain *Chef
1 Romano contain *Cook
1 Romano contain *BusPerson
1 Romano contain *Dishwasher
1 Romano contain *Person
1 Romano contain *Reservation
1 Romano contain *Table
1 Romano contain *MenuItem
1 Romano contain *FoodItem
1 Romano contain *FoodUtilization
1 Romano contain *MenuUtilization
1 Romano contain *FoodRelationship
1 Romano contain *UnitOfMeasure

1 Reservation associate *Table
1 Reservation associate *MenuItems
1 Reservation associate *Waiter
1 Waiter associate *Reservation
1 MenuItem associate *FoodItem
1 FoodItem associate *MenuItem
1 FoodItem associate *FoodRelationship
1 FoodItem associate *UnitOfMeasure

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: FoodItem (enum) - Enum Attributes: [Oil, Cheese, ...], Class Attributes: []
Class: MenuItem (enum) - Enum Attributes: [Marsala, Soup, ...], Class Attributes: []
Class: Romano (class) - Enum Attributes: [], Class Attributes: []
Class: Manager (class) - Enum Attributes: [], Class Attributes: []
Class: Maitre (class) - Enum Attributes: [], Class Attributes: []
Class: Waiter (class) - Enum Attributes: [], Class Attributes: []
Class: Bartender (class) - Enum Attributes: [], Class Attributes: []
Class: Chef (class) - Enum Attributes: [], Class Attributes: []
Class: Cook (class) - Enum Attributes: [], Class Attributes: []
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: []
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:,time:,date:,numberOfPeople:,phoneNumber:,name:,seatingPreference:,smokingPreference:,groupname:,paymentMethod:]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:,description:,category:]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [number:,description:,prepTime:,priceLunch:,priceDinner:,priceHappyHour:,category:]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:,description:,purchaseFlag:]
Class: FoodUtilization (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:,menuItemNumber:]
Class: MenuUtilization (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:,foodItemNumber:]
Class: UnitOfMeasure (class) - Enum Attributes: [], Class Attributes: [name:]
Relationships:
 1 Romano association * Manager
 1 Romano association * Maitre
 1 Romano association * Waiter
 1 Romano association * Bartender
 1 Romano association * Chef
 1 Romano association * Cook
 1 Romano association * BusPerson
 1 Romano association * Dishwasher
 1 Romano association * Person
 1 Romano association * Reservation
 1 Romano association * Table
 1 Romano association * MenuItem
 1 Romano association * FoodItem
 1 Romano association * FoodUtilization
 1 Romano association * MenuUtilization
 1 Romano association * UnitOfMeasure
 1 Reservation association * Table
 1 Reservation association * MenuItems
 1 Reservation association * Waiter
 1 Waiter association * Reservation
 1 MenuItem association * FoodItem
 1 FoodItem association * MenuItem
 1 FoodItem association * UnitOfMeasure
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Classes:
 'FoodItem(enum)'	-	'FoodItem(class)'
 'MenuItem(enum)'	-	'MenuItem(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'Manager(class)'	-	'Employee(class)'
 'UnitOfMeasure(class)'	-	'Unit(enum)'
-Attributes:
 'Reservation(class):time'	-	'time'
 'Reservation(class):date'	-	'date'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Reservation(class):name'	-	'name'
 'Table(class):description'	-	'description'
-Relationships:
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             18                  6                   17                  
Attributes          34                  6                   51                  
Associations        21                  1                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------20/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
TableCategory(2-person, 4-person, 6-person)
MenuCategory(Appetizer, Entree, Dessert, Beverage)
UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)
Classes:
Restaurant()
Reservation(int reservationNumber, Date time, int numberOfPeople)
IndividualReservation(seatingPreference, smokingPreference)
BanquetReservation(groupName, paymentMethod)
Table(int tableNumber, string description, TableCategory category)
Person(string name, Date dateOfBirth, string driverLicenseNumber)
UserRole()
Manager()
Maitre()
Waiter()
Bartender()
Chef()
Cook()
BusPerson()
Dishwasher()
MenuItem(int itemNumber, string description, int prepTime, MenuCategory category)
FoodItem(int foodItemNumber, string description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)

Relationships:
1 Restaurant contain *Reservation
1 Restaurant contain *Table
1 Restaurant contain *Person
1 Restaurant contain *UserRole
1 UserRole have 1..* Person
1 UserRole have 1..* Manager
1 UserRole have 1..* Maitre
1 UserRole have 1..* Waiter
1 UserRole have 1..* Bartender
1 UserRole have 1..* Chef
1 UserRole have 1..* Cook
1 UserRole have 1..* BusPerson
1 UserRole have 1..* Dishwasher
1 Reservation associate *Table
1 Reservation associate *MenuItem
1 MenuItem associate *FoodItem

(MenuItem) *----* (FoodItem)

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: TableCategory (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: MenuCategory (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,time:Date,numberOfPeople:int]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:,smokingPreference:]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:,paymentMethod:]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:string,category:TableCategory]
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: UserRole (class) - Enum Attributes: [], Class Attributes: []
Class: Manager (class) - Enum Attributes: [], Class Attributes: []
Class: Maitre (class) - Enum Attributes: [], Class Attributes: []
Class: Waiter (class) - Enum Attributes: [], Class Attributes: []
Class: Bartender (class) - Enum Attributes: [], Class Attributes: []
Class: Chef (class) - Enum Attributes: [], Class Attributes: []
Class: Cook (class) - Enum Attributes: [], Class Attributes: []
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: []
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [itemNumber:int,description:string,prepTime:int,category:MenuCategory]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Relationships:
 1 Restaurant association * Reservation
 1 Restaurant association * Table
 1 Restaurant association * Person
 1 Restaurant association * UserRole
 1 UserRole association 1..* Person
 1 UserRole association 1..* Manager
 1 UserRole association 1..* Maitre
 1 UserRole association 1..* Waiter
 1 UserRole association 1..* Bartender
 1 UserRole association 1..* Chef
 1 UserRole association 1..* Cook
 1 UserRole association 1..* BusPerson
 1 UserRole association 1..* Dishwasher
 1 Reservation association * Table
 1 Reservation association * MenuItem
 1 MenuItem association * FoodItem
--------------------------------------------------------------------------------
--20/20--Classes and attributes matching process:
-Classes:
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableCategory(enum)'	-	'TableType(enum)'
 'MenuCategory(enum)'	-	'MenuItemType(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Person(class)'	-	'Employee(class)'
-Attributes:
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):description'	-	'description'
 'TableCategory(enum):2-person'	-	'2person'
 'TableCategory(enum):4-person'	-	'4person'
 'TableCategory(enum):6-person'	-	'6person'
 'MenuCategory(enum):Appetizer'	-	'appetizer'
 'MenuCategory(enum):Entree'	-	'entree'
 'MenuCategory(enum):Dessert'	-	'dessert'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Person(class):name'	-	'name'
 'Person(class):dateOfBirth'	-	'dateOfBirth'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * Person'	-	' 1 Restaurant association * Employee'
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             20                  11                  17                  
Attributes          34                  26                  51                  
Associations        16                  4                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
Romano, avg-method2
--------------------------------------------------------------------------------
Metric              Precision      Recall         F1             F2             
--------------------------------------------------------------------------------
Classes             0.531          0.609          0.567          0.591
Attributes          0.513          0.499          0.506          0.502
Associations        0.216          0.254          0.233          0.245
Inheritances        0.000          0.000          0.000          0.000
--------------------------------------------------------------------------------
