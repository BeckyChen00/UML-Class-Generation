------------------------------------------------------------
---------------------1/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
- ReservationType (individual, banquet)
- TableSize (2-person, 4-person, 6-person)
- EmployeeRole (manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
- MenuItemType (appetizer, entree, dessert, beverage)
- UnitOfMeasure (each, ounce, sheet, pound, gram, dozen)

Classes:
- RomanoRestaurant()
- Reservation(int reservationNumber, Date date, Time time, int numberOfPeople, String name, String phone, ReservationType type, String seatingPreference, String smokingPreference, String groupName, String paymentMethod)
- Table(int tableNumber, String description, TableSize size)
- Manager(String name, Date dateOfBirth, String driverLicenseNumber)
- Maitre(String name, Date dateOfBirth, String driverLicenseNumber)
- Waiter(String name, Date dateOfBirth, String driverLicenseNumber)
- Bartender(String name, Date dateOfBirth, String driverLicenseNumber)
- Chef(String name, Date dateOfBirth, String driverLicenseNumber)
- Cook(String name, Date dateOfBirth, String driverLicenseNumber)
- BusPerson(String name, Date dateOfBirth, String driverLicenseNumber)
- Dishwasher(String name, Date dateOfBirth, String driverLicenseNumber)
- Menu(int menuItemNumber, String description, int prepTime, MenuItemType type, double priceLunch, double priceDinner, double priceHappyHour)
- Order(int reservationNumber, List<Menu> menuItems, Time timeOrdered)
- FoodItem(int foodItemNumber, String description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
- MenuFoodItem(int parentFoodItemNumber, int childFoodItemNumber, double quantity)

Relationships:
- RomanoRestaurant contains * Reservation
- RomanoRestaurant contains * Table
- RomanoRestaurant contains * Manager
- RomanoRestaurant contains * Maitre
- RomanoRestaurant contains * Waiter
- RomanoRestaurant contains * Bartender
- RomanoRestaurant contains * Chef
- RomanoRestaurant contains * Cook
- RomanoRestaurant contains * BusPerson
- RomanoRestaurant contains * Dishwasher
- Reservation associates 1 Table
- Reservation associates 1 Waiter
- Reservation associates * Menu
- Waiter maintains * Order
- Menu contains * FoodItem
- FoodItem contains * MenuFoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationType (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: EmployeeRole (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: RomanoRestaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,date:Date,time:Time,numberOfPeople:int,name:String,phone:String,type:ReservationType,seatingPreference:String,smokingPreference:String,groupName:String,paymentMethod:String]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:String,size:TableSize]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Menu (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:String,prepTime:int,type:MenuItemType,priceLunch:double,priceDinner:double,priceHappyHour:double]
Class: Order (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,menuItems:List<Menu>,timeOrdered:Time]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:String,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: MenuFoodItem (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:int,childFoodItemNumber:int,quantity:double]
Relationships:
 1 RomanoRestaurant association * Reservation
 1 RomanoRestaurant association * Table
 1 RomanoRestaurant association * Manager
 1 RomanoRestaurant association * Maitre
 1 RomanoRestaurant association * Waiter
 1 RomanoRestaurant association * Bartender
 1 RomanoRestaurant association * Chef
 1 RomanoRestaurant association * Cook
 1 RomanoRestaurant association * BusPerson
 1 RomanoRestaurant association * Dishwasher
 1 Reservation association 1 Table
 1 Reservation association 1 Waiter
 1 Reservation association * Menu
 1 Waiter association * Order
 1 Menu association * FoodItem
 1 FoodItem association * MenuFoodItem
--------------------------------------------------------------------------------
--1/20--Classes and attributes matching process:
-Classes:
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'Menu(class)'	-	'Menu(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'EmployeeRole(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
 'MenuFoodItem(class)'	-	'Ingredient(class)'
-Attributes:
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'EmployeeRole(enum):manager'	-	'manager'
 'EmployeeRole(enum):Maitre'	-	'Maitre'
 'EmployeeRole(enum):waiter'	-	'waiter'
 'EmployeeRole(enum):bartender'	-	'bartender'
 'EmployeeRole(enum):chef'	-	'chef'
 'EmployeeRole(enum):cook'	-	'cook'
 'EmployeeRole(enum):dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
 'MenuFoodItem(class):quantity'	-	'quantity'
-Relationships:
 ' 1 Reservation association 1 Table'	-	' 1 Reservation association 0..* Table'
 ' 1 FoodItem association * MenuFoodItem'	-	' 1 FoodItem association * Ingredient'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             20                  10                  17                  
Attributes          78                  30                  51                  
Associations        16                  2                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------2/20------Romano:
------------------------------------------------------------
AI:
Enumeration: 
ReservationType(individual, banquet)
SeatingPreference(inside, patio)
SmokingPreference(smoking, nonsmoking)
TableSize(2-person, 4-person, 6-person)
PersonRole(manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
MenuItemType(appetizer, entree, dessert, beverage)
UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)

Classes: 
RomanoRestaurant()
Reservation(int reservationNumber, Date date, Time time, int numOfPeople, string name, string phone, ReservationType type, SeatingPreference seatingPref, SmokingPreference smokingPref)
Table(int tableNumber, string description, TableSize size)
Manager(string name, Date dateOfBirth, string driverLicenseNumber)
Maitre(string name, Date dateOfBirth, string driverLicenseNumber)
Waiter(string name, Date dateOfBirth, string driverLicenseNumber)
Bartender(string name, Date dateOfBirth, string driverLicenseNumber)
Chef(string name, Date dateOfBirth, string driverLicenseNumber)
Cook(string name, Date dateOfBirth, string driverLicenseNumber)
BusPerson(string name, Date dateOfBirth, string driverLicenseNumber)
Dishwasher(string name, Date dateOfBirth, string driverLicenseNumber)
MenuItem(int itemNumber, string description, int prepTime, MenuItemType type, float lunchPrice, float dinnerPrice, float happyHourPrice)
FoodItem(int itemNumber, string description, boolean purchaseFlag, UnitOfMeasure unitMeasure)
IngredientRelationship(int parentItemNumber, int childItemNumber, float quantity)

Relationships:
1 RomanoRestaurant contain * Reservation
1 RomanoRestaurant contain * Table
1 RomanoRestaurant contain * Manager
1 RomanoRestaurant contain * Maitre
1 RomanoRestaurant contain * Waiter
1 RomanoRestaurant contain * Bartender
1 RomanoRestaurant contain * Chef
1 RomanoRestaurant contain * Cook
1 RomanoRestaurant contain * BusPerson
1 RomanoRestaurant contain * Dishwasher
1 RomanoRestaurant contain * MenuItem
1 RomanoRestaurant contain * FoodItem
1 RomanoRestaurant contain * IngredientRelationship

* Reservation associate 1 Waiter
* Reservation associate 1 Table
* MenuItem associate * Reservation
* FoodItem associate * MenuItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationType (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: PersonRole (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: RomanoRestaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,date:Date,time:Time,numOfPeople:int,name:string,phone:string,type:ReservationType,seatingPref:SeatingPreference,smokingPref:SmokingPreference]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:string,size:TableSize]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [itemNumber:int,description:string,prepTime:int,type:MenuItemType,lunchPrice:float,dinnerPrice:float,happyHourPrice:float]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [itemNumber:int,description:string,purchaseFlag:boolean,unitMeasure:UnitOfMeasure]
Relationships:
 1 RomanoRestaurant association * Reservation
 1 RomanoRestaurant association * Table
 1 RomanoRestaurant association * Manager
 1 RomanoRestaurant association * Maitre
 1 RomanoRestaurant association * Waiter
 1 RomanoRestaurant association * Bartender
 1 RomanoRestaurant association * Chef
 1 RomanoRestaurant association * Cook
 1 RomanoRestaurant association * BusPerson
 1 RomanoRestaurant association * Dishwasher
 1 RomanoRestaurant association * MenuItem
 1 RomanoRestaurant association * FoodItem
 * Reservation association 1 Waiter
 * Reservation association 1 Table
 * MenuItem association * Reservation
 * FoodItem association * MenuItem
--------------------------------------------------------------------------------
--2/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'PersonRole(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):name'	-	'name'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'MenuItem(class):type'	-	'type'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'PersonRole(enum):manager'	-	'manager'
 'PersonRole(enum):Maitre'	-	'Maitre'
 'PersonRole(enum):waiter'	-	'waiter'
 'PersonRole(enum):bartender'	-	'bartender'
 'PersonRole(enum):chef'	-	'chef'
 'PersonRole(enum):cook'	-	'cook'
 'PersonRole(enum):dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' * Reservation association 1 Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             20                  11                  17                  
Attributes          74                  35                  51                  
Associations        16                  1                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------3/20------Romano:
------------------------------------------------------------
AI:
Enumerations:
- TableSize (2-person, 4-person, 6-person)
- EmployeeType (manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
- MenuItemType (appetizer, entree, dessert, beverage)
- UnitOfMeasure (each, ounce, sheet, pound, gram, dozen)

Classes:
- Restaurant
- Reservation(number: int, time: datetime, date: date, numberOfPeople: int, name: string, phone: string, type: enum{individual, banquet})
- IndividualReservation(seatingPreference: enum{inside, patio}, smokingPreference: enum{smoking, nonsmoking})
- BanquetReservation(groupName: string, paymentMethod: string)
- Table(number: int, description: string, size: enum{2-person, 4-person, 6-person})
- TableReservation(tableNumber: int, reservationNumber: int)
- Manager(name: string, dateOfBirth: date, driverLicenseNumber: string)
- Maitre(name: string, dateOfBirth: date, driverLicenseNumber: string)
- Waiter(name: string, dateOfBirth: date, driverLicenseNumber: string)
- Bartender(name: string, dateOfBirth: date, driverLicenseNumber: string)
- Chef(name: string, dateOfBirth: date, driverLicenseNumber: string)
- Cook(name: string, dateOfBirth: date, driverLicenseNumber: string)
- BusPerson(name: string, dateOfBirth: date, driverLicenseNumber: string)
- Dishwasher(name: string, dateOfBirth: date, driverLicenseNumber: string)
- Menu(menuItemNumber: int, description: string, prepTime: int, type: enum{appetizer, entree, dessert, beverage})
- MenuPrice(menuItemNumber: int, price: float, timeOfDay: enum{lunch, dinner, happy hour})
- Order(reservationNumber: int, menuItemNumber: int, timeOrdered: datetime)
- FoodItem(foodItemNumber: int, description: string, purchaseFlag: boolean, unitOfMeasure: enum{each, ounce, sheet, pound, gram, dozen})
- FoodItemRelationship(parentFoodItemNumber: int, childFoodItemNumber: int, quantityUsed: float)

Associations:
- Restaurant has * Reservation
- Reservation has 1 TableReservation
- TableReservation associates 1 Table
- Restaurant has * Manager
- Restaurant has * Maitre
- Restaurant has * Waiter
- Restaurant has * Bartender
- Restaurant has * Chef
- Restaurant has * Cook
- Restaurant has * BusPerson
- Restaurant has * Dishwasher
- Menu has * MenuPrice
- Reservation has * Order
- Menu has * FoodItem
- FoodItemRelationship associates 1 FoodItem as parent and 1 FoodItem as child

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: EmployeeType (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:int,time:datetime,date:date,numberOfPeople:int,name:string,phone:string,type:enum{individual,banquet}:]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:enum{inside,patio}:,smokingPreference:enum{smoking,nonsmoking}:]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,size:enum{2-person,4-person:,6-person}:]
Class: TableReservation (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,reservationNumber:int]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:date,driverLicenseNumber:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:date,driverLicenseNumber:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:date,driverLicenseNumber:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:date,driverLicenseNumber:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:date,driverLicenseNumber:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:date,driverLicenseNumber:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:date,driverLicenseNumber:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:date,driverLicenseNumber:string]
Class: Menu (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:string,prepTime:int,type:enum{appetizer,entree:,dessert:,beverage}:]
Class: MenuPrice (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,price:float,timeOfDay:enum{lunch,dinner:,hour}:happy]
Class: Order (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,menuItemNumber:int,timeOrdered:datetime]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:boolean,unitOfMeasure:enum{each,ounce:,sheet:,pound:,gram:,dozen}:]
Relationships:
 1 Restaurant association * Reservation
 1 Reservation association 1 TableReservation
 1 TableReservation association 1 Table
 1 Restaurant association * Manager
 1 Restaurant association * Maitre
 1 Restaurant association * Waiter
 1 Restaurant association * Bartender
 1 Restaurant association * Chef
 1 Restaurant association * Cook
 1 Restaurant association * BusPerson
 1 Restaurant association * Dishwasher
 1 Menu association * MenuPrice
 1 Reservation association * Order
 1 Menu association * FoodItem
--------------------------------------------------------------------------------
--3/20--Classes and attributes matching process:
-Classes:
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'Menu(class)'	-	'Menu(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'EmployeeType(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
-Attributes:
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):time'	-	'time'
 'Reservation(class):date'	-	'date'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):description'	-	'description'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'EmployeeType(enum):manager'	-	'manager'
 'EmployeeType(enum):Maitre'	-	'Maitre'
 'EmployeeType(enum):waiter'	-	'waiter'
 'EmployeeType(enum):bartender'	-	'bartender'
 'EmployeeType(enum):chef'	-	'chef'
 'EmployeeType(enum):cook'	-	'cook'
 'EmployeeType(enum):dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Restaurant association * Manager'	-	' 1 Restaurant association * Employee'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             22                  12                  17                  
Attributes          90                  31                  51                  
Associations        14                  2                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------4/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
- ReservationCategory(individual, banquet)
- SeatingPreference(inside, patio)
- SmokingPreference(smoking, nonsmoking)
- TableSize(2-person, 4-person, 6-person)
- PersonRole(manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
- MenuItemType(appetizer, entree, dessert, beverage)
- UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)

Classes:
- Restaurant()
- Reservation(time:Time, date:Date, numberOfPeople:int, name:string, phone:string, reservationNumber:int, category:ReservationCategory)
- IndividualReservation(seatingPreference:SeatingPreference, smokingPreference:SmokingPreference)
- BanquetReservation(groupName:string, paymentMethod:string)
- Table(tableNumber:int, description:string, size:TableSize)
- Manager(name:string, dateOfBirth:Date, driverLicenseNumber:string)
- Maitre(name:string, dateOfBirth:Date, driverLicenseNumber:string)
- Waiter(name:string, dateOfBirth:Date, driverLicenseNumber:string)
- Bartender(name:string, dateOfBirth:Date, driverLicenseNumber:string)
- Chef(name:string, dateOfBirth:Date, driverLicenseNumber:string)
- Cook(name:string, dateOfBirth:Date, driverLicenseNumber:string)
- BusPerson(name:string, dateOfBirth:Date, driverLicenseNumber:string)
- Dishwasher(name:string, dateOfBirth:Date, driverLicenseNumber:string)
- Menu(menuItemNumber:int, description:string, prepTime:Time, type:MenuItemType, priceLunch:double, priceDinner:double, priceHappyHour:double)
- MenuOrder(reservationNumber:int, menuItemNumber:int, timeOrdered:Time)
- FoodItem(foodItemNumber:int, description:string, purchaseFlag:boolean, unitOfMeasure:UnitOfMeasure)
- MenuFoodItem(menuItemNumber:int, foodItemNumber:int, quantity:double)

Relationships:
- Restaurant has * Reservation
- Reservation has 1 Table
- Reservation has * MenuOrder
- Table has * Reservation
- Restaurant has * Manager
- Restaurant has * Maitre
- Restaurant has * Waiter
- Restaurant has * Bartender
- Restaurant has * Chef
- Restaurant has * Cook
- Restaurant has * BusPerson
- Restaurant has * Dishwasher
- Menu has 1 MenuFoodItem
- FoodItem has * MenuFoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationCategory (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: PersonRole (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [time:Time,date:Date,numberOfPeople:int,name:string,phone:string,reservationNumber:int,category:ReservationCategory]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:SeatingPreference,smokingPreference:SmokingPreference]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:string,size:TableSize]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Menu (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:string,prepTime:Time,type:MenuItemType,priceLunch:double,priceDinner:double,priceHappyHour:double]
Class: MenuOrder (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,menuItemNumber:int,timeOrdered:Time]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: MenuFoodItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,foodItemNumber:int,quantity:double]
Relationships:
 1 Restaurant association * Reservation
 1 Reservation association 1 Table
 1 Reservation association * MenuOrder
 1 Table association * Reservation
 1 Restaurant association * Manager
 1 Restaurant association * Maitre
 1 Restaurant association * Waiter
 1 Restaurant association * Bartender
 1 Restaurant association * Chef
 1 Restaurant association * Cook
 1 Restaurant association * BusPerson
 1 Restaurant association * Dishwasher
 1 Menu association 1 MenuFoodItem
 1 FoodItem association * MenuFoodItem
--------------------------------------------------------------------------------
--4/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'Menu(class)'	-	'Menu(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'PersonRole(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
 'MenuFoodItem(class)'	-	'Ingredient(class)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):time'	-	'time'
 'Reservation(class):date'	-	'date'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'PersonRole(enum):manager'	-	'manager'
 'PersonRole(enum):Maitre'	-	'Maitre'
 'PersonRole(enum):waiter'	-	'waiter'
 'PersonRole(enum):bartender'	-	'bartender'
 'PersonRole(enum):chef'	-	'chef'
 'PersonRole(enum):cook'	-	'cook'
 'PersonRole(enum):dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
 'MenuFoodItem(class):quantity'	-	'quantity'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Reservation association 1 Table'	-	' 1 Reservation association 0..* Table'
 ' 1 Restaurant association * Manager'	-	' 1 Restaurant association * Employee'
 ' 1 FoodItem association * MenuFoodItem'	-	' 1 FoodItem association * Ingredient'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             24                  15                  17                  
Attributes          82                  38                  51                  
Associations        14                  4                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------5/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
- ReservationType (individual, banquet)
- SeatingPreference (inside, patio)
- SmokingPreference (smoking, nonsmoking)
- TableSize (2-person, 4-person, 6-person)
- EmployeeType (manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
- MenuItemType (appetizer, entree, dessert, beverage)
- UnitOfMeasure (each, ounce, sheet, pound, gram, dozen)

Classes:
- Restaurant
- Reservation(number, time, date, numberOfPeople, name, phoneNumber)
- IndividualReservation(seatingPreference, smokingPreference)
- BanquetReservation(groupName, paymentMethod)
- Table(number, description, size)
- Manager(name, dateOfBirth, driverLicenseNumber)
- Maitre(name, dateOfBirth, driverLicenseNumber)
- Waiter(name, dateOfBirth, driverLicenseNumber)
- Bartender(name, dateOfBirth, driverLicenseNumber)
- Chef(name, dateOfBirth, driverLicenseNumber)
- Cook(name, dateOfBirth, driverLicenseNumber)
- BusPerson(name, dateOfBirth, driverLicenseNumber)
- Dishwasher(name, dateOfBirth, driverLicenseNumber)
- Menu(menuItemNumber, description, prepTime, price, menuItemType)
- FoodItem(foodItemNumber, description, purchaseFlag, unitOfMeasure)
- Relationship(parentFoodItemNumber, childFoodItemNumber, quantity)

Relationships:
- Restaurant has many Reservations
- Reservation has one Restaurant
- Reservation has many Tables
- Table has many Reservations
- Restaurant has many Employees
- Employee belongs to one Restaurant
- Reservation is assigned to one Waiter
- Waiter can handle many Reservations
- Menu has many MenuItems
- MenuItem can be part of many Menus
- MenuItem utilizes many FoodItems
- FoodItem can be part of many MenuItems
- FoodItem has many Relationships
- Relationship belongs to one FoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationType (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: EmployeeType (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:,time:,date:,numberOfPeople:,name:,phoneNumber:]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:,smokingPreference:]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:,paymentMethod:]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:,description:,size:]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:,dateOfBirth:,driverLicenseNumber:]
Class: Menu (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:,description:,prepTime:,price:,menuItemType:]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:,description:,purchaseFlag:,unitOfMeasure:]
Relationships:
 1 Restaurant association 1 Reservations
 1 Reservation association 1 Restaurant
 1 Reservation association 1 Tables
 1 Table association 1 Reservations
 1 Restaurant association 1 Employees
 1 Employee association 1 Restaurant
 1 Reservation association 1 Waiter
 1 Waiter association 1 Reservations
 1 Menu association 1 MenuItems
 1 MenuItem association 1 Menus
 1 MenuItem association 1 FoodItems
 1 FoodItem association 1 MenuItems
--------------------------------------------------------------------------------
--5/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'Menu(class)'	-	'Menu(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'EmployeeType(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):time'	-	'time'
 'Reservation(class):date'	-	'date'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):description'	-	'description'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'EmployeeType(enum):manager'	-	'manager'
 'EmployeeType(enum):Maitre'	-	'Maitre'
 'EmployeeType(enum):waiter'	-	'waiter'
 'EmployeeType(enum):bartender'	-	'bartender'
 'EmployeeType(enum):chef'	-	'chef'
 'EmployeeType(enum):cook'	-	'cook'
 'EmployeeType(enum):dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Reservation association 1 Restaurant'	-	' 1 Restaurant association * Reservation'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             22                  14                  17                  
Attributes          73                  36                  51                  
Associations        2                   1                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------6/20------Romano:
------------------------------------------------------------
AI:
Enumeration: 
SeatingPreference(inside, patio)
SmokingPreference(smoking, nonsmoking)
PaymentMethod

Classes: 
RomanoRestaurant()
Reservation(int reservationNumber, Date time, int numberOfPeople, string name, string phone, seatingPreference, smokingPreference, groupname, PaymentMethod)
Table(int tableNumber, string description, int capacity)
ReservationTableAssignment()
Manager(string name, Date dateOfBirth, string driverLicenseNumber)
Maitre(string name, Date dateOfBirth, string driverLicenseNumber)
Waiter(string name, Date dateOfBirth, string driverLicenseNumber)
Bartender(string name, Date dateOfBirth, string driverLicenseNumber)
Chef(string name, Date dateOfBirth, string driverLicenseNumber)
Cook(string name, Date dateOfBirth, string driverLicenseNumber)
BusPerson(string name, Date dateOfBirth, string driverLicenseNumber)
Dishwasher(string name, Date dateOfBirth, string driverLicenseNumber)
MenuItem(int itemNumber, string description, int prepTime, ItemType itemType, float lunchPrice, float dinnerPrice, float happyHourPrice)
FoodItem(int foodItemNumber, string description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
MenuItemFoodItem(int quantity)
MenuOrder(int reservationNumber, Date time, MenuItem menuItem)

Relationships:
1 RomanoRestaurant contain * Reservation
1 RomanoRestaurant contain * Table
1 RomanoRestaurant contain * ReservationTableAssignment
1 RomanoRestaurant contain * Manager
1 RomanoRestaurant contain * Maitre
1 RomanoRestaurant contain * Waiter
1 RomanoRestaurant contain * Bartender
1 RomanoRestaurant contain * Chef
1 RomanoRestaurant contain * Cook
1 RomanoRestaurant contain * BusPerson
1 RomanoRestaurant contain * Dishwasher
1 RomanoRestaurant contain * MenuItem
1 RomanoRestaurant contain * FoodItem
1 MenuItem contain * FoodItem
1 MenuItem contain * MenuItemFoodItem
1 ReservationTableAssignment associate 1 Table
1 ReservationTableAssignment associate 1 Reservation
1 MenuOrder associate 1 MenuItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: PaymentMethod (enum) - Enum Attributes: [], Class Attributes: []
Class: RomanoRestaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,time:Date,numberOfPeople:int,name:string,phone:string,seatingPreference:,smokingPreference:,groupname:,PaymentMethod:]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:string,capacity:int]
Class: ReservationTableAssignment (class) - Enum Attributes: [], Class Attributes: []
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [itemNumber:int,description:string,prepTime:int,itemType:ItemType,lunchPrice:float,dinnerPrice:float,happyHourPrice:float]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: MenuItemFoodItem (class) - Enum Attributes: [], Class Attributes: [quantity:int]
Class: MenuOrder (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,time:Date,menuItem:MenuItem]
Relationships:
 1 RomanoRestaurant association * Reservation
 1 RomanoRestaurant association * Table
 1 RomanoRestaurant association * ReservationTableAssignment
 1 RomanoRestaurant association * Manager
 1 RomanoRestaurant association * Maitre
 1 RomanoRestaurant association * Waiter
 1 RomanoRestaurant association * Bartender
 1 RomanoRestaurant association * Chef
 1 RomanoRestaurant association * Cook
 1 RomanoRestaurant association * BusPerson
 1 RomanoRestaurant association * Dishwasher
 1 RomanoRestaurant association * MenuItem
 1 RomanoRestaurant association * FoodItem
 1 MenuItem association * FoodItem
 1 MenuItem association * MenuItemFoodItem
 1 ReservationTableAssignment association 1 Table
 1 ReservationTableAssignment association 1 Reservation
 1 MenuOrder association 1 MenuItem
--------------------------------------------------------------------------------
--6/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'Manager(class)'	-	'Employee(class)'
 'MenuItemFoodItem(class)'	-	'Ingredient(class)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):description'	-	'description'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
 'MenuItemFoodItem(class):quantity'	-	'quantity'
-Relationships:
 ' 1 MenuItem association * MenuItemFoodItem'	-	' 1 MenuItem association * Ingredient'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             19                  8                   17                  
Attributes          55                  17                  51                  
Associations        18                  1                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------7/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
- ReservationType (individual, banquet)
- SeatingPreference (inside, patio)
- SmokingPreference (smoking, nonsmoking)
- TableSize (2-person, 4-person, 6-person)
- EmployeeRole (manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
- MenuItemType (appetizer, entree, dessert, beverage)
- UnitOfMeasure (each, ounce, sheet, pound, gram, dozen)

Classes:
- RomanoRestaurant()
- Reservation(int number, Date date, Time time, int numberOfPeople, String name, String phone, ReservationType type, SeatingPreference seatingPreference, SmokingPreference smokingPreference, String groupname, String paymentMethod)
- Table(int number, String description, TableSize size)
- RestaurantManager()
- Employee(string name, Date dateOfBirth, String driverLicenseNumber, EmployeeRole role)
- Menu()
- MenuItem(int number, String description, int prepTime, MenuItemType type)
- MenuPrice(int menuItemId, double price, TimeOfDay timeOfDay)
- Order(reservationNumber, menuItemId, Time timeOrdered)
- FoodItem(int number, String description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
- FoodItemComposition(parentFoodItemId, childFoodItemId, double quantity)

Relationships:
- RomanoRestaurant contains * Reservation
- RomanoRestaurant contains * Table
- RomanoRestaurant contains * RestaurantManager
- RomanoRestaurant contains * Employee
- RomanoRestaurant contains * MenuItem
- RomanoRestaurant contains * MenuPrice
- RomanoRestaurant contains * Order
- RomanoRestaurant contains * FoodItem
- RomanoRestaurant contains * FoodItemComposition

- Reservation associates * Table
- Reservation associates * Order
- Reservation assignedTo * Employee
- Order links MenuItem
- MenuItem incorporates * FoodItem

These classes and associations capture the various entities and relationships within Romano's Italian Restaurant as described in the provided information.

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationType (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: EmployeeRole (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: RomanoRestaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:int,date:Date,time:Time,numberOfPeople:int,name:String,phone:String,type:ReservationType,seatingPreference:SeatingPreference,smokingPreference:SmokingPreference,groupname:String,paymentMethod:String]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:int,description:String,size:TableSize]
Class: RestaurantManager (class) - Enum Attributes: [], Class Attributes: []
Class: Employee (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:String,role:EmployeeRole]
Class: Menu (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:String,prepTime:int,type:MenuItemType]
Class: MenuPrice (class) - Enum Attributes: [], Class Attributes: [menuItemId:int,price:double,timeOfDay:TimeOfDay]
Class: Order (class) - Enum Attributes: [], Class Attributes: [reservationNumber:,menuItemId:,timeOrdered:Time]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:String,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: FoodItemComposition (class) - Enum Attributes: [], Class Attributes: [parentFoodItemId:,childFoodItemId:,quantity:double]
Relationships:
 1 RomanoRestaurant association * Reservation
 1 RomanoRestaurant association * Table
 1 RomanoRestaurant association * RestaurantManager
 1 RomanoRestaurant association * Employee
 1 RomanoRestaurant association * MenuItem
 1 RomanoRestaurant association * MenuPrice
 1 RomanoRestaurant association * Order
 1 RomanoRestaurant association * FoodItem
 1 RomanoRestaurant association * FoodItemComposition
 1 Reservation association * Table
 1 Reservation association * Order
 1 Reservation association * Employee
 1 Order association 1 MenuItem
 1 MenuItem association * FoodItem
 1 These association 1 information
--------------------------------------------------------------------------------
--7/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'Employee(class)'	-	'Employee(class)'
 'Menu(class)'	-	'Menu(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'EmployeeRole(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Table(class):description'	-	'description'
 'Employee(class):name'	-	'name'
 'Employee(class):dateOfBirth'	-	'dateOfBirth'
 'Employee(class):driverLicenseNumber'	-	'driverLicenseNumber'
 'Employee(class):role'	-	'role'
 'MenuItem(class):number'	-	'number'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'MenuItem(class):type'	-	'type'
 'FoodItem(class):number'	-	'number'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'EmployeeRole(enum):manager'	-	'manager'
 'EmployeeRole(enum):Maitre'	-	'Maitre'
 'EmployeeRole(enum):waiter'	-	'waiter'
 'EmployeeRole(enum):bartender'	-	'bartender'
 'EmployeeRole(enum):chef'	-	'chef'
 'EmployeeRole(enum):cook'	-	'cook'
 'EmployeeRole(enum):dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
-Relationships:
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
 ' 1 Reservation association * Employee'	-	' 1 Reservation association 1 Employee'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             18                  12                  17                  
Attributes          62                  37                  51                  
Associations        14                  2                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------8/20------Romano:
------------------------------------------------------------
AI:
Enumeration: 
ReservationType (individual, banquet)
SeatingPreference (inside, patio)
SmokingPreference (smoking, nonsmoking)
TableSize (2-person, 4-person, 6-person)
ManagementPosition (manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
MenuItemType (appetizer, entree, dessert, beverage)
UnitOfMeasure (each, ounce, sheet, pound, gram, dozen)

Classes: 
Restaurant()
Reservation(int reservationNumber, Date date, Time time, int numberOfPeople, String name, String phoneNumber, ReservationType type, SeatingPreference seatingPreference, SmokingPreference smokingPreference)
Table(int tableNumber, String description, TableSize size)
ReservationTableAssignment()
Manager(String name, Date dateOfBirth, String driverLicenseNumber)
Maitre(String name, Date dateOfBirth, String driverLicenseNumber)
Waiter(String name, Date dateOfBirth, String driverLicenseNumber)
Bartender(String name, Date dateOfBirth, String driverLicenseNumber)
Chef(String name, Date dateOfBirth, String driverLicenseNumber)
Cook(String name, Date dateOfBirth, String driverLicenseNumber)
BusPerson(String name, Date dateOfBirth, String driverLicenseNumber)
Dishwasher(String name, Date dateOfBirth, String driverLicenseNumber)
MenuItem(int itemNumber, String description, int prepTime, MenuItemType type, double priceLunch, double priceDinner, double priceHappyHour)
Menu()
Order(Reservation reservation, MenuItem menuItem, Time timeOrdered)
FoodItem(int foodItemNumber, String description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
FoodItemRelation(int parentFoodItemNumber, int childFoodItemNumber, int quantityUsed)

Relationships:
1 Restaurant contain * Reservation
1 Restaurant contain * Table
1 Restaurant contain * ReservationTableAssignment
1 Restaurant contain * Manager
1 Restaurant contain * Maitre
1 Restaurant contain * Waiter
1 Restaurant contain * Bartender
1 Restaurant contain * Chef
1 Restaurant contain * Cook
1 Restaurant contain * BusPerson
1 Restaurant contain * Dishwasher
1 Restaurant contain * MenuItem
1 Restaurant contain * Menu
1 Restaurant contain * Order
1 Restaurant contain * FoodItem
1 Restaurant contain * FoodItemRelation

* ReservationTableAssignment associate 1 Reservation
* ReservationTableAssignment associate 1 Table
* Manager, Maitre, Waiter, Bartender, Chef, Cook, BusPerson, Dishwasher, MenuItem, FoodItem linked to Restaurant
* Order associate 1 Reservation and 1 MenuItem
* FoodItemRelation associate 1 FoodItem (parent) and 1 FoodItem (child)

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationType (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: ManagementPosition (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,date:Date,time:Time,numberOfPeople:int,name:String,phoneNumber:String,type:ReservationType,seatingPreference:SeatingPreference,smokingPreference:SmokingPreference]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:String,size:TableSize]
Class: ReservationTableAssignment (class) - Enum Attributes: [], Class Attributes: []
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [itemNumber:int,description:String,prepTime:int,type:MenuItemType,priceLunch:double,priceDinner:double,priceHappyHour:double]
Class: Menu (class) - Enum Attributes: [], Class Attributes: []
Class: Order (class) - Enum Attributes: [], Class Attributes: [reservation:Reservation,menuItem:MenuItem,timeOrdered:Time]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:String,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: FoodItemRelation (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:int,childFoodItemNumber:int,quantityUsed:int]
Relationships:
 1 Restaurant association * Reservation
 1 Restaurant association * Table
 1 Restaurant association * ReservationTableAssignment
 1 Restaurant association * Manager
 1 Restaurant association * Maitre
 1 Restaurant association * Waiter
 1 Restaurant association * Bartender
 1 Restaurant association * Chef
 1 Restaurant association * Cook
 1 Restaurant association * BusPerson
 1 Restaurant association * Dishwasher
 1 Restaurant association * MenuItem
 1 Restaurant association * Menu
 1 Restaurant association * Order
 1 Restaurant association * FoodItem
 1 Restaurant association * FoodItemRelation
 * ReservationTableAssignment association 1 Reservation
 * ReservationTableAssignment association 1 Table
 * Order association 1 Reservation
 * FoodItemRelation association 1 FoodItem
--------------------------------------------------------------------------------
--8/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'Menu(class)'	-	'Menu(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'ManagementPosition(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'MenuItem(class):type'	-	'type'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'ManagementPosition(enum):manager'	-	'manager'
 'ManagementPosition(enum):Maitre'	-	'Maitre'
 'ManagementPosition(enum):waiter'	-	'waiter'
 'ManagementPosition(enum):bartender'	-	'bartender'
 'ManagementPosition(enum):chef'	-	'chef'
 'ManagementPosition(enum):cook'	-	'cook'
 'ManagementPosition(enum):dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * Manager'	-	' 1 Restaurant association * Employee'
 ' 1 Restaurant association * Menu'	-	' 1 Restaurant association 1 Menu'
 ' 1 Restaurant association * FoodItem'	-	' 1 Restaurant association * FoodItem'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             24                  13                  17                  
Attributes          80                  37                  51                  
Associations        20                  5                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------9/20------Romano:
------------------------------------------------------------
AI:
Enumerations:
- ReservationType (individual, banquet)
- SeatingPreference (inside, patio)
- SmokingPreference (smoking, non-smoking)
- TableSize (2-person, 4-person, 6-person)
- EmployeeRole (manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
- MenuItemCategory (appetizer, entree, dessert, beverage)
- TimeOfDay (lunch, dinner, happy hour)
- UnitOfMeasure (each, ounce, sheet, pound, gram, dozen)

Classes:
- RomanoRestaurant()
- Reservation(int reservationNumber, Date date, Time time, int numberOfPeople, String name, String phoneNumber, ReservationType type, SeatingPreference seatingPreference, SmokingPreference smokingPreference, Table[] tables)
- Table(int tableNumber, String description, TableSize size)
- Employee(String name, Date dateOfBirth, String driverLicense, EmployeeRole role)
- Manager(Employee[] managers)
- Maitre(Employee maitre, Employee[] waiters, Employee[] bartenders, Employee[] busPersons)
- Chef(Employee chef, Employee[] cooks, Employee[] dishwashers)
- Menu()
- MenuItem(int itemNumber, String description, int prepTime, MenuItemCategory category, Map<TimeOfDay, Double> prices)
- Order(Reservation reservation, MenuItem[] items, Time[] orderTimes)
- FoodItem(int itemNumber, String description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure, FoodItem[] ingredients, double quantityUsed)

Associations:
- RomanoRestaurant contains * Reservation
- RomanoRestaurant has * Table
- RomanoRestaurant contains * Employee
- RomanoRestaurant has * Manager
- RomanoRestaurant has 1 Maitre
- RomanoRestaurant has 1 Chef
- RomanoRestaurant has 1 Menu
- Menu contains * MenuItem
- Reservation associates * Table
- Reservation associates 1 Maitre
- Reservation has * Order
- Order associates * MenuItem
- MenuItem associates * FoodItem
- FoodItem has * FoodItem (for ingredients)
- Employee has 1 EmployeeRole

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationType (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, non-smoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: EmployeeRole (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemCategory (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: TimeOfDay (enum) - Enum Attributes: [lunch, dinner, hour], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: RomanoRestaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,date:Date,time:Time,numberOfPeople:int,name:String,phoneNumber:String,type:ReservationType,seatingPreference:SeatingPreference,smokingPreference:SmokingPreference,tables:Table[]]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:String,size:TableSize]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicense:String,role:EmployeeRole]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [managers:Employee[]]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [maitre:Employee,waiters:Employee[],bartenders:Employee[],busPersons:Employee[]]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [chef:Employee,cooks:Employee[],dishwashers:Employee[]]
Class: Menu (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [itemNumber:int,description:String,prepTime:int,category:MenuItemCategory,Map<TimeOfDay:,prices:Double>]
Class: Order (class) - Enum Attributes: [], Class Attributes: [reservation:Reservation,items:MenuItem[],orderTimes:Time[]]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [itemNumber:int,description:String,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure,ingredients:FoodItem[],quantityUsed:double]
Relationships:
 1 RomanoRestaurant association * Reservation
 1 RomanoRestaurant association * Table
 1 RomanoRestaurant association * Employee
 1 RomanoRestaurant association * Manager
 1 RomanoRestaurant association 1 Maitre
 1 RomanoRestaurant association 1 Chef
 1 RomanoRestaurant association 1 Menu
 1 Menu association * MenuItem
 1 Reservation association * Table
 1 Reservation association 1 Maitre
 1 Reservation association * Order
 1 Order association * MenuItem
 1 MenuItem association * FoodItem
 1 FoodItem association * FoodItem
 1 Employee association 1 EmployeeRole
--------------------------------------------------------------------------------
--9/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'Employee(class)'	-	'Employee(class)'
 'Menu(class)'	-	'Menu(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'EmployeeRole(enum)'	-	'Role(enum)'
 'MenuItemCategory(enum)'	-	'MenuItemType(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):non-smoking'	-	'nonsmoking'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'Employee(class):name'	-	'name'
 'Employee(class):dateOfBirth'	-	'dateOfBirth'
 'Employee(class):role'	-	'role'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'EmployeeRole(enum):manager'	-	'manager'
 'EmployeeRole(enum):Maitre'	-	'Maitre'
 'EmployeeRole(enum):waiter'	-	'waiter'
 'EmployeeRole(enum):bartender'	-	'bartender'
 'EmployeeRole(enum):chef'	-	'chef'
 'EmployeeRole(enum):cook'	-	'cook'
 'EmployeeRole(enum):dishwasher'	-	'dishwasher'
 'MenuItemCategory(enum):appetizer'	-	'appetizer'
 'MenuItemCategory(enum):entree'	-	'entree'
 'MenuItemCategory(enum):dessert'	-	'dessert'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
-Relationships:
 ' 1 Reservation association * Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             19                  12                  17                  
Attributes          70                  36                  51                  
Associations        15                  1                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------10/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
- ReservationCategory(individual, banquet)
- SeatingPreference(inside, patio)
- SmokingPreference(smoking, nonsmoking)
- TableSize(2-person, 4-person, 6-person)
- EmployeeRole(manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
- MenuItemCategory(appetizer, entree, dessert, beverage)
- UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)

Classes:
- RomanoRestaurant()
- Reservation(int number, Date time, int numberOfPeople, string name, string phoneNumber, ReservationCategory category)
- Table(int number, string description, TableSize size)
- ReservationTableAssignment()
- RestaurantManager()
- Maitre()
- Waiter()
- Bartender()
- Chef()
- Cook()
- BusPerson()
- Dishwasher()
- MenuItem(int number, string description, int prepTime, MenuItemCategory category, double priceLunch, double priceDinner, double priceHappyHour)
- Order(reservationNumber, menuItemNumber, Date orderTime)
- FoodItem(int number, string description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
- MenuItemFoodItemRelationship(parentFoodItemNumber, childFoodItemNumber, double quantity)

Associations:
- RomanoRestaurant contains * Reservation
- RomanoRestaurant contains * Table
- RomanoRestaurant contains * MenuItem
- RomanoRestaurant contains * FoodItem
- RomanoRestaurant contains * MenuItemFoodItemRelationship
- RomanoRestaurant contains * Employee

- ReservationTableAssignment associates 1 Reservation to * Table
- Employee is classified as one of the roles: RestaurantManager, Maitre, Waiter, Bartender, Chef, Cook, BusPerson, Dishwasher
- Reservation is assigned to 1 Waiter
- Reservation is associated with * MenuItem through Order
- MenuItem is comprised of * FoodItem through MenuItemFoodItemRelationship

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationCategory (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: EmployeeRole (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemCategory (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: RomanoRestaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:int,time:Date,numberOfPeople:int,name:string,phoneNumber:string,category:ReservationCategory]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,size:TableSize]
Class: ReservationTableAssignment (class) - Enum Attributes: [], Class Attributes: []
Class: RestaurantManager (class) - Enum Attributes: [], Class Attributes: []
Class: Maitre (class) - Enum Attributes: [], Class Attributes: []
Class: Waiter (class) - Enum Attributes: [], Class Attributes: []
Class: Bartender (class) - Enum Attributes: [], Class Attributes: []
Class: Chef (class) - Enum Attributes: [], Class Attributes: []
Class: Cook (class) - Enum Attributes: [], Class Attributes: []
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: []
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,prepTime:int,category:MenuItemCategory,priceLunch:double,priceDinner:double,priceHappyHour:double]
Class: Order (class) - Enum Attributes: [], Class Attributes: [reservationNumber:,menuItemNumber:,orderTime:Date]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Relationships:
 1 RomanoRestaurant association * Reservation
 1 RomanoRestaurant association * Table
 1 RomanoRestaurant association * MenuItem
 1 RomanoRestaurant association * FoodItem
 1 RomanoRestaurant association * Employee
 1 ReservationTableAssignment association 1 Reservation
 1 Employee association 1 Dishwasher
 1 Reservation association 1 Waiter
 1 Reservation association * MenuItem
--------------------------------------------------------------------------------
--10/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'EmployeeRole(enum)'	-	'Role(enum)'
 'MenuItemCategory(enum)'	-	'MenuItemType(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'RestaurantManager(class)'	-	'Employee(class)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):number'	-	'number'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):number'	-	'number'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'EmployeeRole(enum):manager'	-	'manager'
 'EmployeeRole(enum):Maitre'	-	'Maitre'
 'EmployeeRole(enum):waiter'	-	'waiter'
 'EmployeeRole(enum):bartender'	-	'bartender'
 'EmployeeRole(enum):chef'	-	'chef'
 'EmployeeRole(enum):cook'	-	'cook'
 'EmployeeRole(enum):dishwasher'	-	'dishwasher'
 'MenuItemCategory(enum):appetizer'	-	'appetizer'
 'MenuItemCategory(enum):entree'	-	'entree'
 'MenuItemCategory(enum):dessert'	-	'dessert'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
-Relationships:
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             22                  11                  17                  
Attributes          50                  32                  51                  
Associations        7                   0                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------11/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
- ReservationType (individual, banquet)
- SeatingPreference (inside, patio)
- SmokingPreference (smoking, nonsmoking)
- TableSize (2-person, 4-person, 6-person)
- JobTitle (manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
- MenuItemType (appetizer, entree, dessert, beverage)
- UnitOfMeasure (each, ounce, sheet, pound, gram, dozen)

Classes:
- Restaurant()
- Reservation(int reservationNumber, Date date, Time time, int numberOfPeople, String name, String phone, ReservationType type, SeatingPreference seatingPref, SmokingPreference smokingPref)
- Table(int tableNumber, String description, TableSize size)
- ReservationTableAssignment()
- Manager(String name, Date birthDate, String driverLicenseNumber)
- Maitre(String name, Date birthDate, String driverLicenseNumber)
- Waiter(String name, Date birthDate, String driverLicenseNumber)
- Bartender(String name, Date birthDate, String driverLicenseNumber)
- Chef(String name, Date birthDate, String driverLicenseNumber)
- Cook(String name, Date birthDate, String driverLicenseNumber)
- BusPerson(String name, Date birthDate, String driverLicenseNumber)
- Dishwasher(String name, Date birthDate, String driverLicenseNumber)
- MenuItem(int itemNumber, String description, int prepTime, MenuItemType type, double priceLunch, double priceDinner, double priceHappyHour)
- Order(Reservation reservation, List<MenuItem> itemsOrdered, Time timeOrdered)
- FoodItem(int itemNumber, String description, boolean purchased, UnitOfMeasure unit)
- MenuItemFoodItemRelationship(int parentItemNumber, int childItemNumber, int quantityUsed)

Relationships:
- * Restaurant contains * Table
- * Restaurant contains * Manager
- * Restaurant contains * Maitre
- * Restaurant contains * Waiter
- * Restaurant contains * Bartender
- * Restaurant contains * Chef
- * Restaurant contains * Cook
- * Restaurant contains * BusPerson
- * Restaurant contains * Dishwasher
- * ReservationTableAssignment associates 1 Reservation to 1 Table
- * Reservation associates 1 Waiter
- * Reservation contains * Order
- * MenuItem associates * Order
- * MenuItem contains * FoodItem
- * MenuItemFoodItemRelationship associates 1 FoodItem as a child to 1 MenuItem as a parent

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationType (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: JobTitle (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,date:Date,time:Time,numberOfPeople:int,name:String,phone:String,type:ReservationType,seatingPref:SeatingPreference,smokingPref:SmokingPreference]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:String,size:TableSize]
Class: ReservationTableAssignment (class) - Enum Attributes: [], Class Attributes: []
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:String,birthDate:Date,driverLicenseNumber:String]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:String,birthDate:Date,driverLicenseNumber:String]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:String,birthDate:Date,driverLicenseNumber:String]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:String,birthDate:Date,driverLicenseNumber:String]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:String,birthDate:Date,driverLicenseNumber:String]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:String,birthDate:Date,driverLicenseNumber:String]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:String,birthDate:Date,driverLicenseNumber:String]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:String,birthDate:Date,driverLicenseNumber:String]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [itemNumber:int,description:String,prepTime:int,type:MenuItemType,priceLunch:double,priceDinner:double,priceHappyHour:double]
Class: Order (class) - Enum Attributes: [], Class Attributes: [reservation:Reservation,itemsOrdered:List<MenuItem>,timeOrdered:Time]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [itemNumber:int,description:String,purchased:boolean,unit:UnitOfMeasure]
Relationships:
 * Restaurant association * Table
 * Restaurant association * Manager
 * Restaurant association * Maitre
 * Restaurant association * Waiter
 * Restaurant association * Bartender
 * Restaurant association * Chef
 * Restaurant association * Cook
 * Restaurant association * BusPerson
 * Restaurant association * Dishwasher
 * ReservationTableAssignment association 1 Reservation
 * Reservation association 1 Waiter
 * Reservation association * Order
 * MenuItem association * Order
 * MenuItem association * FoodItem
--------------------------------------------------------------------------------
--11/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'JobTitle(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'MenuItem(class):type'	-	'type'
 'FoodItem(class):description'	-	'description'
 'FoodItem(class):purchased'	-	'purchase'
 'FoodItem(class):unit'	-	'unit'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'JobTitle(enum):manager'	-	'manager'
 'JobTitle(enum):Maitre'	-	'Maitre'
 'JobTitle(enum):waiter'	-	'waiter'
 'JobTitle(enum):bartender'	-	'bartender'
 'JobTitle(enum):chef'	-	'chef'
 'JobTitle(enum):cook'	-	'cook'
 'JobTitle(enum):dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' * Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' * Restaurant association * Manager'	-	' 1 Restaurant association * Employee'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             22                  12                  17                  
Attributes          77                  37                  51                  
Associations        14                  2                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------12/20------Romano:
------------------------------------------------------------
AI:
Enumeration: 
ReservationType(individual, banquet)
SeatingPreference(inside, patio)
SmokingPreference(smoking, nonsmoking)
TableSize(2-person, 4-person, 6-person)
EmployeeType(manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
MenuItemType(appetizer, entree, dessert, beverage)
UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)

Classes: 
RomanoRestaurant()
Reservation(int reservationNumber, Date date, Time time, int numberOfPeople, String name, String phoneNumber, ReservationType type, SeatingPreference seatingPreference, SmokingPreference smokingPreference, List<Table> tables)
Table(int tableNumber, String description, TableSize size)
Manager(String name, Date dateOfBirth, String driverLicenseNumber)
Maitre(String name, Date dateOfBirth, String driverLicenseNumber)
Waiter(String name, Date dateOfBirth, String driverLicenseNumber)
Bartender(String name, Date dateOfBirth, String driverLicenseNumber)
Chef(String name, Date dateOfBirth, String driverLicenseNumber)
Cook(String name, Date dateOfBirth, String driverLicenseNumber)
BusPerson(String name, Date dateOfBirth, String driverLicenseNumber)
Dishwasher(String name, Date dateOfBirth, String driverLicenseNumber)
MenuItem(int menuItemNumber, String description, int prepTime, MenuItemType type, double priceLunch, double priceDinner, double priceHappyHour)
FoodItem(int foodItemNumber, String description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
MenuFoodItem(MenuItem menuItem, FoodItem foodItem, double quantity)
Ingredient(FoodItem parentFoodItem, FoodItem childFoodItem, double quantity)

Associations: 
1 RomanoRestaurant has * Reservation
1 RomanoRestaurant has * Table
1 RomanoRestaurant has * Manager
1 RomanoRestaurant has * Maitre
1 RomanoRestaurant has * Waiter
1 RomanoRestaurant has * Bartender
1 RomanoRestaurant has * Chef
1 RomanoRestaurant has * Cook
1 RomanoRestaurant has * BusPerson
1 RomanoRestaurant has * Dishwasher

* Reservation associates * Table
* Reservation associates 1 Waiter
* Waiter associates * Reservation
* Reservation associates * MenuItem
* MenuItem associates * Reservation
* MenuItem associates * FoodItem
* FoodItem associates * MenuItem
* FoodItem associates * FoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationType (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: EmployeeType (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: RomanoRestaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,date:Date,time:Time,numberOfPeople:int,name:String,phoneNumber:String,type:ReservationType,seatingPreference:SeatingPreference,smokingPreference:SmokingPreference,tables:List<Table>]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:String,size:TableSize]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:String,prepTime:int,type:MenuItemType,priceLunch:double,priceDinner:double,priceHappyHour:double]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:String,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: MenuFoodItem (class) - Enum Attributes: [], Class Attributes: [menuItem:MenuItem,foodItem:FoodItem,quantity:double]
Class: Ingredient (class) - Enum Attributes: [], Class Attributes: [parentFoodItem:FoodItem,childFoodItem:FoodItem,quantity:double]
Relationships:
 1 RomanoRestaurant association * Reservation
 1 RomanoRestaurant association * Table
 1 RomanoRestaurant association * Manager
 1 RomanoRestaurant association * Maitre
 1 RomanoRestaurant association * Waiter
 1 RomanoRestaurant association * Bartender
 1 RomanoRestaurant association * Chef
 1 RomanoRestaurant association * Cook
 1 RomanoRestaurant association * BusPerson
 1 RomanoRestaurant association * Dishwasher
 * Reservation association * Table
 * Reservation association 1 Waiter
 * Waiter association * Reservation
 * Reservation association * MenuItem
 * MenuItem association * Reservation
 * MenuItem association * FoodItem
 * FoodItem association * MenuItem
 * FoodItem association * FoodItem
--------------------------------------------------------------------------------
--12/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'Ingredient(class)'	-	'Ingredient(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'EmployeeType(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'MenuItem(class):type'	-	'type'
 'FoodItem(class):description'	-	'description'
 'Ingredient(class):quantity'	-	'quantity'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'EmployeeType(enum):manager'	-	'manager'
 'EmployeeType(enum):Maitre'	-	'Maitre'
 'EmployeeType(enum):waiter'	-	'waiter'
 'EmployeeType(enum):bartender'	-	'bartender'
 'EmployeeType(enum):chef'	-	'chef'
 'EmployeeType(enum):cook'	-	'cook'
 'EmployeeType(enum):dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' * Reservation association * Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             22                  12                  17                  
Attributes          81                  38                  51                  
Associations        18                  1                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------13/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
- ReservationCategory (individual, banquet)
- SeatingPreference (inside, patio)
- SmokingPreference (smoking, nonsmoking)
- TableSize (2-person, 4-person, 6-person)
- PersonRole (manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
- MenuItemType (appetizer, entree, dessert, beverage)
- UnitOfMeasure (each, ounce, sheet, pound, gram, dozen)

Classes:
- RomanoRestaurant()
- Reservation(int reservationNumber, Date date, Time time, int numberOfPeople, String name, String phoneNumber, ReservationCategory category, SeatingPreference seatingPreference, SmokingPreference smokingPreference)
- Table(int tableNumber, String description, TableSize size)
- Manager(String name, Date dateOfBirth, String driverLicenseNumber)
- Maitre(String name, Date dateOfBirth, String driverLicenseNumber)
- Waiter(String name, Date dateOfBirth, String driverLicenseNumber)
- Bartender(String name, Date dateOfBirth, String driverLicenseNumber)
- Chef(String name, Date dateOfBirth, String driverLicenseNumber)
- Cook(String name, Date dateOfBirth, String driverLicenseNumber)
- BusPerson(String name, Date dateOfBirth, String driverLicenseNumber)
- Dishwasher(String name, Date dateOfBirth, String driverLicenseNumber)
- MenuItem(int menuItemNumber, String description, int prepTime, MenuItemType type, double lunchPrice, double dinnerPrice, double happyHourPrice)
- FoodItem(int foodItemNumber, String description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
- MenuOrder(int reservationNumber, int menuItemNumber, Time timeOrdered, int quantity)
- FoodItemRelationship(int parentFoodItemNumber, int childFoodItemNumber, int quantityUsed)

Relationships:
- RomanoRestaurant has * Reservation
- RomanoRestaurant has * Table
- RomanoRestaurant has * Manager
- RomanoRestaurant has * Maitre
- RomanoRestaurant has * Waiter
- RomanoRestaurant has * Bartender
- RomanoRestaurant has * Chef
- RomanoRestaurant has * Cook
- RomanoRestaurant has * BusPerson
- RomanoRestaurant has * Dishwasher
- RomanoRestaurant has * MenuItem
- RomanoRestaurant has * FoodItem
- Reservation is associated with 1 Table
- Reservation is associated with 1 Waiter
- MenuItem is associated with * MenuOrder
- FoodItem is associated with * FoodItemRelationship

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationCategory (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: PersonRole (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: RomanoRestaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,date:Date,time:Time,numberOfPeople:int,name:String,phoneNumber:String,category:ReservationCategory,seatingPreference:SeatingPreference,smokingPreference:SmokingPreference]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:String,size:TableSize]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:String,prepTime:int,type:MenuItemType,lunchPrice:double,dinnerPrice:double,happyHourPrice:double]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:String,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: MenuOrder (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,menuItemNumber:int,timeOrdered:Time,quantity:int]
Relationships:
 1 RomanoRestaurant association * Reservation
 1 RomanoRestaurant association * Table
 1 RomanoRestaurant association * Manager
 1 RomanoRestaurant association * Maitre
 1 RomanoRestaurant association * Waiter
 1 RomanoRestaurant association * Bartender
 1 RomanoRestaurant association * Chef
 1 RomanoRestaurant association * Cook
 1 RomanoRestaurant association * BusPerson
 1 RomanoRestaurant association * Dishwasher
 1 RomanoRestaurant association * MenuItem
 1 RomanoRestaurant association * FoodItem
 1 Reservation association 1 Table
 1 Reservation association 1 Waiter
 1 MenuItem association * MenuOrder
--------------------------------------------------------------------------------
--13/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'PersonRole(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'MenuItem(class):type'	-	'type'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'PersonRole(enum):manager'	-	'manager'
 'PersonRole(enum):Maitre'	-	'Maitre'
 'PersonRole(enum):waiter'	-	'waiter'
 'PersonRole(enum):bartender'	-	'bartender'
 'PersonRole(enum):chef'	-	'chef'
 'PersonRole(enum):cook'	-	'cook'
 'PersonRole(enum):dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Reservation association 1 Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             21                  11                  17                  
Attributes          78                  37                  51                  
Associations        15                  1                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------14/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
- ReservationCategory (individual, banquet)
- SeatingPreference (inside, patio)
- SmokingPreference (smoking, nonsmoking)
- TableSize (2-person, 4-person, 6-person)
- EmployeeRole (manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
- MenuItemType (appetizer, entree, dessert, beverage)
- UnitOfMeasure (each, ounce, sheet, pound, gram, dozen)

Classes:
- RomanoRestaurant
- Reservation (number, time, date, number of people, name, phone number, category)
- SeatingArea (table number, description, size)
- TableAssignment (reservation number, table number)
- Employee (name, date of birth, driver's license number, role)
- ManagementStructure (Romano, managers, Maitre, chefs)
- Menu (item number, description, prep time, type, price)
- MenuOrder (reservation number, menu item number, time ordered)
- FoodItem (item number, description, purchase flag, unit of measure)
- FoodItemRelationship (parent item number, child item number, quantity)

Relationships:
- RomanoRestaurant contains * Reservation
- RomanoRestaurant contains * SeatingArea
- RomanoRestaurant contains * Employee
- RomanoRestaurant contains * ManagementStructure
- RomanoRestaurant contains * Menu
- RomanoRestaurant contains * FoodItem
- Reservation associates * TableAssignment
- Reservation associates * MenuOrder
- TableAssignment associates 1 SeatingArea
- Employee associates 1 ManagementStructure
- MenuOrder associates 1 Menu
- MenuOrder associates 1 FoodItem
- FoodItemRelationship associates 1 FoodItem as parent
- FoodItemRelationship associates 1 FoodItem as child

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationCategory (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: EmployeeRole (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: RomanoRestaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:,time:,date:,of:number,name:,number:phone,category:]
Class: SeatingArea (class) - Enum Attributes: [], Class Attributes: [number:table,description:,size:]
Class: TableAssignment (class) - Enum Attributes: [], Class Attributes: [number:reservation,number:table]
Class: Employee (class) - Enum Attributes: [], Class Attributes: [name:,of:date,license:driver's,role:]
Class: ManagementStructure (class) - Enum Attributes: [], Class Attributes: [Romano:,managers:,Maitre:,chefs:]
Class: Menu (class) - Enum Attributes: [], Class Attributes: [number:item,description:,time:prep,type:,price:]
Class: MenuOrder (class) - Enum Attributes: [], Class Attributes: [number:reservation,item:menu,ordered:time]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:item,description:,flag:purchase,of:unit]
Relationships:
 1 RomanoRestaurant association * Reservation
 1 RomanoRestaurant association * SeatingArea
 1 RomanoRestaurant association * Employee
 1 RomanoRestaurant association * ManagementStructure
 1 RomanoRestaurant association * Menu
 1 RomanoRestaurant association * FoodItem
 1 Reservation association * TableAssignment
 1 Reservation association * MenuOrder
 1 TableAssignment association 1 SeatingArea
 1 Employee association 1 ManagementStructure
 1 MenuOrder association 1 Menu
 1 MenuOrder association 1 FoodItem
--------------------------------------------------------------------------------
--14/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'Employee(class)'	-	'Employee(class)'
 'Menu(class)'	-	'Menu(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'EmployeeRole(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):time'	-	'time'
 'Reservation(class):date'	-	'date'
 'Reservation(class):name'	-	'name'
 'Employee(class):name'	-	'name'
 'Employee(class):role'	-	'role'
 'FoodItem(class):number'	-	'number'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'EmployeeRole(enum):manager'	-	'manager'
 'EmployeeRole(enum):Maitre'	-	'Maitre'
 'EmployeeRole(enum):waiter'	-	'waiter'
 'EmployeeRole(enum):bartender'	-	'bartender'
 'EmployeeRole(enum):chef'	-	'chef'
 'EmployeeRole(enum):cook'	-	'cook'
 'EmployeeRole(enum):dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
-Relationships:
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             16                  10                  17                  
Attributes          59                  29                  51                  
Associations        12                  0                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------15/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
- TableSize (2-person, 4-person, 6-person)
- EmployeeType (Manager, Maitre, Waiter, Bartender, Chef, Cook, Bus Person, Dishwasher)
- MenuItemType (Appetizer, Entree, Dessert, Beverage)
- UnitOfMeasure (Each, Ounce, Sheet, Pound, Gram, Dozen)

Classes:
- Restaurant()
- Reservation(int number, Date date, Time time, int numberOfPeople, string name, string phoneNumber, string reservationType, string seatingPreference, string smokingPreference, string groupname, string paymentMethod)
- Table(int number, string description, TableSize size)
- Manager(string name, Date dateOfBirth, string driverLicenseNumber)
- Maitre(string name, Date dateOfBirth, string driverLicenseNumber)
- Waiter(string name, Date dateOfBirth, string driverLicenseNumber)
- Bartender(string name, Date dateOfBirth, string driverLicenseNumber)
- Chef(string name, Date dateOfBirth, string driverLicenseNumber)
- Cook(string name, Date dateOfBirth, string driverLicenseNumber)
- BusPerson(string name, Date dateOfBirth, string driverLicenseNumber)
- Dishwasher(string name, Date dateOfBirth, string driverLicenseNumber)
- Menu()
- MenuItem(int number, string description, int prepTime, MenuItemType type, double priceLunch, double priceDinner, double priceHappyHour)
- FoodItem(int number, string description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
- MenuFoodItem(int quantity, MenuItem menuItem, FoodItem foodItem)

Relationships:
- Restaurant contains * Reservation
- Restaurant contains * Table
- Restaurant contains * Manager
- Restaurant contains * Maitre
- Restaurant contains * Waiter
- Restaurant contains * Bartender
- Restaurant contains * Chef
- Restaurant contains * Cook
- Restaurant contains * BusPerson
- Restaurant contains * Dishwasher
- Restaurant contains * Menu
- Menu contains * MenuItem
- Menu contains * FoodItem
- MenuItem contains * MenuFoodItem
- FoodItem contains * MenuFoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: EmployeeType (enum) - Enum Attributes: [Manager, Maitre, Waiter, Bartender, Chef, Cook, Person, Dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [Appetizer, Entree, Dessert, Beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [Each, Ounce, Sheet, Pound, Gram, Dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:int,date:Date,time:Time,numberOfPeople:int,name:string,phoneNumber:string,reservationType:string,seatingPreference:string,smokingPreference:string,groupname:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,size:TableSize]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Menu (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,prepTime:int,type:MenuItemType,priceLunch:double,priceDinner:double,priceHappyHour:double]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: MenuFoodItem (class) - Enum Attributes: [], Class Attributes: [quantity:int,menuItem:MenuItem,foodItem:FoodItem]
Relationships:
 1 Restaurant association * Reservation
 1 Restaurant association * Table
 1 Restaurant association * Manager
 1 Restaurant association * Maitre
 1 Restaurant association * Waiter
 1 Restaurant association * Bartender
 1 Restaurant association * Chef
 1 Restaurant association * Cook
 1 Restaurant association * BusPerson
 1 Restaurant association * Dishwasher
 1 Restaurant association * Menu
 1 Menu association * MenuItem
 1 Menu association * FoodItem
 1 MenuItem association * MenuFoodItem
 1 FoodItem association * MenuFoodItem
--------------------------------------------------------------------------------
--15/20--Classes and attributes matching process:
-Classes:
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'Menu(class)'	-	'Menu(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'EmployeeType(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
 'MenuFoodItem(class)'	-	'Ingredient(class)'
-Attributes:
 'MenuItemType(enum):Appetizer'	-	'appetizer'
 'MenuItemType(enum):Entree'	-	'entree'
 'MenuItemType(enum):Dessert'	-	'dessert'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):number'	-	'number'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'MenuItem(class):type'	-	'type'
 'FoodItem(class):number'	-	'number'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'EmployeeType(enum):Manager'	-	'manager'
 'EmployeeType(enum):Maitre'	-	'Maitre'
 'EmployeeType(enum):Waiter'	-	'waiter'
 'EmployeeType(enum):Bartender'	-	'bartender'
 'EmployeeType(enum):Chef'	-	'chef'
 'EmployeeType(enum):Cook'	-	'cook'
 'EmployeeType(enum):Dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):Ounce'	-	'ounce'
 'UnitOfMeasure(enum):Sheet'	-	'sheet'
 'UnitOfMeasure(enum):Pound'	-	'pound'
 'UnitOfMeasure(enum):Gram'	-	'gram'
 'UnitOfMeasure(enum):Dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
 'MenuFoodItem(class):quantity'	-	'quantity'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * Manager'	-	' 1 Restaurant association * Employee'
 ' 1 Restaurant association * Menu'	-	' 1 Restaurant association 1 Menu'
 ' 1 MenuItem association * MenuFoodItem'	-	' 1 MenuItem association * Ingredient'
 ' 1 FoodItem association * MenuFoodItem'	-	' 1 FoodItem association * Ingredient'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             19                  12                  17                  
Attributes          73                  34                  51                  
Associations        15                  6                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------16/20------Romano:
------------------------------------------------------------
AI:
Enumeration: 
TableSize(2-person, 4-person, 6-person)
JobTitle(manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
ItemType(appetizer, entree, dessert, beverage)
UnitMeasure(each, ounce, sheet, pound, gram, dozen)

Classes: 
Restaurant()
Reservation(int number, Date date, Time time, int numberOfPeople, string name, string phoneNumber)
IndividualReservation(String seatingPreference, string smokingPreference)
BanquetReservation(string groupName, string paymentMethod)
Table(int number, string description, TableSize size)
Manager(string name, Date dateOfBirth, string driverLicense)
Maitre(string name, Date dateOfBirth, string driverLicense)
Waiter(string name, Date dateOfBirth, string driverLicense)
Bartender(string name, Date dateOfBirth, string driverLicense)
Chef(string name, Date dateOfBirth, string driverLicense)
Cook(string name, Date dateOfBirth, string driverLicense)
BusPerson(string name, Date dateOfBirth, string driverLicense)
Dishwasher(string name, Date dateOfBirth, string driverLicense)
MenuItem(int number, string description, int prepTime, double priceLunch, double priceDinner, double priceHappyHour)
FoodItem(int number, string description, boolean purchaseFlag, UnitMeasure unitMeasure)
MenuFoodItem(int parentFoodItemNumber, int childFoodItemNumber, double quantity)

  Relationships:
1 Restaurant contain * Reservation
1 Restaurant contain * Table
1 Restaurant contain * Manager
1 Restaurant contain * Maitre
1 Restaurant contain * Waiter
1 Restaurant contain * Bartender
1 Restaurant contain * Chef
1 Restaurant contain * Cook
1 Restaurant contain * BusPerson
1 Restaurant contain * Dishwasher
1 Restaurant contain * MenuItem
1 Restaurant contain * FoodItem
1 Restaurant contain * MenuFoodItem

* Reservation associate 1 Table
* Reservation associate 1 Waiter
* MenuItem associate * Reservation
* MenuItem associate * FoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: JobTitle (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: ItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:int,date:Date,time:Time,numberOfPeople:int,name:string,phoneNumber:string]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:String,smokingPreference:string]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,size:TableSize]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicense:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicense:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicense:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicense:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicense:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicense:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicense:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicense:string]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,prepTime:int,priceLunch:double,priceDinner:double,priceHappyHour:double]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,purchaseFlag:boolean,unitMeasure:UnitMeasure]
Class: MenuFoodItem (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:int,childFoodItemNumber:int,quantity:double]
Relationships:
 1 Restaurant association * Reservation
 1 Restaurant association * Table
 1 Restaurant association * Manager
 1 Restaurant association * Maitre
 1 Restaurant association * Waiter
 1 Restaurant association * Bartender
 1 Restaurant association * Chef
 1 Restaurant association * Cook
 1 Restaurant association * BusPerson
 1 Restaurant association * Dishwasher
 1 Restaurant association * MenuItem
 1 Restaurant association * FoodItem
 1 Restaurant association * MenuFoodItem
 * Reservation association 1 Table
 * Reservation association 1 Waiter
 * MenuItem association * Reservation
 * MenuItem association * FoodItem
--------------------------------------------------------------------------------
--16/20--Classes and attributes matching process:
-Classes:
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'JobTitle(enum)'	-	'Role(enum)'
 'ItemType(enum)'	-	'MenuItemType(enum)'
 'UnitMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
 'MenuFoodItem(class)'	-	'Ingredient(class)'
-Attributes:
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):description'	-	'description'
 'MenuItem(class):number'	-	'number'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):number'	-	'number'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'JobTitle(enum):manager'	-	'manager'
 'JobTitle(enum):Maitre'	-	'Maitre'
 'JobTitle(enum):waiter'	-	'waiter'
 'JobTitle(enum):bartender'	-	'bartender'
 'JobTitle(enum):chef'	-	'chef'
 'JobTitle(enum):cook'	-	'cook'
 'JobTitle(enum):dishwasher'	-	'dishwasher'
 'ItemType(enum):appetizer'	-	'appetizer'
 'ItemType(enum):entree'	-	'entree'
 'ItemType(enum):dessert'	-	'dessert'
 'UnitMeasure(enum):ounce'	-	'ounce'
 'UnitMeasure(enum):sheet'	-	'sheet'
 'UnitMeasure(enum):pound'	-	'pound'
 'UnitMeasure(enum):gram'	-	'gram'
 'UnitMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'MenuFoodItem(class):quantity'	-	'quantity'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * Manager'	-	' 1 Restaurant association * Employee'
 ' 1 Restaurant association * FoodItem'	-	' 1 Restaurant association * FoodItem'
 ' * Reservation association 1 Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             20                  13                  17                  
Attributes          71                  36                  51                  
Associations        17                  5                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------17/20------Romano:
------------------------------------------------------------
AI:
Enumeration: 
ReservationCategory(individual, banquet)
TableSize(2-person, 4-person, 6-person)
EmployeeRole(manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
MenuItemCategory(appetizer, entree, dessert, beverage)
UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)

Classes: 
Restaurant()
Reservation(int reservationNumber, Date date, Time time, int numberOfPeople, string name, string phoneNumber, ReservationCategory category)
Table(int tableNumber, string description, TableSize size)
Manager(string name, Date dateOfBirth, string driverLicenseNumber)
Maitre(string name, Date dateOfBirth, string driverLicenseNumber)
Waiter(string name, Date dateOfBirth, string driverLicenseNumber)
Bartender(string name, Date dateOfBirth, string driverLicenseNumber)
Chef(string name, Date dateOfBirth, string driverLicenseNumber)
Cook(string name, Date dateOfBirth, string driverLicenseNumber)
BusPerson(string name, Date dateOfBirth, string driverLicenseNumber)
Dishwasher(string name, Date dateOfBirth, string driverLicenseNumber)
MenuItem(int menuItemNumber, string description, int prepTime, MenuItemCategory category)
MenuPrice(int menuItemNumber, Time timeOfDay, float price)
Order(int reservationNumber, int menuItemNumber, Time timeOrdered)
FoodItem(int foodItemNumber, string description, boolean purchaseFlag, UnitOfMeasure unitOfMeasure)
FoodItemRelationship(int parentFoodItemNumber, int childFoodItemNumber, int quantity)

Relationships: 
1 Restaurant has * Reservation
1 Restaurant has * Table
1 Restaurant has * Manager
1 Restaurant has * Maitre
1 Restaurant has * Waiter
1 Restaurant has * Bartender
1 Restaurant has * Chef
1 Restaurant has * Cook
1 Restaurant has * BusPerson
1 Restaurant has * Dishwasher
1 Restaurant has * MenuItem
1 Restaurant has * MenuPrice
1 Restaurant has * Order
1 Restaurant has * FoodItem
1 Restaurant has * FoodItemRelationship

* Reservation associates 1 Table
* Reservation associates 1 EmployeeRole
* Order associates 1 MenuItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationCategory (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: EmployeeRole (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemCategory (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,date:Date,time:Time,numberOfPeople:int,name:string,phoneNumber:string,category:ReservationCategory]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:int,description:string,size:TableSize]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string]
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:string,prepTime:int,category:MenuItemCategory]
Class: MenuPrice (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,timeOfDay:Time,price:float]
Class: Order (class) - Enum Attributes: [], Class Attributes: [reservationNumber:int,menuItemNumber:int,timeOrdered:Time]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:int,description:string,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Relationships:
 1 Restaurant association * Reservation
 1 Restaurant association * Table
 1 Restaurant association * Manager
 1 Restaurant association * Maitre
 1 Restaurant association * Waiter
 1 Restaurant association * Bartender
 1 Restaurant association * Chef
 1 Restaurant association * Cook
 1 Restaurant association * BusPerson
 1 Restaurant association * Dishwasher
 1 Restaurant association * MenuItem
 1 Restaurant association * MenuPrice
 1 Restaurant association * Order
 1 Restaurant association * FoodItem
 * Reservation association 1 Table
 * Reservation association 1 EmployeeRole
 * Order association 1 MenuItem
--------------------------------------------------------------------------------
--17/20--Classes and attributes matching process:
-Classes:
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'EmployeeRole(enum)'	-	'Role(enum)'
 'MenuItemCategory(enum)'	-	'MenuItemType(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
-Attributes:
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'EmployeeRole(enum):manager'	-	'manager'
 'EmployeeRole(enum):Maitre'	-	'Maitre'
 'EmployeeRole(enum):waiter'	-	'waiter'
 'EmployeeRole(enum):bartender'	-	'bartender'
 'EmployeeRole(enum):chef'	-	'chef'
 'EmployeeRole(enum):cook'	-	'cook'
 'EmployeeRole(enum):dishwasher'	-	'dishwasher'
 'MenuItemCategory(enum):appetizer'	-	'appetizer'
 'MenuItemCategory(enum):entree'	-	'entree'
 'MenuItemCategory(enum):dessert'	-	'dessert'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * Manager'	-	' 1 Restaurant association * Employee'
 ' 1 Restaurant association * FoodItem'	-	' 1 Restaurant association * FoodItem'
 ' * Reservation association 1 Table'	-	' 1 Reservation association 0..* Table'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             20                  10                  17                  
Attributes          71                  32                  51                  
Associations        17                  5                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------18/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
- ReservationCategory(individual, banquet)
- SeatingPreference(inside, patio)
- SmokingPreference(smoking, nonsmoking)
- TableSize(2-person, 4-person, 6-person)
- EmployeeRole(manager, Maitre, waiter, bartender, chef, cook, bus person, dishwasher)
- MenuItemType(appetizer, entree, dessert, beverage)
- UnitOfMeasure(each, ounce, sheet, pound, gram, dozen)

Classes:
- Romano
- Reservation(time: Time, date: Date, numberOfPeople: int, name: String, phoneNumber: String, reservationNumber: int, category: ReservationCategory, seatingPreference: SeatingPreference, smokingPreference: SmokingPreference, tableNumber: int[])
- Table(number: int, description: String, size: TableSize)
- RestaurantManager
- Maitre
- Waiter
- Bartender
- Chef
- Cook
- BusPerson
- Dishwasher
- Person(name: String, dateOfBirth: Date, driverLicenseNumber: String, role: EmployeeRole)
- Menu(menuItemNumber: int, description: String, prepTime: Time, type: MenuItemType, priceLunch: double, priceDinner: double, priceHappyHour: double)
- FoodItem(itemNumber: int, description: String, purchaseFlag: boolean, unitOfMeasure: UnitOfMeasure)
- MenuItemFoodItem(parentItemNumber: int, childItemNumber: int, quantityUsed: double)

Associations:
- Romano has * Reservation
- Romano has * Table
- Romano has * RestaurantManager
- RestaurantManager has * Maitre
- Maitre has * Waiter
- Maitre has * Bartender
- Chef has * Cook
- Chef has * Dishwasher
- Person is * Role
- Reservation is associated with 1 Waiter
- Reservation is associated with * MenuItem
- Menu is associated with * FoodItem
- FoodItem can be comprised of * FoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationCategory (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: EmployeeRole (enum) - Enum Attributes: [manager, Maitre, waiter, bartender, chef, cook, person, dishwasher], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Romano (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [time:Time,date:Date,numberOfPeople:int,name:String,phoneNumber:String,reservationNumber:int,category:ReservationCategory,seatingPreference:SeatingPreference,smokingPreference:SmokingPreference,tableNumber:int[]]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:int,description:String,size:TableSize]
Class: RestaurantManager (class) - Enum Attributes: [], Class Attributes: []
Class: Maitre (class) - Enum Attributes: [], Class Attributes: []
Class: Waiter (class) - Enum Attributes: [], Class Attributes: []
Class: Bartender (class) - Enum Attributes: [], Class Attributes: []
Class: Chef (class) - Enum Attributes: [], Class Attributes: []
Class: Cook (class) - Enum Attributes: [], Class Attributes: []
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: []
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: []
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:String,dateOfBirth:Date,driverLicenseNumber:String,role:EmployeeRole]
Class: Menu (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:int,description:String,prepTime:Time,type:MenuItemType,priceLunch:double,priceDinner:double,priceHappyHour:double]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [itemNumber:int,description:String,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: MenuItemFoodItem (class) - Enum Attributes: [], Class Attributes: [parentItemNumber:int,childItemNumber:int,quantityUsed:double]
Relationships:
 1 Romano association * Reservation
 1 Romano association * Table
 1 Romano association * RestaurantManager
 1 RestaurantManager association * Maitre
 1 Maitre association * Waiter
 1 Maitre association * Bartender
 1 Chef association * Cook
 1 Chef association * Dishwasher
 1 Person association * Role
 1 Reservation association 1 Waiter
 1 Reservation association * MenuItem
 1 Menu association * FoodItem
 1 FoodItem association * FoodItem
--------------------------------------------------------------------------------
--18/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'Menu(class)'	-	'Menu(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'EmployeeRole(enum)'	-	'Role(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Person(class)'	-	'Employee(class)'
 'MenuItemFoodItem(class)'	-	'Ingredient(class)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):time'	-	'time'
 'Reservation(class):date'	-	'date'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Table(class):description'	-	'description'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'EmployeeRole(enum):manager'	-	'manager'
 'EmployeeRole(enum):Maitre'	-	'Maitre'
 'EmployeeRole(enum):waiter'	-	'waiter'
 'EmployeeRole(enum):bartender'	-	'bartender'
 'EmployeeRole(enum):chef'	-	'chef'
 'EmployeeRole(enum):cook'	-	'cook'
 'EmployeeRole(enum):dishwasher'	-	'dishwasher'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Person(class):name'	-	'name'
 'Person(class):dateOfBirth'	-	'dateOfBirth'
 'Person(class):driverLicenseNumber'	-	'driverLicenseNumber'
 'Person(class):role'	-	'role'
-Relationships:
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             22                  12                  17                  
Attributes          58                  34                  51                  
Associations        11                  0                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------19/20------Romano:
------------------------------------------------------------
AI:
Enumeration: 
ReservationType(individual, banquet)
SeatingPreference(inside, patio)
SmokingPreference(smoking, nonsmoking)
TableSize(2-person, 4-person, 6-person)
MenuItemType(appetizer, entree, dessert, beverage)
UnitMeasure(each, ounce, sheet, pound, gram, dozen)

Classes:
RomanoRestaurant()
Reservation(string reservationNumber, Date date, Time time, int numberOfPeople, string name, string phoneNumber, ReservationType type, SeatingPreference seatingPreference, SmokingPreference smokingPreference, string groupname, string paymentMethod)
Table(string tableNumber, string description, TableSize size)
RestaurantManager(string name, string position)
Maitre(string name)
Chef(string name)
Person(string name, Date dateOfBirth, string driverLicenseNumber, Manager, Maitre, Waiter, Bartender, Chef, Cook, BusPerson, Dishwasher)
Menu(string menuItemNumber, string description, int prepTime, MenuItemType type, double priceLunch, double priceDinner, double priceHappyHour)
MenuOrder(string reservationNumber, string menuItemNumber, Time orderTime)
FoodItem(string foodItemNumber, string description, boolean purchaseFlag, UnitMeasure unitMeasure)
Ingredient(string parentFoodItemNumber, string childFoodItemNumber, double quantity)

Relationships:
1 RomanoRestaurant contains * Reservation
1 RomanoRestaurant contains * Table
1 RomanoRestaurant contains * RestaurantManager
1 RestaurantManager manages * Maitre
1 RestaurantManager manages * Chef
1 Person has * Manager
1 Person has * Maitre
1 Person has * Waiter
1 Person has * Bartender
1 Person has * Chef
1 Person has * Cook
1 Person has * BusPerson
1 Person has * Dishwasher
1 Reservation is assigned 1 Waiter
1 Menu includes * MenuOrder
1 RomanoRestaurant contains * Menu
1 RomanoRestaurant contains * FoodItem
1 FoodItem includes * Ingredient

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: ReservationType (enum) - Enum Attributes: [individual, banquet], Class Attributes: []
Class: SeatingPreference (enum) - Enum Attributes: [inside, patio], Class Attributes: []
Class: SmokingPreference (enum) - Enum Attributes: [smoking, nonsmoking], Class Attributes: []
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: RomanoRestaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [reservationNumber:string,date:Date,time:Time,numberOfPeople:int,name:string,phoneNumber:string,type:ReservationType,seatingPreference:SeatingPreference,smokingPreference:SmokingPreference,groupname:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [tableNumber:string,description:string,size:TableSize]
Class: RestaurantManager (class) - Enum Attributes: [], Class Attributes: [name:string,position:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string]
Class: Person (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:Date,driverLicenseNumber:string,Manager:,Maitre:,Waiter:,Bartender:,Chef:,Cook:,BusPerson:,Dishwasher:]
Class: Menu (class) - Enum Attributes: [], Class Attributes: [menuItemNumber:string,description:string,prepTime:int,type:MenuItemType,priceLunch:double,priceDinner:double,priceHappyHour:double]
Class: MenuOrder (class) - Enum Attributes: [], Class Attributes: [reservationNumber:string,menuItemNumber:string,orderTime:Time]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [foodItemNumber:string,description:string,purchaseFlag:boolean,unitMeasure:UnitMeasure]
Class: Ingredient (class) - Enum Attributes: [], Class Attributes: [parentFoodItemNumber:string,childFoodItemNumber:string,quantity:double]
Relationships:
 1 RomanoRestaurant association * Reservation
 1 RomanoRestaurant association * Table
 1 RomanoRestaurant association * RestaurantManager
 1 RestaurantManager association * Maitre
 1 RestaurantManager association * Chef
 1 Person association * Manager
 1 Person association * Maitre
 1 Person association * Waiter
 1 Person association * Bartender
 1 Person association * Chef
 1 Person association * Cook
 1 Person association * BusPerson
 1 Person association * Dishwasher
 1 Reservation association 1 Waiter
 1 Menu association * MenuOrder
 1 RomanoRestaurant association * Menu
 1 RomanoRestaurant association * FoodItem
 1 FoodItem association * Ingredient
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Classes:
 'SeatingPreference(enum)'	-	'SeatingPreference(enum)'
 'SmokingPreference(enum)'	-	'SmokingPreference(enum)'
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Reservation(class)'	-	'Reservation(class)'
 'Table(class)'	-	'Table(class)'
 'Menu(class)'	-	'Menu(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'Ingredient(class)'	-	'Ingredient(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'UnitMeasure(enum)'	-	'Unit(enum)'
 'Person(class)'	-	'Role(enum)'
 'RestaurantManager(class)'	-	'Employee(class)'
-Attributes:
 'SeatingPreference(enum):inside'	-	'inside'
 'SeatingPreference(enum):patio'	-	'patio'
 'SmokingPreference(enum):smoking'	-	'smoking'
 'SmokingPreference(enum):nonsmoking'	-	'nonsmoking'
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):reservationNumber'	-	'reservationNumber'
 'Reservation(class):date'	-	'date'
 'Reservation(class):time'	-	'time'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'Table(class):tableNumber'	-	'tableNumber'
 'Table(class):description'	-	'description'
 'FoodItem(class):description'	-	'description'
 'Ingredient(class):quantity'	-	'quantity'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'UnitMeasure(enum):ounce'	-	'ounce'
 'UnitMeasure(enum):sheet'	-	'sheet'
 'UnitMeasure(enum):pound'	-	'pound'
 'UnitMeasure(enum):gram'	-	'gram'
 'UnitMeasure(enum):dozen'	-	'dozen'
 'Person(class):Manager'	-	'manager'
 'Person(class):Maitre'	-	'Maitre'
 'Person(class):Waiter'	-	'waiter'
 'Person(class):Bartender'	-	'bartender'
 'Person(class):Chef'	-	'chef'
 'Person(class):Cook'	-	'cook'
 'Person(class):BusPerson'	-	'busPerson'
 'Person(class):Dishwasher'	-	'dishwasher'
 'RestaurantManager(class):name'	-	'name'
-Relationships:
 ' 1 FoodItem association * Ingredient'	-	' 1 FoodItem association * Ingredient'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             17                  12                  17                  
Attributes          65                  34                  51                  
Associations        11                  1                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------20/20------Romano:
------------------------------------------------------------
AI:
Enumeration:
- TableSize (2-person, 4-person, 6-person)
- MenuItemType (appetizer, entree, dessert, beverage)
- UnitOfMeasure (each, ounce, sheet, pound, gram, dozen)

Classes:
- Restaurant()
- Reservation(number: int, time: datetime, date: datetime, numberOfPeople: int, name: string, phoneNumber: string, reservationType: string)
- IndividualReservation(seatingPreference: string, smokingPreference: string)
- BanquetReservation(groupName: string, paymentMethod: string)
- Table(number: int, description: string, size: TableSize)
- Manager(name: string, dateOfBirth: datetime, driverLicenseNumber: string)
- Maitre(name: string, dateOfBirth: datetime, driverLicenseNumber: string)
- Waiter(name: string, dateOfBirth: datetime, driverLicenseNumber: string)
- Bartender(name: string, dateOfBirth: datetime, driverLicenseNumber: string)
- Chef(name: string, dateOfBirth: datetime, driverLicenseNumber: string)
- Cook(name: string, dateOfBirth: datetime, driverLicenseNumber: string)
- BusPerson(name: string, dateOfBirth: datetime, driverLicenseNumber: string)
- Dishwasher(name: string, dateOfBirth: datetime, driverLicenseNumber: string)
- Menu()
- MenuItem(number: int, description: string, prepTime: int, type: MenuItemType, priceLunch: float, priceDinner: float, priceHappyHour: float)
- FoodItem(number: int, description: string, purchaseFlag: boolean, unitOfMeasure: UnitOfMeasure)
- MenuFoodItem(menuItem: MenuItem, foodItem: FoodItem, quantity: int)

Associations:
- Restaurant contains * Reservation
- Reservation associates 1 Table
- Restaurant contains * Table
- Restaurant contains * Manager
- Restaurant contains * Maitre
- Restaurant contains * Waiter
- Restaurant contains * Bartender
- Restaurant contains * Chef
- Restaurant contains * Cook
- Restaurant contains * BusPerson
- Restaurant contains * Dishwasher
- Waiter maintains * MenuItem
- MenuItem associates * Reservation
- Restaurant contains * Menu
- Menu contains * MenuItem
- Restaurant contains * FoodItem
- MenuFoodItem associates 1 MenuItem
- MenuFoodItem associates 1 FoodItem

------------------------------------------------------------
(Baseline) Structure Model_Gen:
 Classes:
Class: TableSize (enum) - Enum Attributes: [2-person, 4-person, 6-person], Class Attributes: []
Class: MenuItemType (enum) - Enum Attributes: [appetizer, entree, dessert, beverage], Class Attributes: []
Class: UnitOfMeasure (enum) - Enum Attributes: [each, ounce, sheet, pound, gram, dozen], Class Attributes: []
Class: Restaurant (class) - Enum Attributes: [], Class Attributes: []
Class: Reservation (class) - Enum Attributes: [], Class Attributes: [number:int,time:datetime,date:datetime,numberOfPeople:int,name:string,phoneNumber:string,reservationType:string]
Class: IndividualReservation (class) - Enum Attributes: [], Class Attributes: [seatingPreference:string,smokingPreference:string]
Class: BanquetReservation (class) - Enum Attributes: [], Class Attributes: [groupName:string,paymentMethod:string]
Class: Table (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,size:TableSize]
Class: Manager (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:datetime,driverLicenseNumber:string]
Class: Maitre (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:datetime,driverLicenseNumber:string]
Class: Waiter (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:datetime,driverLicenseNumber:string]
Class: Bartender (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:datetime,driverLicenseNumber:string]
Class: Chef (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:datetime,driverLicenseNumber:string]
Class: Cook (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:datetime,driverLicenseNumber:string]
Class: BusPerson (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:datetime,driverLicenseNumber:string]
Class: Dishwasher (class) - Enum Attributes: [], Class Attributes: [name:string,dateOfBirth:datetime,driverLicenseNumber:string]
Class: Menu (class) - Enum Attributes: [], Class Attributes: []
Class: MenuItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,prepTime:int,type:MenuItemType,priceLunch:float,priceDinner:float,priceHappyHour:float]
Class: FoodItem (class) - Enum Attributes: [], Class Attributes: [number:int,description:string,purchaseFlag:boolean,unitOfMeasure:UnitOfMeasure]
Class: MenuFoodItem (class) - Enum Attributes: [], Class Attributes: [menuItem:MenuItem,foodItem:FoodItem,quantity:int]
Relationships:
 1 Restaurant association * Reservation
 1 Reservation association 1 Table
 1 Restaurant association * Table
 1 Restaurant association * Manager
 1 Restaurant association * Maitre
 1 Restaurant association * Waiter
 1 Restaurant association * Bartender
 1 Restaurant association * Chef
 1 Restaurant association * Cook
 1 Restaurant association * BusPerson
 1 Restaurant association * Dishwasher
 1 Waiter association * MenuItem
 1 MenuItem association * Reservation
 1 Restaurant association * Menu
 1 Menu association * MenuItem
 1 Restaurant association * FoodItem
 1 MenuFoodItem association 1 MenuItem
 1 MenuFoodItem association 1 FoodItem
--------------------------------------------------------------------------------
--20/20--Classes and attributes matching process:
-Classes:
 'MenuItemType(enum)'	-	'MenuItemType(enum)'
 'Restaurant(class)'	-	'Restaurant(class)'
 'Reservation(class)'	-	'Reservation(class)'
 'IndividualReservation(class)'	-	'IndividualReservation(class)'
 'BanquetReservation(class)'	-	'BanquetReservation(class)'
 'Table(class)'	-	'Table(class)'
 'Menu(class)'	-	'Menu(class)'
 'MenuItem(class)'	-	'MenuItem(class)'
 'FoodItem(class)'	-	'FoodItem(class)'
 'TableSize(enum)'	-	'TableType(enum)'
 'UnitOfMeasure(enum)'	-	'Unit(enum)'
 'Manager(class)'	-	'Employee(class)'
 'MenuFoodItem(class)'	-	'Ingredient(class)'
-Attributes:
 'MenuItemType(enum):appetizer'	-	'appetizer'
 'MenuItemType(enum):entree'	-	'entree'
 'MenuItemType(enum):dessert'	-	'dessert'
 'Reservation(class):time'	-	'time'
 'Reservation(class):date'	-	'date'
 'Reservation(class):numberOfPeople'	-	'numberOfPeople'
 'Reservation(class):name'	-	'name'
 'Reservation(class):phoneNumber'	-	'phoneNumber'
 'IndividualReservation(class):seatingPreference'	-	'seatingPreference'
 'IndividualReservation(class):smokingPreference'	-	'smokingPreference'
 'BanquetReservation(class):groupName'	-	'groupName'
 'BanquetReservation(class):paymentMethod'	-	'paymentMethod'
 'Table(class):description'	-	'description'
 'MenuItem(class):number'	-	'number'
 'MenuItem(class):description'	-	'description'
 'MenuItem(class):prepTime'	-	'prepTime'
 'MenuItem(class):type'	-	'type'
 'FoodItem(class):number'	-	'number'
 'FoodItem(class):description'	-	'description'
 'TableSize(enum):2-person'	-	'2person'
 'TableSize(enum):4-person'	-	'4person'
 'TableSize(enum):6-person'	-	'6person'
 'UnitOfMeasure(enum):ounce'	-	'ounce'
 'UnitOfMeasure(enum):sheet'	-	'sheet'
 'UnitOfMeasure(enum):pound'	-	'pound'
 'UnitOfMeasure(enum):gram'	-	'gram'
 'UnitOfMeasure(enum):dozen'	-	'dozen'
 'Manager(class):name'	-	'name'
 'Manager(class):dateOfBirth'	-	'dateOfBirth'
 'Manager(class):driverLicenseNumber'	-	'driverLicenseNumber'
 'MenuFoodItem(class):quantity'	-	'quantity'
-Relationships:
 ' 1 Restaurant association * Reservation'	-	' 1 Restaurant association * Reservation'
 ' 1 Reservation association 1 Table'	-	' 1 Reservation association 0..* Table'
 ' 1 Restaurant association * Table'	-	' 1 Restaurant association * Table'
 ' 1 Restaurant association * Manager'	-	' 1 Restaurant association * Employee'
 ' 1 Restaurant association * Menu'	-	' 1 Restaurant association 1 Menu'
 ' 1 Restaurant association * FoodItem'	-	' 1 Restaurant association * FoodItem'
 ' 1 MenuFoodItem association 1 MenuItem'	-	' 1 MenuItem association * Ingredient'
 ' 1 MenuFoodItem association 1 FoodItem'	-	' 1 FoodItem association * Ingredient'
--------------------------------------------------------------------------------
Romano, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             20                  13                  17                  
Attributes          65                  31                  51                  
Associations        18                  8                   13                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
Romano, avg-method2
--------------------------------------------------------------------------------
Metric              Precision      Recall         F1             F2             
--------------------------------------------------------------------------------
Classes             0.575          0.691          0.628          0.664
Attributes          0.475          0.659          0.552          0.612
Associations        0.169          0.185          0.176          0.181
Inheritances        0.000          0.000          0.000          0.000
--------------------------------------------------------------------------------
