------------------------------------------------------------
---------------------1/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  address:string,  phoneNumber:string,  password:string,  isAttending:boolean)
    + Event( startDate:DateTime,  endDate:DateTime,  occasion:string,  location:string)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  isAttending:boolean)
    + Task( description:string,  status:enum{ToDo, Done, NotApplicable},  designatedToAttendee:boolean)
    + EventSpecificChecklist()
    + InvitationStatus( totalAttendees:int,  attendeesReplied:int,  attendeesConfirmed:int,  attendeesMaybeAttending:int)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(ToDo, Done, NotApplicable)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, address: String, phoneNumber: String, password: String, isAttending: boolean)
   + Event(startDate: DateTime, endDate: DateTime, occasion: String, location: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, isAttending: boolean)
   + EventSpecificChecklist()
   + InvitationStatus(totalAttendees: int, attendeesReplied: int, attendeesConfirmed: int, attendeesMaybeAttending: int)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Event
    + [0..*] Event contain [1] Location
    + [1] Event contain [*] Organizer
    + [0..*] Event contain [0..*] Attendee
    + [1] Event contain [1] EventSpecificChecklist
    + [1] Event contain [1] InvitationStatus

Final Association Relationships:
    + [1] Organizer associate [0..*] Attendee
    + [1] Attendee associate [0..*] Task
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Organizer inherit CelO
    + Attendee inherit CelO
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(ToDo, Done, NotApplicable)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, address: String, phoneNumber: String, password: String, isAttending: boolean)
   + Event(startDate: DateTime, endDate: DateTime, occasion: String, location: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, isAttending: boolean)
   + EventSpecificChecklist()
   + InvitationStatus(totalAttendees: int, attendeesReplied: int, attendeesConfirmed: int, attendeesMaybeAttending: int)

Relationships:
# Final Inheritance Relationships:
   + Organizer extends CelO
   + Attendee extends CelO

# Final Association Relationships:
   + [1] Organizer associate [0..*] Attendee
   + [1] Attendee associate [0..*] Task
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [0..*] Event contain [1] Location
   + [1] Event contain [*] Organizer
   + [0..*] Event contain [0..*] Attendee
   + [1] Event contain [1] EventSpecificChecklist
   + [1] Event contain [1] InvitationStatus
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [ToDo, Done, NotApplicable], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,address:String,phoneNumber:String,password:String,isAttending:boolean]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:DateTime,endDate:DateTime,occasion:String,location:String]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,isAttending:boolean]
Class: EventSpecificChecklist (class) - Enum Attributes: [], Class Attributes: []
Class: InvitationStatus (class) - Enum Attributes: [], Class Attributes: [totalAttendees:int,attendeesReplied:int,attendeesConfirmed:int,attendeesMaybeAttending:int]
Relationships:
 False Organizer inheritance False CelO
 False Attendee inheritance False CelO
 1 Organizer association 0..* Attendee
 1 Attendee association 0..* Task
 1 CelO association * Organizer
 1 CelO association * Event
 0..* Event association 1 Location
 1 Event association * Organizer
 0..* Event association 0..* Attendee
 1 Event association 1 EventSpecificChecklist
 1 Event association 1 InvitationStatus
--------------------------------------------------------------------------------
--1/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'InvitationStatus(class)' - 'AttendeeStatus(enum)'
-Attributes:
 'Organizer(class):address' - 'address'
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
-Relationships:
 ' 1 CelO association * Event' - ' 1 CelO association * Event'
 ' 0..* Event association 1 Location' - ' 1 Location association * Event'
 ' 1 Event association * Organizer' - ' 1..* Organizer association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             9                   8                   13                  
Attributes          26                  5                   23                  
Associations        8                   3                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
---------------------2/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  address:string,  phoneNumber:string,  password:string,  isAttending:boolean)
    + Event( startDate:DateTime,  endDate:DateTime,  occasion:string,  location:string)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  isAttending:boolean)
    + Task( description:string,  status:enum{ToDo, Done, NotApplicable},  designatedToAttendee:boolean)
    + EventSpecificChecklist()
    + InvitationStatus( totalAttendees:int,  attendeesReplied:int,  attendeesConfirmed:int,  attendeesMaybeAttending:int)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(ToDo, Done, NotApplicable)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, address: String, phoneNumber: String, password: String, isAttending: boolean)
   + Event(startDate: DateTime, endDate: DateTime, occasion: String, location: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, isAttending: boolean)
   + EventSpecificChecklist()
   + InvitationStatus(totalAttendees: int, attendeesReplied: int, attendeesConfirmed: int, attendeesMaybeAttending: int)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Event
    + [0..*] Event contain [1] Location
    + [1] Event contain [*] Organizer
    + [0..*] Event contain [0..*] Attendee
    + [1] Event contain [1] EventSpecificChecklist
    + [1] Event contain [1] InvitationStatus

Final Association Relationships:
    + [1] Organizer associate [0..*] Attendee
    + [1] Attendee associate [0..*] Task
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Organizer inherit CelO
    + Attendee inherit CelO
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(ToDo, Done, NotApplicable)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, address: String, phoneNumber: String, password: String, isAttending: boolean)
   + Event(startDate: DateTime, endDate: DateTime, occasion: String, location: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, isAttending: boolean)
   + EventSpecificChecklist()
   + InvitationStatus(totalAttendees: int, attendeesReplied: int, attendeesConfirmed: int, attendeesMaybeAttending: int)

Relationships:
# Final Inheritance Relationships:
   + Organizer extends CelO
   + Attendee extends CelO

# Final Association Relationships:
   + [1] Organizer associate [0..*] Attendee
   + [1] Attendee associate [0..*] Task
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [0..*] Event contain [1] Location
   + [1] Event contain [*] Organizer
   + [0..*] Event contain [0..*] Attendee
   + [1] Event contain [1] EventSpecificChecklist
   + [1] Event contain [1] InvitationStatus
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [ToDo, Done, NotApplicable], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,address:String,phoneNumber:String,password:String,isAttending:boolean]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:DateTime,endDate:DateTime,occasion:String,location:String]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,isAttending:boolean]
Class: EventSpecificChecklist (class) - Enum Attributes: [], Class Attributes: []
Class: InvitationStatus (class) - Enum Attributes: [], Class Attributes: [totalAttendees:int,attendeesReplied:int,attendeesConfirmed:int,attendeesMaybeAttending:int]
Relationships:
 False Organizer inheritance False CelO
 False Attendee inheritance False CelO
 1 Organizer association 0..* Attendee
 1 Attendee association 0..* Task
 1 CelO association * Organizer
 1 CelO association * Event
 0..* Event association 1 Location
 1 Event association * Organizer
 0..* Event association 0..* Attendee
 1 Event association 1 EventSpecificChecklist
 1 Event association 1 InvitationStatus
--------------------------------------------------------------------------------
--2/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'InvitationStatus(class)' - 'AttendeeStatus(enum)'
-Attributes:
 'Organizer(class):address' - 'address'
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
-Relationships:
 ' 1 CelO association * Event' - ' 1 CelO association * Event'
 ' 0..* Event association 1 Location' - ' 1 Location association * Event'
 ' 1 Event association * Organizer' - ' 1..* Organizer association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             9                   8                   13                  
Attributes          26                  5                   23                  
Associations        8                   3                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------3/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  postalAddress:string,  phoneNumber:string,  password:string, eventList:list[Event])
    + Event( startDate:Date,  endDate:Date,  occasion:string,  location:Location, organizer:Organizer, attendeeList:list[Attendee], taskList:list[Task], invitationStatus:InvitationStatus)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  eventStatus:EventStatus, taskList:list[Task])
    + Task( description:string,  status:TaskStatus)
    + abstract User( firstName:string,  lastName:string,  email:string,  password:string)
    + InvitationStatus( repliedCount:int,  confirmedCount:int, maybeCount:int)
    + EventStatus( attending:boolean, maybeAttending:boolean)
    + TaskStatus( todo:boolean, done:boolean, notApplicable:boolean)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(Todo, Done, NotApplicable)
   + EventStatus(Attending, MaybeAttending)
   + InvitationStatus(RepliedCount, ConfirmedCount, MaybeCount)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, eventList: List[Event])
   + Event(startDate: Date, endDate: Date, occasion: String, location: Location, organizer: Organizer, attendeeList: List[Attendee], taskList: List[Task], invitationStatus: InvitationStatus)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, eventStatus: EventStatus, taskList: List[Task])
   + Task(description: String, status: TaskStatus)
   + User(firstName: String, lastName: String, email: String, password: String)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] Organizer contain [*] Event
    + [1] Organizer contain [*] Task
    + [1] Event contain [*] Attendee
    + [1] Event contain [*] Task
    + [1] Location contain [*] Event
    + [1] Attendee contain [*] Task

Final Association Relationships:
    + [1] Organizer associate [0..*] Attendee
    + [1] Organizer associate [0..*] Task
    + [0..*] Attendee associate [0..*] Task
    + [1] User associate [0..*] Organizer
    + [1] User associate [0..*] Attendee
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Organizer extends User
    + Attendee extends User
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(Todo, Done, NotApplicable)
   + EventStatus(Attending, MaybeAttending)
   + InvitationStatus(RepliedCount, ConfirmedCount, MaybeCount)

Classes:
   + CelO()
   + User(firstName: String, lastName: String, email: String, password: String)
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, eventList: List[Event])
   + Event(startDate: Date, endDate: Date, occasion: String, location: Location, organizer: Organizer, attendeeList: List[Attendee], taskList: List[Task], invitationStatus: InvitationStatus)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, eventStatus: EventStatus, taskList: List[Task])
   + Task(description: String, status: TaskStatus)

Relationships:
# Final Inheritance Relationships:
   + Organizer extends User
   + Attendee extends User
# Final Association Relationships:
   + [1] User associate [0..*] Organizer
   + [1] User associate [0..*] Attendee
   + [1] CelO contain [*] Organizer
   + [1] Organizer contain [*] Event
   + [1] Organizer contain [*] Task
   + [1] Event contain [*] Attendee
   + [1] Event contain [*] Task
   + [1] Location contain [*] Event
   + [1] Attendee contain [*] Task
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [Todo, Done, NotApplicable], Class Attributes: []
Class: EventStatus (enum) - Enum Attributes: [Attending, MaybeAttending], Class Attributes: []
Class: InvitationStatus (enum) - Enum Attributes: [RepliedCount, ConfirmedCount, MaybeCount], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,password:String]
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String,eventList:List[Event]]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String,location:Location,organizer:Organizer,attendeeList:List[Attendee],taskList:List[Task],invitationStatus:InvitationStatus]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,eventStatus:EventStatus,taskList:List[Task]]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus]
Relationships:
 False Organizer inheritance False User
 False Attendee inheritance False User
 1 User association 0..* Organizer
 1 User association 0..* Attendee
 1 CelO association * Organizer
 1 Organizer association * Event
 1 Organizer association * Task
 1 Event association * Attendee
 1 Event association * Task
 1 Location association * Event
 1 Attendee association * Task
--------------------------------------------------------------------------------
--3/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'User(class)' - 'Person(class)'
 'InvitationStatus(enum)' - 'AttendeeStatus(enum)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'User(class):firstName' - 'firstName'
 'User(class):lastName' - 'lastName'
 'User(class):password' - 'password'
 'Task(class):description' - 'description'
-Relationships:
 ' 1 Organizer association * Event' - ' 1..* Organizer association * Event'
 ' 1 Location association * Event' - ' 1 Location association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  10                  13                  
Attributes          38                  8                   23                  
Associations        9                   2                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------4/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  postalAddress:string,  phoneNumber:string,  password:string, eventList:list[Event])
    + Event( startDate:Date,  endDate:Date,  occasion:string,  location:Location, organizer:Organizer, attendeeList:list[Attendee], taskList:list[Task], invitationStatus:InvitationStatus)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  eventStatus:EventStatus, taskList:list[Task])
    + Task( description:string,  status:TaskStatus)
    + abstract User( firstName:string,  lastName:string,  email:string,  password:string)
    + InvitationStatus( repliedCount:int,  confirmedCount:int, maybeCount:int)
    + EventStatus( attending:boolean, maybeAttending:boolean)
    + TaskStatus( todo:boolean, done:boolean, notApplicable:boolean)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(Todo, Done, NotApplicable)
   + EventStatus(Attending, MaybeAttending)
   + InvitationStatus(RepliedCount, ConfirmedCount, MaybeCount)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, eventList: List[Event])
   + Event(startDate: Date, endDate: Date, occasion: String, location: Location, organizer: Organizer, attendeeList: List[Attendee], taskList: List[Task], invitationStatus: InvitationStatus)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, eventStatus: EventStatus, taskList: List[Task])
   + Task(description: String, status: TaskStatus)
   + User(firstName: String, lastName: String, email: String, password: String)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] Organizer contain [*] Event
    + [1] Organizer contain [*] Task
    + [1] Event contain [*] Attendee
    + [1] Event contain [*] Task
    + [1] Location contain [*] Event
    + [1] Attendee contain [*] Task

Final Association Relationships:
    + [1] Organizer associate [0..*] Attendee
    + [1] Organizer associate [0..*] Task
    + [0..*] Attendee associate [0..*] Task
    + [1] User associate [0..*] Organizer
    + [1] User associate [0..*] Attendee
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Organizer extends User
    + Attendee extends User
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(Todo, Done, NotApplicable)
   + EventStatus(Attending, MaybeAttending)
   + InvitationStatus(RepliedCount, ConfirmedCount, MaybeCount)

Classes:
   + CelO()
   + User(firstName: String, lastName: String, email: String, password: String)
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, eventList: List[Event])
   + Event(startDate: Date, endDate: Date, occasion: String, location: Location, organizer: Organizer, attendeeList: List[Attendee], taskList: List[Task], invitationStatus: InvitationStatus)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, eventStatus: EventStatus, taskList: List[Task])
   + Task(description: String, status: TaskStatus)

Relationships:
# Final Inheritance Relationships:
   + Organizer extends User
   + Attendee extends User
# Final Association Relationships:
   + [1] User associate [0..*] Organizer
   + [1] User associate [0..*] Attendee
   + [1] CelO contain [*] Organizer
   + [1] Organizer contain [*] Event
   + [1] Organizer contain [*] Task
   + [1] Event contain [*] Attendee
   + [1] Event contain [*] Task
   + [1] Location contain [*] Event
   + [1] Attendee contain [*] Task
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [Todo, Done, NotApplicable], Class Attributes: []
Class: EventStatus (enum) - Enum Attributes: [Attending, MaybeAttending], Class Attributes: []
Class: InvitationStatus (enum) - Enum Attributes: [RepliedCount, ConfirmedCount, MaybeCount], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,password:String]
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String,eventList:List[Event]]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String,location:Location,organizer:Organizer,attendeeList:List[Attendee],taskList:List[Task],invitationStatus:InvitationStatus]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,eventStatus:EventStatus,taskList:List[Task]]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus]
Relationships:
 False Organizer inheritance False User
 False Attendee inheritance False User
 1 User association 0..* Organizer
 1 User association 0..* Attendee
 1 CelO association * Organizer
 1 Organizer association * Event
 1 Organizer association * Task
 1 Event association * Attendee
 1 Event association * Task
 1 Location association * Event
 1 Attendee association * Task
--------------------------------------------------------------------------------
--4/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'User(class)' - 'Person(class)'
 'InvitationStatus(enum)' - 'AttendeeStatus(enum)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'User(class):firstName' - 'firstName'
 'User(class):lastName' - 'lastName'
 'User(class):password' - 'password'
 'Task(class):description' - 'description'
-Relationships:
 ' 1 Organizer association * Event' - ' 1..* Organizer association * Event'
 ' 1 Location association * Event' - ' 1 Location association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  10                  13                  
Attributes          38                  8                   23                  
Associations        9                   2                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------5/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  postalAddress:string,  phoneNumber:string,  password:string, eventList:list[Event])
    + Event( startDate:Date,  endDate:Date,  occasion:string,  location:Location, organizer:Organizer, attendeeList:list[Attendee], taskList:list[Task], invitationStatus:InvitationStatus)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  eventStatus:EventStatus, taskList:list[Task])
    + Task( description:string,  status:TaskStatus)
    + abstract User( firstName:string,  lastName:string,  email:string,  password:string)
    + InvitationStatus( repliedCount:int,  confirmedCount:int, maybeCount:int)
    + EventStatus( attending:boolean, maybeAttending:boolean)
    + TaskStatus( todo:boolean, done:boolean, notApplicable:boolean)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(Todo, Done, NotApplicable)
   + EventStatus(Attending, MaybeAttending)
   + InvitationStatus(RepliedCount, ConfirmedCount, MaybeCount)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, eventList: List[Event])
   + Event(startDate: Date, endDate: Date, occasion: String, location: Location, organizer: Organizer, attendeeList: List[Attendee], taskList: List[Task], invitationStatus: InvitationStatus)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, eventStatus: EventStatus, taskList: List[Task])
   + Task(description: String, status: TaskStatus)
   + User(firstName: String, lastName: String, email: String, password: String)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] Organizer contain [*] Event
    + [1] Organizer contain [*] Task
    + [1] Event contain [*] Attendee
    + [1] Event contain [*] Task
    + [1] Location contain [*] Event
    + [1] Attendee contain [*] Task

Final Association Relationships:
    + [1] Organizer associate [0..*] Attendee
    + [1] Organizer associate [0..*] Task
    + [0..*] Attendee associate [0..*] Task
    + [1] User associate [0..*] Organizer
    + [1] User associate [0..*] Attendee
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Organizer extends User
    + Attendee extends User
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(Todo, Done, NotApplicable)
   + EventStatus(Attending, MaybeAttending)
   + InvitationStatus(RepliedCount, ConfirmedCount, MaybeCount)

Classes:
   + CelO()
   + User(firstName: String, lastName: String, email: String, password: String)
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, eventList: List[Event])
   + Event(startDate: Date, endDate: Date, occasion: String, location: Location, organizer: Organizer, attendeeList: List[Attendee], taskList: List[Task], invitationStatus: InvitationStatus)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, eventStatus: EventStatus, taskList: List[Task])
   + Task(description: String, status: TaskStatus)

Relationships:
# Final Inheritance Relationships:
   + Organizer extends User
   + Attendee extends User
# Final Association Relationships:
   + [1] User associate [0..*] Organizer
   + [1] User associate [0..*] Attendee
   + [1] CelO contain [*] Organizer
   + [1] Organizer contain [*] Event
   + [1] Organizer contain [*] Task
   + [1] Event contain [*] Attendee
   + [1] Event contain [*] Task
   + [1] Location contain [*] Event
   + [1] Attendee contain [*] Task
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [Todo, Done, NotApplicable], Class Attributes: []
Class: EventStatus (enum) - Enum Attributes: [Attending, MaybeAttending], Class Attributes: []
Class: InvitationStatus (enum) - Enum Attributes: [RepliedCount, ConfirmedCount, MaybeCount], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,password:String]
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String,eventList:List[Event]]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String,location:Location,organizer:Organizer,attendeeList:List[Attendee],taskList:List[Task],invitationStatus:InvitationStatus]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,eventStatus:EventStatus,taskList:List[Task]]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus]
Relationships:
 False Organizer inheritance False User
 False Attendee inheritance False User
 1 User association 0..* Organizer
 1 User association 0..* Attendee
 1 CelO association * Organizer
 1 Organizer association * Event
 1 Organizer association * Task
 1 Event association * Attendee
 1 Event association * Task
 1 Location association * Event
 1 Attendee association * Task
--------------------------------------------------------------------------------
--5/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'User(class)' - 'Person(class)'
 'InvitationStatus(enum)' - 'AttendeeStatus(enum)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'User(class):firstName' - 'firstName'
 'User(class):lastName' - 'lastName'
 'User(class):password' - 'password'
 'Task(class):description' - 'description'
-Relationships:
 ' 1 Organizer association * Event' - ' 1..* Organizer association * Event'
 ' 1 Location association * Event' - ' 1 Location association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  10                  13                  
Attributes          38                  8                   23                  
Associations        9                   2                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------6/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
    + EventLocationType(ExistingLocation, NewLocation)
    + TaskStatus(NeedsToBeDone, Done, NotApplicable)
    + AttendanceStatus(Attending, MaybeAttending, NotAttending)

# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  address:string,  phoneNumber:string,  password:string,  isAttending:boolean,  event:EventType)
    + Event( startDate:Date,  endDate:Date,  occasion:string,  locationType:EventLocationType)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  isAttending:AttendanceStatus)
    + Task( description:string,  status:TaskStatus)
    + EventChecklist()
    + AttendeeTaskAssignment()
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + EventLocationType(ExistingLocation, NewLocation)
   + TaskStatus(NeedsToBeDone, Done, NotApplicable)
   + AttendanceStatus(Attending, MaybeAttending, NotAttending)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, address: String, phoneNumber: String, password: String, isAttending: Boolean, event: EventType)
   + Event(startDate: Date, endDate: Date, occasion: String, locationType: EventLocationType)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, isAttending: AttendanceStatus)
   + Task(description: String, status: TaskStatus)
   + EventChecklist()
   + AttendeeTaskAssignment()
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Event
    + [1] CelO contain [*] Attendee
    + [1] CelO contain [*] Task
    + [1] Event contain [*] Location
    + [1] Event contain [*] EventChecklist
    + [1] EventChecklist contain [*] Task
    + [1] EventChecklist contain [*] AttendeeTaskAssignment

Final Association Relationships:
    + [1] Organizer associate [0..*] Event
    + [0..*] Organizer associate [0..*] Attendee
    + [0..*] Attendee associate [1] Event
    + [0..*] Event associate [0..*] Task
    + [0..*] Task associate [0..*] Attendee
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + Organizer extends CelO
   + Attendee extends CelO
   + EventChecklist extends Event
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + TaskStatus(NeedsToBeDone, Done, NotApplicable)
   + AttendanceStatus(Attending, MaybeAttending, NotAttending)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, address: String, phoneNumber: String, password: String, isAttending: Boolean, event: EventType)
   + Event(startDate: Date, endDate: Date, occasion: String, locationType: EventLocationType)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, isAttending: AttendanceStatus)
   + Task(description: String, status: TaskStatus)
   + EventChecklist()
   + AttendeeTaskAssignment()

Relationships:
# Final Inheritance Relationships:
   + Organizer extends CelO
   + Attendee extends CelO
# Final Association Relationships:
   + [1] Organizer associate [0..*] Event
   + [0..*] Organizer associate [0..*] Attendee
   + [0..*] Attendee associate [1] Event
   + [0..*] Event associate [0..*] Task
   + [0..*] Task associate [0..*] Attendee
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [1] CelO contain [*] Attendee
   + [1] CelO contain [*] Task
   + [1] Event contain [*] Location
   + [1] Event contain [*] EventChecklist
   + [1] EventChecklist contain [*] Task
   + [1] EventChecklist contain [*] AttendeeTaskAssignment
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: TaskStatus (enum) - Enum Attributes: [NeedsToBeDone, Done, NotApplicable], Class Attributes: []
Class: AttendanceStatus (enum) - Enum Attributes: [Attending, MaybeAttending, NotAttending], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,address:String,phoneNumber:String,password:String,isAttending:Boolean,event:EventType]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String,locationType:EventLocationType]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,isAttending:AttendanceStatus]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus]
Class: EventChecklist (class) - Enum Attributes: [], Class Attributes: []
Class: AttendeeTaskAssignment (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False Organizer inheritance False CelO
 False Attendee inheritance False CelO
 1 Organizer association 0..* Event
 0..* Organizer association 0..* Attendee
 0..* Attendee association 1 Event
 0..* Event association 0..* Task
 0..* Task association 0..* Attendee
 1 CelO association * Organizer
 1 CelO association * Event
 1 CelO association * Attendee
 1 CelO association * Task
 1 Event association * Location
 1 Event association * EventChecklist
 1 EventChecklist association * Task
 1 EventChecklist association * AttendeeTaskAssignment
--------------------------------------------------------------------------------
--6/20--Classes and attributes matching process:
-Class:
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'AttendanceStatus(enum)' - 'Registration(class)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Organizer(class):address' - 'address'
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'Task(class):description' - 'description'
-Relationships:
 ' 1 Organizer association 0..* Event' - ' 1..* Organizer association * Event'
 ' 1 CelO association * Event' - ' 1 CelO association * Event'
 ' 1 CelO association * Task' - ' 1 CelO association * CheckList'
 ' 1 Event association * Location' - ' 1 Location association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  8                   13                  
Attributes          26                  6                   23                  
Associations        13                  4                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------7/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  postalAddress:string,  phoneNumber:string,  password:string, eventList:list[Event])
    + Event( startDate:Date,  endDate:Date,  occasion:string,  location:Location, organizer:Organizer, attendeeList:list[Attendee], taskList:list[Task], invitationStatus:InvitationStatus)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  eventStatus:EventStatus, taskList:list[Task])
    + Task( description:string,  status:TaskStatus)
    + abstract User( firstName:string,  lastName:string,  email:string,  password:string)
    + InvitationStatus( repliedCount:int,  confirmedCount:int, maybeCount:int)
    + EventStatus( attending:boolean, maybeAttending:boolean)
    + TaskStatus( todo:boolean, done:boolean, notApplicable:boolean)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(Todo, Done, NotApplicable)
   + EventStatus(Attending, MaybeAttending)
   + InvitationStatus(RepliedCount, ConfirmedCount, MaybeCount)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, eventList: List[Event])
   + Event(startDate: Date, endDate: Date, occasion: String, location: Location, organizer: Organizer, attendeeList: List[Attendee], taskList: List[Task], invitationStatus: InvitationStatus)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, eventStatus: EventStatus, taskList: List[Task])
   + Task(description: String, status: TaskStatus)
   + User(firstName: String, lastName: String, email: String, password: String)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] Organizer contain [*] Event
    + [1] Organizer contain [*] Task
    + [1] Event contain [*] Attendee
    + [1] Event contain [*] Task
    + [1] Location contain [*] Event
    + [1] Attendee contain [*] Task

Final Association Relationships:
    + [1] Organizer associate [0..*] Attendee
    + [1] Organizer associate [0..*] Task
    + [0..*] Attendee associate [0..*] Task
    + [1] User associate [0..*] Organizer
    + [1] User associate [0..*] Attendee
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Organizer extends User
    + Attendee extends User
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(Todo, Done, NotApplicable)
   + EventStatus(Attending, MaybeAttending)
   + InvitationStatus(RepliedCount, ConfirmedCount, MaybeCount)

Classes:
   + CelO()
   + User(firstName: String, lastName: String, email: String, password: String)
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, eventList: List[Event])
   + Event(startDate: Date, endDate: Date, occasion: String, location: Location, organizer: Organizer, attendeeList: List[Attendee], taskList: List[Task], invitationStatus: InvitationStatus)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, eventStatus: EventStatus, taskList: List[Task])
   + Task(description: String, status: TaskStatus)

Relationships:
# Final Inheritance Relationships:
   + Organizer extends User
   + Attendee extends User
# Final Association Relationships:
   + [1] User associate [0..*] Organizer
   + [1] User associate [0..*] Attendee
   + [1] CelO contain [*] Organizer
   + [1] Organizer contain [*] Event
   + [1] Organizer contain [*] Task
   + [1] Event contain [*] Attendee
   + [1] Event contain [*] Task
   + [1] Location contain [*] Event
   + [1] Attendee contain [*] Task
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [Todo, Done, NotApplicable], Class Attributes: []
Class: EventStatus (enum) - Enum Attributes: [Attending, MaybeAttending], Class Attributes: []
Class: InvitationStatus (enum) - Enum Attributes: [RepliedCount, ConfirmedCount, MaybeCount], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,password:String]
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String,eventList:List[Event]]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String,location:Location,organizer:Organizer,attendeeList:List[Attendee],taskList:List[Task],invitationStatus:InvitationStatus]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,eventStatus:EventStatus,taskList:List[Task]]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus]
Relationships:
 False Organizer inheritance False User
 False Attendee inheritance False User
 1 User association 0..* Organizer
 1 User association 0..* Attendee
 1 CelO association * Organizer
 1 Organizer association * Event
 1 Organizer association * Task
 1 Event association * Attendee
 1 Event association * Task
 1 Location association * Event
 1 Attendee association * Task
--------------------------------------------------------------------------------
--7/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'User(class)' - 'Person(class)'
 'InvitationStatus(enum)' - 'AttendeeStatus(enum)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'User(class):firstName' - 'firstName'
 'User(class):lastName' - 'lastName'
 'User(class):password' - 'password'
 'Task(class):description' - 'description'
-Relationships:
 ' 1 Organizer association * Event' - ' 1..* Organizer association * Event'
 ' 1 Location association * Event' - ' 1 Location association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  10                  13                  
Attributes          38                  8                   23                  
Associations        9                   2                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------8/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  postalAddress:string,  phoneNumber:string,  password:string, eventList:list[Event])
    + Event( startDate:Date,  endDate:Date,  occasion:string,  location:Location, organizer:Organizer, attendeeList:list[Attendee], taskList:list[Task], invitationStatus:InvitationStatus)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  eventStatus:EventStatus, taskList:list[Task])
    + Task( description:string,  status:TaskStatus)
    + abstract User( firstName:string,  lastName:string,  email:string,  password:string)
    + InvitationStatus( repliedCount:int,  confirmedCount:int, maybeCount:int)
    + EventStatus( attending:boolean, maybeAttending:boolean)
    + TaskStatus( todo:boolean, done:boolean, notApplicable:boolean)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(Todo, Done, NotApplicable)
   + EventStatus(Attending, MaybeAttending)
   + InvitationStatus(RepliedCount, ConfirmedCount, MaybeCount)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, eventList: List[Event])
   + Event(startDate: Date, endDate: Date, occasion: String, location: Location, organizer: Organizer, attendeeList: List[Attendee], taskList: List[Task], invitationStatus: InvitationStatus)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, eventStatus: EventStatus, taskList: List[Task])
   + Task(description: String, status: TaskStatus)
   + User(firstName: String, lastName: String, email: String, password: String)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] Organizer contain [*] Event
    + [1] Organizer contain [*] Task
    + [1] Event contain [*] Attendee
    + [1] Event contain [*] Task
    + [1] Location contain [*] Event
    + [1] Attendee contain [*] Task

Final Association Relationships:
    + [1] Organizer associate [0..*] Attendee
    + [1] Organizer associate [0..*] Task
    + [0..*] Attendee associate [0..*] Task
    + [1] User associate [0..*] Organizer
    + [1] User associate [0..*] Attendee
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Organizer extends User
    + Attendee extends User
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(Todo, Done, NotApplicable)
   + EventStatus(Attending, MaybeAttending)
   + InvitationStatus(RepliedCount, ConfirmedCount, MaybeCount)

Classes:
   + CelO()
   + User(firstName: String, lastName: String, email: String, password: String)
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, eventList: List[Event])
   + Event(startDate: Date, endDate: Date, occasion: String, location: Location, organizer: Organizer, attendeeList: List[Attendee], taskList: List[Task], invitationStatus: InvitationStatus)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, eventStatus: EventStatus, taskList: List[Task])
   + Task(description: String, status: TaskStatus)

Relationships:
# Final Inheritance Relationships:
   + Organizer extends User
   + Attendee extends User
# Final Association Relationships:
   + [1] User associate [0..*] Organizer
   + [1] User associate [0..*] Attendee
   + [1] CelO contain [*] Organizer
   + [1] Organizer contain [*] Event
   + [1] Organizer contain [*] Task
   + [1] Event contain [*] Attendee
   + [1] Event contain [*] Task
   + [1] Location contain [*] Event
   + [1] Attendee contain [*] Task
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [Todo, Done, NotApplicable], Class Attributes: []
Class: EventStatus (enum) - Enum Attributes: [Attending, MaybeAttending], Class Attributes: []
Class: InvitationStatus (enum) - Enum Attributes: [RepliedCount, ConfirmedCount, MaybeCount], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,password:String]
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String,eventList:List[Event]]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String,location:Location,organizer:Organizer,attendeeList:List[Attendee],taskList:List[Task],invitationStatus:InvitationStatus]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,eventStatus:EventStatus,taskList:List[Task]]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus]
Relationships:
 False Organizer inheritance False User
 False Attendee inheritance False User
 1 User association 0..* Organizer
 1 User association 0..* Attendee
 1 CelO association * Organizer
 1 Organizer association * Event
 1 Organizer association * Task
 1 Event association * Attendee
 1 Event association * Task
 1 Location association * Event
 1 Attendee association * Task
--------------------------------------------------------------------------------
--8/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'User(class)' - 'Person(class)'
 'InvitationStatus(enum)' - 'AttendeeStatus(enum)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'User(class):firstName' - 'firstName'
 'User(class):lastName' - 'lastName'
 'User(class):password' - 'password'
 'Task(class):description' - 'description'
-Relationships:
 ' 1 Organizer association * Event' - ' 1..* Organizer association * Event'
 ' 1 Location association * Event' - ' 1 Location association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  10                  13                  
Attributes          38                  8                   23                  
Associations        9                   2                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------9/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer(firstName:string, lastName:string, email:string, postalAddress:string, phoneNumber:string, password:string)
    + Event(type:EventType, startDate:DateTime, endDate:DateTime, occasion:string, location:Location)
    + Location(name:string, address:string)
    + Attendee(firstName:string, lastName:string, email:string, status:EventStatus)
    + EventStatus(Attending, MaybeAttending, NotAttending)
    + Task(description:string, status:TaskStatus)
    + TaskStatus(NeedsToDo, Done, NotApplicable)
    + EventChecklist(event:Event, tasks:List<Task>, attendeeTasks:List<Task>, designatedTasks:List<Task>)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + EventStatus(Attending, MaybeAttending, NotAttending)
   + TaskStatus(NeedsToDo, Done, NotApplicable)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String)
   + Event(type: EventType, startDate: DateTime, endDate: DateTime, occasion: String, location: Location)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, status: EventStatus)
   + Task(description: String, status: TaskStatus)
   + EventChecklist(event: Event, tasks: List<Task>, attendeeTasks: List<Task>, designatedTasks: List<Task>)

AI_answer(association):
```
Final Composition Relationships:
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [1] CelO contain [*] Location
   + [1] Event contain [*] Attendee
   + [1] Event contain [0..*] Task
   + [1] Event contain [0..*] EventChecklist

Final Association Relationships:
   + [1] Organizer associate [0..*] Event
   + [1] Organizer associate [0..*] Attendee
   + [1] Organizer associate [0..*] Task
   + [1] Event associate [0..*] Location
   + [1] Event associate [0..*] Attendee
   + [1] Event associate [0..*] EventChecklist
   + [1] Attendee associate [0..*] Task
   + [1] Task associate [0..*] EventChecklist
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Organizer inherit CelO
    + Attendee inherit CelO
    + EventChecklist inherit Event
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + EventStatus(Attending, MaybeAttending, NotAttending)
   + TaskStatus(NeedsToDo, Done, NotApplicable)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String)
   + Event(type: EventType, startDate: DateTime, endDate: DateTime, occasion: String, location: Location)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, status: EventStatus)
   + Task(description: String, status: TaskStatus)
   + EventChecklist(event: Event, tasks: List<Task>, attendeeTasks: List<Task>, designatedTasks: List<Task>)

Relationships:
# Final Inheritance Relationships:
   + Attendee extends CelO
   + Organizer extends CelO
# Final Association Relationships:
   + [1] Organizer associate [0..*] Event
   + [1] Organizer associate [0..*] Attendee
   + [1] Organizer associate [0..*] Task
   + [1] Event associate [0..*] Location
   + [1] Event associate [0..*] Attendee
   + [1] Event associate [0..*] EventChecklist
   + [1] Attendee associate [0..*] Task
   + [1] Task associate [0..*] EventChecklist
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [1] CelO contain [*] Location
   + [1] Event contain [*] Attendee
   + [1] Event contain [0..*] Task
   + [1] Event contain [0..*] EventChecklist
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: EventStatus (enum) - Enum Attributes: [Attending, MaybeAttending, NotAttending], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [NeedsToDo, Done, NotApplicable], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String]
Class: Event (class) - Enum Attributes: [], Class Attributes: [type:EventType,startDate:DateTime,endDate:DateTime,occasion:String,location:Location]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,status:EventStatus]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus]
Class: EventChecklist (class) - Enum Attributes: [], Class Attributes: [event:Event,tasks:List<Task>,attendeeTasks:List<Task>,designatedTasks:List<Task>]
Relationships:
 False Attendee inheritance False CelO
 False Organizer inheritance False CelO
 1 Organizer association 0..* Event
 1 Organizer association 0..* Attendee
 1 Organizer association 0..* Task
 1 Event association 0..* Location
 1 Event association 0..* Attendee
 1 Event association 0..* EventChecklist
 1 Attendee association 0..* Task
 1 Task association 0..* EventChecklist
 1 CelO association * Organizer
 1 CelO association * Event
 1 CelO association * Location
 1 Event association * Attendee
 1 Event association 0..* Task
 1 Event association 0..* EventChecklist
--------------------------------------------------------------------------------
--9/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'Task(class):description' - 'description'
-Relationships:
 ' 1 Organizer association 0..* Event' - ' 1..* Organizer association * Event'
 ' 1 Event association 0..* Location' - ' 1 Location association * Event'
 ' 1 CelO association * Event' - ' 1 CelO association * Event'
 ' 1 CelO association * Location' - ' 1 CelO association * Location'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  8                   13                  
Attributes          31                  5                   23                  
Associations        14                  4                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------10/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  address:string,  phoneNumber:string,  password:string)
    + Event( startDate:Date,  endDate:Date,  occasion:string,  location:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  attendingStatus:enum(Attending, MaybeAttending, NotAttending))
    + Task( description:string,  status:enum(ToDo, Done, NotApplicable))
    + EventChecklist()
    + Location( name:string,  address:string)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, address: String, phoneNumber: String, password: String)
   + Event(startDate: Date, endDate: Date, occasion: String, location: String)
   + Attendee(firstName: String, lastName: String, email: String, attendingStatus: AttendeeStatus)
   + Task(description: String, status: TaskStatus)
   + EventChecklist()
   + Location(name: String, address: String)

AI_answer(association):
```
Final Composition Relationships:
    + [1] Event contain [*] Task
    + [1] Event contain [1] Location
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Event
    + [1] Organizer contain [*] Attendee
    + [1] EventChecklist contain [*] Task

Final Association Relationships:
    + [0..*] Organizer associate [*] Event
    + [0..*] Organizer associate [0..*] Task
    + [0..*] Organizer associate [*] Location
    + [0..*] Event associate [*] Attendee
    + [0..*] Event associate [*] Task
    + [0..*] Event associate [*] Location
    + [0..*] Attendee associate [0..*] Task
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + Organizer inherit CelO
   + Attendee inherit CelO
   + Task inherit CelO
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + AttendeeStatus(Attending, MaybeAttending, NotAttending)
   + TaskStatus(ToBeDone, Done, NotApplicable)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, address: String, phoneNumber: String, password: String, managingEvent: boolean, attendingEvent: boolean)
   + Event(startDate: Date, endDate: Date, occasion: String)
   + Attendee(firstName: String, lastName: String, email: String, attendingStatus: AttendeeStatus)
   + Task(description: String, status: TaskStatus, designatedForAttendees: boolean)
   + EventChecklist()
   + Location(name: String, address: String)

Relationships:
# Final Inheritance Relationships:
# Final Association Relationships:
   + [0..*] Organizer associate [*] Event
   + [0..*] Organizer associate [0..*] Task
   + [0..*] Organizer associate [*] Location
   + [0..*] Event associate [*] Attendee
   + [0..*] Event associate [*] Task
   + [0..*] Event associate [*] Location
   + [0..*] Attendee associate [0..*] Task
   + [0..*] Event contain [*] Task
   + [1] Event contain [1] Location
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [1] Organizer contain [*] Attendee
   + [1] EventChecklist contain [*] Task
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: AttendeeStatus (enum) - Enum Attributes: [Attending, MaybeAttending, NotAttending], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [ToBeDone, Done, NotApplicable], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,address:String,phoneNumber:String,password:String,managingEvent:boolean,attendingEvent:boolean]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,attendingStatus:AttendeeStatus]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus,designatedForAttendees:boolean]
Class: EventChecklist (class) - Enum Attributes: [], Class Attributes: []
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Relationships:
 0..* Organizer association * Event
 0..* Organizer association 0..* Task
 0..* Organizer association * Location
 0..* Event association * Attendee
 0..* Event association * Task
 0..* Event association * Location
 0..* Attendee association 0..* Task
 0..* Event association * Task
 1 Event association 1 Location
 1 CelO association * Organizer
 1 CelO association * Event
 1 Organizer association * Attendee
 1 EventChecklist association * Task
--------------------------------------------------------------------------------
--10/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'AttendeeStatus(enum)' - 'AttendeeStatus(enum)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Attendee(class)' - 'Attendee(class)'
 'Location(class)' - 'Location(class)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Organizer(class):address' - 'address'
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'Task(class):description' - 'description'
-Relationships:
 ' 0..* Organizer association * Event' - ' 1..* Organizer association * Event'
 ' 0..* Event association * Location' - ' 1 Location association * Event'
 ' 1 CelO association * Event' - ' 1 CelO association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  9                   13                  
Attributes          28                  6                   23                  
Associations        13                  3                   18                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------11/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  address:string,  phoneNumber:string,  password:string)
    + Event( startDate:Date,  endDate:Date,  occasion:string,  location:Location)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  attendingStatus:enum(Attending, MaybeAttending, NotAttending))
    + Task( description:string,  status:enum(ToDo, Done, NotApplicable), designatedToAttendees:boolean)
    + Checklist( tasks:List<Task>)
    + InvitationStatus( totalAttendees:int,  totalReplied:int,  totalConfirmed:int,  totalMaybeConfirmed:int)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)

Classes:
   + CelO()
   + Organizer(firstName:String, lastName:String, email:String, address:String, phoneNumber:String, password:String)
   + Event(startDate:Date, endDate:Date, occasion:String, location:Location)
   + Location(name:String, address:String)
   + Attendee(firstName:String, lastName:String, email:String, attendingStatus:AttendingStatus)
   + Task(description:String, status:TaskStatus, designatedToAttendees:Boolean)
   + Checklist(tasks:List<Task>)
   + InvitationStatus(totalAttendees:int, totalReplied:int, totalConfirmed:int, totalMaybeConfirmed:int)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Event
    + [1] CelO contain [*] Location
    + [1] Event contain [*] Attendee
    + [1] Event contain [1] Checklist
    + [1] Event contain [1] InvitationStatus
    + [1] Checklist contain [*] Task

Final Association Relationships:
    + [1] Organizer associate [*] Event
    + [1] Organizer associate [*] Attendee
    + [1] Attendee associate [*] Task
```
--------------------------------------------------------------------------------
AI_answer(inheritance):

```
Final Inheritance Relationships:
   + Attendee inherit Organizer
   + Task inherit Organizer
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)

Classes:
   + CelO()
   + Organizer(firstName:String, lastName:String, email:String, address:String, phoneNumber:String, password:String)
   + Event(startDate:Date, endDate:Date, occasion:String, location:Location)
   + Location(name:String, address:String)
   + Attendee(firstName:String, lastName:String, email:String, attendingStatus:AttendingStatus)
   + Task(description:String, status:TaskStatus, designatedToAttendees:Boolean)
   + Checklist(tasks:List<Task>)
   + InvitationStatus(totalAttendees:int, totalReplied:int, totalConfirmed:int, totalMaybeConfirmed:int)

Relationships:
# Final Inheritance Relationships:
   + [1] Attendee inherit Organizer
   + [1] Task inherit Organizer
# Final Association Relationships:
   + [1] Organizer associate [*] Event
   + [1] Organizer associate [*] Attendee
   + [1] Attendee associate [*] Task
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [1] CelO contain [*] Location
   + [1] Event contain [*] Attendee
   + [1] Event contain [1] Checklist
   + [1] Event contain [1] InvitationStatus
   + [1] Checklist contain [*] Task
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,address:String,phoneNumber:String,password:String]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String,location:Location]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,attendingStatus:AttendingStatus]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus,designatedToAttendees:Boolean]
Class: Checklist (class) - Enum Attributes: [], Class Attributes: [tasks:List<Task>]
Class: InvitationStatus (class) - Enum Attributes: [], Class Attributes: [totalAttendees:int,totalReplied:int,totalConfirmed:int,totalMaybeConfirmed:int]
Relationships:
 False Attendee inheritance False Organizer
 False Task inheritance False Organizer
 1 Organizer association * Event
 1 Organizer association * Attendee
 1 Attendee association * Task
 1 CelO association * Organizer
 1 CelO association * Event
 1 CelO association * Location
 1 Event association * Attendee
 1 Event association 1 Checklist
 1 Event association 1 InvitationStatus
 1 Checklist association * Task
--------------------------------------------------------------------------------
--11/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'Checklist(class)' - 'CheckList(class)'
 'InvitationStatus(class)' - 'AttendeeStatus(enum)'
-Attributes:
 'Organizer(class):address' - 'address'
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
-Relationships:
 ' 1 Organizer association * Event' - ' 1..* Organizer association * Event'
 ' 1 CelO association * Event' - ' 1 CelO association * Event'
 ' 1 CelO association * Location' - ' 1 CelO association * Location'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             9                   8                   13                  
Attributes          26                  5                   23                  
Associations        10                  3                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------12/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  postalAddress:string,  phoneNumber:string,  password:string,  role:UserRole)
    + Event( startDate:Date,  endDate:Date,  occasion:string,  location:string)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  status:AttendanceStatus)
    + Task( description:string,  status:TaskStatus,  designatedToAttendees:boolean)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + AttendanceStatus(Attending, MaybeAttending, NotAttending)
   + TaskStatus(Todo, Done, NotApplicable)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, role: UserRole)
   + Event(startDate: Date, endDate: Date, occasion: String, location: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, status: AttendanceStatus)
   + Task(description: String, status: TaskStatus, designatedToAttendees: boolean)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Event
    + [1] CelO contain [*] Location
    + [0..*] Event contain [*] Task

Final Association Relationships:
    + [1] Organizer associate [*] Event
    + [1] Organizer associate [*] Task
    + [1] Event associate [*] Organizer
    + [1] Event associate [*] Attendee
    + [1] Attendee associate [*] Task
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Organizer inherit UserRole
    + Attendee inherit UserRole
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + AttendanceStatus(Attending, MaybeAttending, NotAttending)
   + TaskStatus(Todo, Done, NotApplicable)

Classes:
   + CelO()
   + User(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String)
   + Organizer(role: UserRole)
   + Event(startDate: Date, endDate: Date, occasion: String)
   + Location(name: String, address: String)
   + Attendee(status: AttendanceStatus)
   + Task(description: String, status: TaskStatus, designatedToAttendees: boolean)

Relationships:
# Final Inheritance Relationships:
   + Organizer extends User
   + Attendee extends User
# Final Association Relationships:
   + [1] Organizer associate [*] Event
   + [0..*] Organizer associate [*] Task
   + [1] Event associate [*] Organizer
   + [1] Event associate [*] Attendee
   + [1] Attendee associate [*] Task
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [1] CelO contain [*] Location
   + [0..*] Event contain [*] Task
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: AttendanceStatus (enum) - Enum Attributes: [Attending, MaybeAttending, NotAttending], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [Todo, Done, NotApplicable], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String]
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [role:UserRole]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [status:AttendanceStatus]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus,designatedToAttendees:boolean]
Relationships:
 False Organizer inheritance False User
 False Attendee inheritance False User
 1 Organizer association * Event
 0..* Organizer association * Task
 1 Event association * Organizer
 1 Event association * Attendee
 1 Attendee association * Task
 1 CelO association * Organizer
 1 CelO association * Event
 1 CelO association * Location
 0..* Event association * Task
--------------------------------------------------------------------------------
--12/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'AttendanceStatus(enum)' - 'Registration(class)'
 'User(class)' - 'Person(class)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'User(class):firstName' - 'firstName'
 'User(class):lastName' - 'lastName'
 'User(class):password' - 'password'
 'Task(class):description' - 'description'
-Relationships:
 ' 1 Organizer association * Event' - ' 1..* Organizer association * Event'
 ' 1 CelO association * Event' - ' 1 CelO association * Event'
 ' 1 CelO association * Location' - ' 1 CelO association * Location'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  10                  13                  
Attributes          24                  7                   23                  
Associations        9                   3                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------13/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  postalAddress:string,  phoneNumber:string,  password:string,  event:EventType)
    + Event( startDate:Date,  endDate:Date,  occasion:string,  location:Location)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  attendingStatus:Enum(Attending, MaybeAttending, NotAttending))
    + TaskList()
    + Task( description:string,  status:Enum(Todo, Done, NotApplicable), designatedToAttendee:boolean)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventTypes(BirthdayParty, GraduationParty)
Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, event: EventType)
   + Event(startDate: Date, endDate: Date, occasion: String, location: Location)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, attendingStatus: AttendeeStatus)
   + TaskList()
   + Task(description: String, status: TaskStatus, designatedToAttendee: boolean)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Attendee
    + [0..*] Event contain [*] TaskList
    + [0..*] Event contain [*] Attendee
    + [0..*] Location contain [*] Event
    + [0..*] TaskList contain [*] Task

Final Association Relationships:
    + [1] Organizer associate [0..*] Attendee
    + [0..*] Organizer associate [0..*] Event
    + [0..*] Organizer associate [0..*] TaskList
    + [0..*] Organizer associate [0..*] Task
    + [0..*] Attendee associate [0..*] Task
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + Organizer extends CelO
   + Attendee extends CelO
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventTypes(BirthdayParty, GraduationParty)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, event: EventType)
   + Event(startDate: Date, endDate: Date, occasion: String, location: Location)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, attendingStatus: AttendeeStatus)
   + TaskList()
   + Task(description: String, status: TaskStatus, designatedToAttendee: boolean)

Relationships:
# Final Association Relationships:
   + [1] Organizer associate [0..*] Attendee
   + [0..*] Organizer associate [0..*] Event
   + [0..*] Organizer associate [0..*] TaskList
   + [0..*] Organizer associate [0..*] Task
   + [0..*] Attendee associate [0..*] Task
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Attendee
   + [0..*] Event contain [*] TaskList
   + [0..*] Event contain [*] Attendee
   + [0..*] Location contain [*] Event
   + [0..*] TaskList contain [*] Task
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventTypes (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String,event:EventType]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String,location:Location]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,attendingStatus:AttendeeStatus]
Class: TaskList (class) - Enum Attributes: [], Class Attributes: []
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus,designatedToAttendee:boolean]
Relationships:
 1 Organizer association 0..* Attendee
 0..* Organizer association 0..* Event
 0..* Organizer association 0..* TaskList
 0..* Organizer association 0..* Task
 0..* Attendee association 0..* Task
 1 CelO association * Organizer
 1 CelO association * Attendee
 0..* Event association * TaskList
 0..* Event association * Attendee
 0..* Location association * Event
 0..* TaskList association * Task
--------------------------------------------------------------------------------
--13/20--Classes and attributes matching process:
-Class:
 'EventTypes(enum)' - 'EventType(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'Task(class):description' - 'description'
-Relationships:
 ' 0..* Organizer association 0..* Event' - ' 1..* Organizer association * Event'
 ' 0..* Location association * Event' - ' 1 Location association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             8                   7                   13                  
Attributes          22                  5                   23                  
Associations        11                  2                   18                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------14/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
    + EventStatus(Attending, MaybeAttending, NotAttending)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  postalAddress:string,  phoneNumber:string,  password:string)
    + Event( eventType:EventType,  startDate:DateTime,  endDate:DateTime,  occasion:string,  location:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  eventStatus:EventStatus)
    + Task( description:string,  status:string)
    + Location( name:string,  address:string)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + EventStatus(Attending, MaybeAttending, NotAttending)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String)
   + Event(eventType: EventType, startDate: DateTime, endDate: DateTime, occasion: String, location: String)
   + Attendee(firstName: String, lastName: String, email: String, eventStatus: EventStatus)
   + Task(description: String, status: String)
   + Location(name: String, address: String)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Event
    + [1] Event contain [*] Task
    + [1] Event contain [0..*] Attendee
    + [1] Event contain [*] Location

Final Association Relationships:
    + [1] Organizer associate [*] Event
    + [0..*] Event associate [*] Task
    + [0..*] Task associate [1] Organizer
    + [0..*] Task associate [0..*] Attendee
    + [1] Attendee associate [1] Event
    + [1] CelO associate [1] Event
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Organizer inherit CelO
    + Attendee inherit CelO
    + Location does not extend CelO because Location is not a kind of CelO.
    + Task does not extend CelO because Task is not a kind of CelO.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + EventStatus(Attending, MaybeAttending, NotAttending)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String)
   + Event(eventType: EventType, startDate: DateTime, endDate: DateTime, occasion: String, location: String)
   + Attendee(firstName: String, lastName: String, email: String, eventStatus: EventStatus)
   + Task(description: String, status: String)
   + Location(name: String, address: String)
   
Relationships:
# Final Inheritance Relationships:
   + [1] Organizer associate [*] Event
   + [0..*] Event associate [*] Task
   + [0..*] Task associate [1] Organizer
   + [0..*] Task associate [0..*] Attendee
   + [1] Attendee associate [1] Event
   + [1] CelO associate [1] Event
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [1] Event contain [*] Task
   + [1] Event contain [0..*] Attendee
   + [1] Event contain [*] Location
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: EventStatus (enum) - Enum Attributes: [Attending, MaybeAttending, NotAttending], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String]
Class: Event (class) - Enum Attributes: [], Class Attributes: [eventType:EventType,startDate:DateTime,endDate:DateTime,occasion:String,location:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,eventStatus:EventStatus]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:String]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Relationships:
 1 Organizer association * Event
 0..* Event association * Task
 0..* Task association 1 Organizer
 0..* Task association 0..* Attendee
 1 Attendee association 1 Event
 1 CelO association 1 Event
 1 CelO association * Organizer
 1 CelO association * Event
 1 Event association * Task
 1 Event association 0..* Attendee
 1 Event association * Location
--------------------------------------------------------------------------------
--14/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Attendee(class)' - 'Attendee(class)'
 'Location(class)' - 'Location(class)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'Task(class):description' - 'description'
-Relationships:
 ' 1 Organizer association * Event' - ' 1..* Organizer association * Event'
 ' 1 CelO association 1 Event' - ' 1 CelO association * Event'
 ' 1 Event association * Location' - ' 1 Location association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             8                   7                   13                  
Attributes          24                  5                   23                  
Associations        11                  3                   18                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------15/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  postalAddress:string,  phoneNumber:string,  password:string)
    + Event( startDate:Date,  endDate:Date,  occasion:string,  location:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  attendanceStatus:AttendanceStatus)
    + Location( name:string,  address:string)
    + Task( description:string,  status:TaskStatus,  assignedTo:Attendee)
    + TaskList()
    + EventChecklist(taskList:TaskList)
    + User( email:string,  password:string)
    + InvitationStatus( replied:boolean,  confirmed:boolean,  maybeComing:boolean)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty, Other)
   
Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String)
   + Event(startDate: Date, endDate: Date, occasion: String, location: String)
   + Attendee(firstName: String, lastName: String, email: String, attendanceStatus: AttendanceStatus)
   + Location(name: String, address: String)
   + Task(description: String, status: TaskStatus, assignedTo: Attendee)
   + TaskList()
   + EventChecklist(taskList: TaskList)
   + User(email: String, password: String)
   + InvitationStatus(replied: boolean, confirmed: boolean, maybeComing: boolean)

AI_answer(association):

```
Final Composition Relationships:
    + [1] CelO contain [*] Event
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Attendee
    + [1] CelO contain [*] Location
    + [1] CelO contain [*] TaskList
    + [1] Organizer contain [*] Event
    + [1] Event contain [*] Attendee
    + [1] Event contain [0..*] TaskList
    + [1] Event contain [0..*] Location
    + [1] TaskList contain [*] Task
    + [1] Attendee contain [*] Task

Final Association Relationships:
    + [1] Organizer associate [*] TaskList
    + [1] Organizer associate [*] Event
    + [1] Organizer associate [*] Location
    + [1] Organizer associate [*] Attendee
    + [1] Organizer associate [*] InvitationStatus
    + [1] Organizer associate [*] EventChecklist
    + [1] Organizer associate [*] Task
    + [1] Event associate [*] TaskList
    + [1] Event associate [*] Attendee
    + [1] Event associate [*] Location
    + [1] Event associate [*] InvitationStatus
    + [1] Event associate [*] EventChecklist
    + [1] Location associate [*] Event
    + [1] Task associate [*] Event
    + [1] Task associate [*] Attendee
    + [1] Task associate [*] TaskList
    + [1] Attendee associate [*] Task
    + [1] Attendee associate [*] InvitationStatus
    + [1] InvitationStatus associate [*] Event
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + Organizer inherit User
   + Attendee inherit User
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty, Other)

Classes:
   + CelO()
   + User(email: String, password: String)
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String)
   + Event(startDate: Date, endDate: Date, occasion: String, location: String)
   + Attendee(firstName: String, lastName: String, email: String, attendanceStatus: AttendanceStatus)
   + Location(name: String, address: String)
   + Task(description: String, status: TaskStatus, assignedTo: Attendee)
   + TaskList()
   + EventChecklist(taskList: TaskList)
   + InvitationStatus(replied: boolean, confirmed: boolean, maybeComing: boolean)

Relationships:
# Final Association Relationships:
   + [*] Organizer associate [*] TaskList
   + [*] Organizer associate [*] Event
   + [*] Organizer associate [*] Location
   + [*] Organizer associate [*] Attendee
   + [*] Organizer associate [*] InvitationStatus
   + [*] Organizer associate [*] EventChecklist
   + [*] Organizer associate [*] Task
   + [*] Event associate [*] TaskList
   + [*] Event associate [*] Attendee
   + [*] Event associate [*] Location
   + [*] Event associate [*] InvitationStatus
   + [*] Event associate [*] EventChecklist
   + [*] Location associate [*] Event
   + [*] Task associate [*] Event
   + [*] Task associate [*] Attendee
   + [*] Task associate [*] TaskList
   + [*] Attendee associate [*] Task
   + [*] Attendee associate [*] InvitationStatus
   + [*] InvitationStatus associate [*] Event
   + [*] CelO contain [*] Event
   + [*] CelO contain [*] Organizer
   + [*] CelO contain [*] Attendee
   + [*] CelO contain [*] Location
   + [*] CelO contain [*] TaskList
   + [*] Organizer contain [*] Event
   + [*] Event contain [*] Attendee
   + [0..*] Event contain [*] TaskList
   + [0..*] Event contain [*] Location
   + [*] TaskList contain [*] Task
   + [*] Attendee contain [*] Task
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty, Other], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [email:String,password:String]
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String,location:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,attendanceStatus:AttendanceStatus]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus,assignedTo:Attendee]
Class: TaskList (class) - Enum Attributes: [], Class Attributes: []
Class: EventChecklist (class) - Enum Attributes: [], Class Attributes: [taskList:TaskList]
Class: InvitationStatus (class) - Enum Attributes: [], Class Attributes: [replied:boolean,confirmed:boolean,maybeComing:boolean]
Relationships:
 * Organizer association * TaskList
 * Organizer association * Event
 * Organizer association * Location
 * Organizer association * Attendee
 * Organizer association * InvitationStatus
 * Organizer association * EventChecklist
 * Organizer association * Task
 * Event association * TaskList
 * Event association * Attendee
 * Event association * Location
 * Event association * InvitationStatus
 * Event association * EventChecklist
 * Location association * Event
 * Task association * Event
 * Task association * Attendee
 * Task association * TaskList
 * Attendee association * Task
 * Attendee association * InvitationStatus
 * InvitationStatus association * Event
 * CelO association * Event
 * CelO association * Organizer
 * CelO association * Attendee
 * CelO association * Location
 * CelO association * TaskList
 * Organizer association * Event
 * Event association * Attendee
 0..* Event association * TaskList
 0..* Event association * Location
 * TaskList association * Task
 * Attendee association * Task
--------------------------------------------------------------------------------
--15/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Attendee(class)' - 'Attendee(class)'
 'Location(class)' - 'Location(class)'
 'User(class)' - 'Person(class)'
 'Task(class)' - 'CheckList(class)'
 'InvitationStatus(class)' - 'AttendeeStatus(enum)'
-Attributes:
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'User(class):password' - 'password'
 'Task(class):description' - 'description'
-Relationships:
 ' * Organizer association * Event' - ' 1..* Organizer association * Event'
 ' * Event association * Location' - ' 1 Location association * Event'
 ' * CelO association * Event' - ' 1 CelO association * Event'
 ' * CelO association * Location' - ' 1 CelO association * Location'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  9                   13                  
Attributes          28                  6                   23                  
Associations        30                  4                   18                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------16/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  postalAddress:string,  phoneNumber:string,  password:string,  isAttending:boolean)
    + Event( startDate:Date,  endDate:Date,  occasion:string,  location:string)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  status:AttendanceStatus)
    + Task( description:string,  status:TaskStatus,  applicableForAttendees:boolean)
    + EventChecklist()
    + TaskAssignment()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, isAttending: boolean)
   + Event(startDate: Date, endDate: Date, occasion: String, location: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, status: AttendanceStatus)
   + Task(description: String, status: TaskStatus, applicableForAttendees: boolean)
   + EventChecklist()
   + TaskAssignment()

AI_answer(association):

```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Event
    + [1] CelO contain [*] Location
    + [1] Organizer contain [*] Attendee
    + [1] Event contain [*] EventChecklist
    + [1] EventChecklist contain [*] Task
    + [1] EventChecklist contain [*] TaskAssignment

Final Association Relationships:
    + [0..*] Organizer associate [0..*] Event
    + [0..*] Organizer associate [0..*] Attendee
    + [0..*] Event associate [0..*] Attendee
    + [1] Event associate [0..*] Location
    + [0..*] Event associate [0..*] EventChecklist
    + [0..*] EventChecklist associate [0..*] Task
    + [0..*] Task associate [0..*] Attendee
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + Organizer inherit CelO
   + Attendee inherit CelO
   + Task inherit CelO
   + EventChecklist inherit CelO
   + TaskAssignment inherit CelO
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(NeedsToBeDone, HasBeenDone, NotApplicable)
   + AttendanceStatus(WillAttend, MaybeAttend, CannotAttend)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String, isAttending: boolean)
   + Event(startDate: Date, endDate: Date, occasion: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, status: AttendanceStatus)
   + Task(description: String, status: TaskStatus, applicableForAttendees: boolean)
   + EventChecklist()
   + TaskAssignment()

Relationships:
# Final Association Relationships:
   + [0..*] Organizer associate [0..*] Event
   + [0..*] Organizer associate [0..*] Attendee
   + [0..*] Event associate [0..*] Attendee
   + [1] Event associate [0..*] Location
   + [0..*] Event associate [0..*] EventChecklist
   + [0..*] EventChecklist associate [0..*] Task
   + [0..*] Task associate [0..*] Attendee
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [1] CelO contain [*] Location
   + [1] Organizer contain [*] Attendee
   + [1] Event contain [*] EventChecklist
   + [1] EventChecklist contain [*] Task
   + [1] EventChecklist contain [*] TaskAssignment
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [NeedsToBeDone, HasBeenDone, NotApplicable], Class Attributes: []
Class: AttendanceStatus (enum) - Enum Attributes: [WillAttend, MaybeAttend, CannotAttend], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String,isAttending:boolean]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,status:AttendanceStatus]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus,applicableForAttendees:boolean]
Class: EventChecklist (class) - Enum Attributes: [], Class Attributes: []
Class: TaskAssignment (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 0..* Organizer association 0..* Event
 0..* Organizer association 0..* Attendee
 0..* Event association 0..* Attendee
 1 Event association 0..* Location
 0..* Event association 0..* EventChecklist
 0..* EventChecklist association 0..* Task
 0..* Task association 0..* Attendee
 1 CelO association * Organizer
 1 CelO association * Event
 1 CelO association * Location
 1 Organizer association * Attendee
 1 Event association * EventChecklist
 1 EventChecklist association * Task
 1 EventChecklist association * TaskAssignment
--------------------------------------------------------------------------------
--16/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'AttendanceStatus(enum)' - 'Registration(class)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'Task(class):description' - 'description'
-Relationships:
 ' 0..* Organizer association 0..* Event' - ' 1..* Organizer association * Event'
 ' 1 Event association 0..* Location' - ' 1 Location association * Event'
 ' 1 CelO association * Event' - ' 1 CelO association * Event'
 ' 1 CelO association * Location' - ' 1 CelO association * Location'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  9                   13                  
Attributes          27                  5                   23                  
Associations        14                  4                   18                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------17/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  address:string,  phoneNumber:string,  password:string,  isAttending:boolean)
    + Event( startDate:DateTime,  endDate:DateTime,  occasion:string,  location:string)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  isAttending:boolean)
    + Task( description:string,  status:enum{ToDo, Done, NotApplicable},  designatedToAttendee:boolean)
    + EventSpecificChecklist()
    + InvitationStatus( totalAttendees:int,  attendeesReplied:int,  attendeesConfirmed:int,  attendeesMaybeAttending:int)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(ToDo, Done, NotApplicable)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, address: String, phoneNumber: String, password: String, isAttending: boolean)
   + Event(startDate: DateTime, endDate: DateTime, occasion: String, location: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, isAttending: boolean)
   + EventSpecificChecklist()
   + InvitationStatus(totalAttendees: int, attendeesReplied: int, attendeesConfirmed: int, attendeesMaybeAttending: int)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Event
    + [0..*] Event contain [1] Location
    + [1] Event contain [*] Organizer
    + [0..*] Event contain [0..*] Attendee
    + [1] Event contain [1] EventSpecificChecklist
    + [1] Event contain [1] InvitationStatus

Final Association Relationships:
    + [1] Organizer associate [0..*] Attendee
    + [1] Attendee associate [0..*] Task
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Organizer inherit CelO
    + Attendee inherit CelO
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(ToDo, Done, NotApplicable)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, address: String, phoneNumber: String, password: String, isAttending: boolean)
   + Event(startDate: DateTime, endDate: DateTime, occasion: String, location: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, isAttending: boolean)
   + EventSpecificChecklist()
   + InvitationStatus(totalAttendees: int, attendeesReplied: int, attendeesConfirmed: int, attendeesMaybeAttending: int)

Relationships:
# Final Inheritance Relationships:
   + Organizer extends CelO
   + Attendee extends CelO

# Final Association Relationships:
   + [1] Organizer associate [0..*] Attendee
   + [1] Attendee associate [0..*] Task
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [0..*] Event contain [1] Location
   + [1] Event contain [*] Organizer
   + [0..*] Event contain [0..*] Attendee
   + [1] Event contain [1] EventSpecificChecklist
   + [1] Event contain [1] InvitationStatus
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [ToDo, Done, NotApplicable], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,address:String,phoneNumber:String,password:String,isAttending:boolean]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:DateTime,endDate:DateTime,occasion:String,location:String]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,isAttending:boolean]
Class: EventSpecificChecklist (class) - Enum Attributes: [], Class Attributes: []
Class: InvitationStatus (class) - Enum Attributes: [], Class Attributes: [totalAttendees:int,attendeesReplied:int,attendeesConfirmed:int,attendeesMaybeAttending:int]
Relationships:
 False Organizer inheritance False CelO
 False Attendee inheritance False CelO
 1 Organizer association 0..* Attendee
 1 Attendee association 0..* Task
 1 CelO association * Organizer
 1 CelO association * Event
 0..* Event association 1 Location
 1 Event association * Organizer
 0..* Event association 0..* Attendee
 1 Event association 1 EventSpecificChecklist
 1 Event association 1 InvitationStatus
--------------------------------------------------------------------------------
--17/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'InvitationStatus(class)' - 'AttendeeStatus(enum)'
-Attributes:
 'Organizer(class):address' - 'address'
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
-Relationships:
 ' 1 CelO association * Event' - ' 1 CelO association * Event'
 ' 0..* Event association 1 Location' - ' 1 Location association * Event'
 ' 1 Event association * Organizer' - ' 1..* Organizer association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             9                   8                   13                  
Attributes          26                  5                   23                  
Associations        8                   3                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
---------------------18/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  postalAddress:string,  phoneNumber:string,  password:string)
    + Event( startDate:Date,  endDate:Date,  occasion:string,  location:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  attendanceStatus:enum(Attending, MaybeAttending, NotAttending))
    + Task( description:string,  status:enum(ToDo, Done, NotApplicable), designatedToAttendee:boolean)
    + Checklist()
    + Location( name:string,  address:string)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String)
   + Event(startDate: Date, endDate: Date, occasion: String, location: String)
   + Attendee(firstName: String, lastName: String, email: String, attendanceStatus: enum(Attending, MaybeAttending, NotAttending))
   + Task(description: String, status: enum(ToDo, Done, NotApplicable), designatedToAttendee: boolean)
   + Checklist()
   + Location(name: String, address: String)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Event
    + [1] Event contain [*] Task
    + [1] Event contain [*] Attendee
    + [1] Event contain [0..*] Location
    + [1] Event contain [*] Checklist

Final Association Relationships:
    + [1] Organizer associate [*] Event
    + [0..*] Organizer associate [*] Attendee
    + [0..*] Attendee associate [*] Event
    + [1] Event associate [*] Task
    + [1] Task associate [0..*] Attendee
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Intermediate reasoning results:
   + Attendee inherit Organizer because an attendee is a special type of organizer in the context of the CelO application.
   + Task inherit Checklist because a task is a part of a checklist and cannot exist independently.
   + Location does not extend Organizer because a location is not a type of organizer, delete this inheritance.

Final Inheritance Relationships:
   + Attendee extends Organizer
   + Task extends Checklist
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + AttendanceStatus(Attending, MaybeAttending, NotAttending)
   + TaskStatus(ToDo, Done, NotApplicable)

Classes:
   + CelO()
   + Person(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String)
   + Organizer extends Person
   + Attendee extends Person
   + Event(startDate: Date, endDate: Date, occasion: String)
   + Task(description: String, status: TaskStatus, designatedToAttendee: boolean)
   + Checklist()
   + Location(name: String, address: String)

Relationships:
# Final Inheritance Relationships:
   + Attendee extends Person
   + Organizer extends Person
# Final Association Relationships:
   + [1] Organizer associate [*] Event
   + [0..*] Organizer associate [*] Attendee
   + [0..*] Attendee associate [*] Event
   + [1] Event associate [*] Task
   + [1] Task associate [0..*] Attendee
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [1] Event contain [*] Task
   + [1] Event contain [*] Attendee
   + [1] Event contain [0..*] Location
   + [1] Event contain [*] Checklist
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: AttendanceStatus (enum) - Enum Attributes: [Attending, MaybeAttending, NotAttending], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [ToDo, Done, NotApplicable], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Person (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String]
Class: Organizer (class) - Enum Attributes: [], Class Attributes: []
Class: Attendee (class) - Enum Attributes: [], Class Attributes: []
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:Date,endDate:Date,occasion:String]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus,designatedToAttendee:boolean]
Class: Checklist (class) - Enum Attributes: [], Class Attributes: []
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Relationships:
 False Attendee inheritance False Person
 False Organizer inheritance False Person
 1 Organizer association * Event
 0..* Organizer association * Attendee
 0..* Attendee association * Event
 1 Event association * Task
 1 Task association 0..* Attendee
 1 CelO association * Organizer
 1 CelO association * Event
 1 Event association * Task
 1 Event association * Attendee
 1 Event association 0..* Location
 1 Event association * Checklist
--------------------------------------------------------------------------------
--18/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Person(class)' - 'Person(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Attendee(class)' - 'Attendee(class)'
 'Event(class)' - 'Event(class)'
 'Checklist(class)' - 'CheckList(class)'
 'Location(class)' - 'Location(class)'
 'AttendanceStatus(enum)' - 'Registration(class)'
-Attributes:
 'Person(class):firstName' - 'firstName'
 'Person(class):lastName' - 'lastName'
 'Person(class):password' - 'password'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
-Relationships:
 ' 1 Organizer association * Event' - ' 1..* Organizer association * Event'
 ' 1 CelO association * Event' - ' 1 CelO association * Event'
 ' 1 Event association 0..* Location' - ' 1 Location association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  10                  13                  
Attributes          22                  6                   23                  
Associations        11                  3                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------19/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  postalAddress:string,  phoneNumber:string,  password:string)
    + Event( startDate:DateTime,  endDate:DateTime,  occasion:string,  location:string)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  attendanceStatus:Enum(Attending, MaybeAttending, NotAttending))
    + Task( description:string,  status:Enum(Todo, Done, NotApplicable),  designatedToAttendee:boolean)
    + TaskList()
    + EventSpecificChecklist()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(Todo, Done, NotApplicable)
   + AttendanceStatus(Attending, MaybeAttending, NotAttending)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String)
   + Event(startDate: DateTime, endDate: DateTime, occasion: String, location: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, attendanceStatus: AttendanceStatus)
   + Task(description: String, status: TaskStatus, designatedToAttendee: boolean)
   + TaskList()
   + EventSpecificChecklist()

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Event
    + [1] CelO contain [*] Location
    + [1] Event contain [*] Attendee
    + [1] Event contain [*] TaskList
    + [1] Event contain [*] EventSpecificChecklist

Final Association Relationships:
    + [1] Organizer associate [0..*] Attendee
    + [1] Organizer associate [*] Event
    + [1] Organizer associate [*] TaskList
    + [0..1] Organizer associate [*] Task
    + [1] Event associate [0..*] Attendee
    + [1] Event associate [0..*] Task
    + [1] Event associate [*] Location
    + [0..1] Attendee associate [0..1] Task
    + [1] TaskList associate [1] Task
    + [1] EventSpecificChecklist associate [1] Task
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Intermidiate reasoning results:
   + Organizer inherit CelO because an Organizer is a kind of CelO.
   + Event inherit CelO because an Event is a kind of CelO.
   + Location does not extend CelO because a Location is not a kind of CelO.
   + Attendee does not extend CelO because an Attendee is not a kind of CelO.
   + Task does not extend CelO because a Task is not a kind of CelO.
   + TaskList does not extend CelO because a TaskList is not a kind of CelO.
   + EventSpecificChecklist does not extend CelO because an EventSpecificChecklist is not a kind of CelO.
```

```
Final Inheritance Relationships:
   + Organizer extends CelO
   + Event extends CelO
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + TaskStatus(Todo, Done, NotApplicable)
   + AttendanceStatus(Attending, MaybeAttending, NotAttending)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, postalAddress: String, phoneNumber: String, password: String)
   + Event(startDate: DateTime, endDate: DateTime, occasion: String, location: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, attendanceStatus: AttendanceStatus)
   + Task(description: String, status: TaskStatus, designatedToAttendee: boolean)
   + TaskList()
   + EventSpecificChecklist()

Relationships:
# Final Association Relationships:
   + [1] Organizer associate [0..*] Attendee
   + [1] Organizer associate [*] Event
   + [1] Organizer associate [*] TaskList
   + [0..1] Organizer associate [*] Task
   + [1] Event associate [0..*] Attendee
   + [1] Event associate [0..*] Task
   + [1] Event associate [*] Location
   + [0..1] Attendee associate [0..1] Task
   + [1] TaskList associate [1] Task
   + [1] EventSpecificChecklist associate [1] Task
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [1] CelO contain [*] Location
   + [1] Event contain [*] Attendee
   + [1] Event contain [*] TaskList
   + [1] Event contain [*] EventSpecificChecklist
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: TaskStatus (enum) - Enum Attributes: [Todo, Done, NotApplicable], Class Attributes: []
Class: AttendanceStatus (enum) - Enum Attributes: [Attending, MaybeAttending, NotAttending], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,postalAddress:String,phoneNumber:String,password:String]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:DateTime,endDate:DateTime,occasion:String,location:String]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,attendanceStatus:AttendanceStatus]
Class: Task (class) - Enum Attributes: [], Class Attributes: [description:String,status:TaskStatus,designatedToAttendee:boolean]
Class: TaskList (class) - Enum Attributes: [], Class Attributes: []
Class: EventSpecificChecklist (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 1 Organizer association 0..* Attendee
 1 Organizer association * Event
 1 Organizer association * TaskList
 0..1 Organizer association * Task
 1 Event association 0..* Attendee
 1 Event association 0..* Task
 1 Event association * Location
 0..1 Attendee association 0..1 Task
 1 TaskList association 1 Task
 1 EventSpecificChecklist association 1 Task
 1 CelO association * Organizer
 1 CelO association * Event
 1 CelO association * Location
 1 Event association * Attendee
 1 Event association * TaskList
 1 Event association * EventSpecificChecklist
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Class:
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'AttendanceStatus(enum)' - 'Registration(class)'
 'Task(class)' - 'CheckList(class)'
-Attributes:
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
 'Task(class):description' - 'description'
-Relationships:
 ' 1 Organizer association * Event' - ' 1..* Organizer association * Event'
 ' 1 Event association * Location' - ' 1 Location association * Event'
 ' 1 CelO association * Event' - ' 1 CelO association * Event'
 ' 1 CelO association * Location' - ' 1 CelO association * Location'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  8                   13                  
Attributes          25                  5                   23                  
Associations        16                  4                   18                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------20/20------Celebrations Organization System (CelO):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + EventType(BirthdayParty, GraduationParty)
# Classes (attributes):
    + CelO()
    + Organizer( firstName:string,  lastName:string,  email:string,  address:string,  phoneNumber:string,  password:string,  isAttending:boolean)
    + Event( startDate:DateTime,  endDate:DateTime,  occasion:string,  location:string)
    + Location( name:string,  address:string)
    + Attendee( firstName:string,  lastName:string,  email:string,  isAttending:boolean)
    + Task( description:string,  status:enum{ToDo, Done, NotApplicable},  designatedToAttendee:boolean)
    + EventSpecificChecklist()
    + InvitationStatus( totalAttendees:int,  attendeesReplied:int,  attendeesConfirmed:int,  attendeesMaybeAttending:int)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(ToDo, Done, NotApplicable)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, address: String, phoneNumber: String, password: String, isAttending: boolean)
   + Event(startDate: DateTime, endDate: DateTime, occasion: String, location: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, isAttending: boolean)
   + EventSpecificChecklist()
   + InvitationStatus(totalAttendees: int, attendeesReplied: int, attendeesConfirmed: int, attendeesMaybeAttending: int)

AI_answer(association):
```
Final Composition Relationships:
    + [1] CelO contain [*] Organizer
    + [1] CelO contain [*] Event
    + [0..*] Event contain [1] Location
    + [1] Event contain [*] Organizer
    + [0..*] Event contain [0..*] Attendee
    + [1] Event contain [1] EventSpecificChecklist
    + [1] Event contain [1] InvitationStatus

Final Association Relationships:
    + [1] Organizer associate [0..*] Attendee
    + [1] Attendee associate [0..*] Task
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Organizer inherit CelO
    + Attendee inherit CelO
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + EventType(BirthdayParty, GraduationParty)
   + TaskStatus(ToDo, Done, NotApplicable)

Classes:
   + CelO()
   + Organizer(firstName: String, lastName: String, email: String, address: String, phoneNumber: String, password: String, isAttending: boolean)
   + Event(startDate: DateTime, endDate: DateTime, occasion: String, location: String)
   + Location(name: String, address: String)
   + Attendee(firstName: String, lastName: String, email: String, isAttending: boolean)
   + EventSpecificChecklist()
   + InvitationStatus(totalAttendees: int, attendeesReplied: int, attendeesConfirmed: int, attendeesMaybeAttending: int)

Relationships:
# Final Inheritance Relationships:
   + Organizer extends CelO
   + Attendee extends CelO

# Final Association Relationships:
   + [1] Organizer associate [0..*] Attendee
   + [1] Attendee associate [0..*] Task
   + [1] CelO contain [*] Organizer
   + [1] CelO contain [*] Event
   + [0..*] Event contain [1] Location
   + [1] Event contain [*] Organizer
   + [0..*] Event contain [0..*] Attendee
   + [1] Event contain [1] EventSpecificChecklist
   + [1] Event contain [1] InvitationStatus
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: EventType (enum) - Enum Attributes: [BirthdayParty, GraduationParty], Class Attributes: []
Class: TaskStatus (enum) - Enum Attributes: [ToDo, Done, NotApplicable], Class Attributes: []
Class: CelO (class) - Enum Attributes: [], Class Attributes: []
Class: Organizer (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,address:String,phoneNumber:String,password:String,isAttending:boolean]
Class: Event (class) - Enum Attributes: [], Class Attributes: [startDate:DateTime,endDate:DateTime,occasion:String,location:String]
Class: Location (class) - Enum Attributes: [], Class Attributes: [name:String,address:String]
Class: Attendee (class) - Enum Attributes: [], Class Attributes: [firstName:String,lastName:String,email:String,isAttending:boolean]
Class: EventSpecificChecklist (class) - Enum Attributes: [], Class Attributes: []
Class: InvitationStatus (class) - Enum Attributes: [], Class Attributes: [totalAttendees:int,attendeesReplied:int,attendeesConfirmed:int,attendeesMaybeAttending:int]
Relationships:
 False Organizer inheritance False CelO
 False Attendee inheritance False CelO
 1 Organizer association 0..* Attendee
 1 Attendee association 0..* Task
 1 CelO association * Organizer
 1 CelO association * Event
 0..* Event association 1 Location
 1 Event association * Organizer
 0..* Event association 0..* Attendee
 1 Event association 1 EventSpecificChecklist
 1 Event association 1 InvitationStatus
--------------------------------------------------------------------------------
--20/20--Classes and attributes matching process:
-Class:
 'EventType(enum)' - 'EventType(class)'
 'TaskStatus(enum)' - 'TaskStatus(class)'
 'CelO(class)' - 'CelO(class)'
 'Organizer(class)' - 'Organizer(class)'
 'Event(class)' - 'Event(class)'
 'Location(class)' - 'Location(class)'
 'Attendee(class)' - 'Attendee(class)'
 'InvitationStatus(class)' - 'AttendeeStatus(enum)'
-Attributes:
 'Organizer(class):address' - 'address'
 'Organizer(class):phoneNumber' - 'phoneNumber'
 'Event(class):occasion' - 'occasion'
 'Location(class):name' - 'name'
 'Location(class):address' - 'address'
-Relationships:
 ' 1 CelO association * Event' - ' 1 CelO association * Event'
 ' 0..* Event association 1 Location' - ' 1 Location association * Event'
 ' 1 Event association * Organizer' - ' 1..* Organizer association * Event'
--------------------------------------------------------------------------------
Celebrations Organization System (CelO), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             9                   8                   13                  
Attributes          26                  5                   23                  
Associations        8                   3                   18                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------