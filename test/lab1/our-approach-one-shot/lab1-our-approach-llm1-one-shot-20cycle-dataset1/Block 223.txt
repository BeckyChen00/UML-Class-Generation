------------------------------------------------------------
---------------------1/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + BlockColor(Red, Blue, Green)
# Classes (attributes):
    + User( username:string,  password:string)
    + Game( name:string,  hallOfFame:List<Player>)
    + Block( color:BlockColor,  points:int)
    + Level( levelNumber:int,  arrangement:List<Block>,  random:bool)
    + Admin( mode:AdminMode)
    + Player( lives:int,  score:int)
    + Ball( speed:int,  direction:Direction)
    + Paddle( length:int)
    + Direction(Up, Down, Left, Right)
    + AdminMode(Design, Play)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + User(username: String, password: String)
   + Game(name: String, hallOfFame: List<Player>)
   + Block(color: BlockColor, points: int)
   + Level(levelNumber: int, arrangement: List<Block>, random: boolean)
   + Admin(mode: AdminMode)
   + Player(lives: int, score: int)
   + Ball(speed: int, direction: Direction)
   + Paddle(length: int)
   + Direction(Up, Down, Left, Right)
   + AdminMode(Design, Play)

AI_answer(association):
```
Final Composition Relationships:
    + [1] Game contain [*] Level
    + [1] Level contain [*] Block
    + [1] Player contain [1] Ball
    + [1] Player contain [1] Paddle

Final Association Relationships:
    + [1] User associate [1] Player
    + [1] User associate [1] Admin
    + [1] Admin associate [1] Game
    + [0..1] Game associate [*] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player inherit User
    + Admin inherit User
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + User(username: String, password: String)
   + Game(name: String, hallOfFame: List<Player>)
   + Block(color: BlockColor, points: int)
   + Level(levelNumber: int, arrangement: List<Block>, random: boolean)
   + Admin(mode: AdminMode)
   + Player(lives: int, score: int)
   + Ball(speed: int, direction: Direction)
   + Paddle(length: int)
   + Direction(Up, Down, Left, Right)
   + AdminMode(Design, Play)

Relationships:
# Final Inheritance Relationships:
   + Player extends User
   + Admin extends User
# Final Association Relationships:
   + [1] User associate [1] Player
   + [1] User associate [1] Admin
   + [1] Admin associate [1] Game
   + [0..1] Game associate [1] Player
   + [1] Game contain [1..99] Level
   + [1] Level contain [1..*] Block
   + [1] Player contain [1] Ball
   + [1] Player contain [1] Paddle
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: BlockColor (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,hallOfFame:List<Player>]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:BlockColor,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [levelNumber:int,arrangement:List<Block>,random:boolean]
Class: Admin (class) - Enum Attributes: [], Class Attributes: [mode:AdminMode]
Class: Player (class) - Enum Attributes: [], Class Attributes: [lives:int,score:int]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:Direction]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int]
Class: Direction (class) - Enum Attributes: [], Class Attributes: [Up:,Down:,Left:,Right:]
Class: AdminMode (class) - Enum Attributes: [], Class Attributes: [Design:,Play:]
Relationships:
 False Player inheritance False User
 False Admin inheritance False User
 1 User association 1 Player
 1 User association 1 Admin
 1 Admin association 1 Game
 0..1 Game association 1 Player
 1 Game association 1..99 Level
 1 Level association 1..* Block
 1 Player association 1 Ball
 1 Player association 1 Paddle
--------------------------------------------------------------------------------
--1/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'Direction(class)' - 'PlayedBlockAssignment(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
-Relationships:
 ' 1 Game association 1..99 Level' - ' 1 Game association 1..* Level'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  7                   13                  
Attributes          24                  4                   30                  
Associations        8                   1                   18                  
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------2/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + Color(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string)
    + Admin()
    + Game( name:string,  hallOfFame:array)
    + Block( color:Color,  points:int)
    + Level( number:int,  arrangement:array,  random:boolean)
    + PlayArea()
    + Ball( speed:int,  direction:string)
    + Paddle( length:int)
    + Player( lives:int,  totalScore:int)
    + Pause()
    + HighScore()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + Color(Red, Blue, Green)
   + ItemCategory(BabyClothing, Fridge)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Admin()
   + Game(name: String, hallOfFame: String[])
   + Block(color: Color, points: int)
   + Level(number: int, arrangement: String[], random: boolean)
   + PlayArea()
   + Ball(speed: int, direction: String)
   + Paddle(length: int)
   + Player(lives: int, totalScore: int)
   + Pause()
   + HighScore()

AI_answer(association):
```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] User
    + [1] DestroyBlockApplication contain [1] Admin
    + [1] DestroyBlockApplication contain [1] Game
    + [1] Game contain [*] Block
    + [1] Game contain [*] Level
    + [1] PlayArea contain [1] Ball
    + [1] PlayArea contain [1] Paddle
    + [1] Player contain [1] Pause
    + [1] Game contain [*] HighScore

Final Association Relationships:
    + [1] User associate [1] Player
    + [1] User associate [1] Admin
    + [1] Admin associate [1] Game
    + [1] Game associate [1] Level
    + [1] Game associate [1] PlayArea
    + [1] Game associate [1] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player inherit User
    + Admin inherit User
    + Block inherit Object
    + Level inherit Object
    + Ball inherit Object
    + Paddle inherit Object
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
Since subclasses are generated for the inheritance hierarchy (User, Admin, Player), there is no need to generate an enum for the same hierarchy. Let's revise the <Domain Model> based on the given <Description>.

``` 
Enumerations:
   + Color(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Admin()
   + Game(name: String, hallOfFame: String[])
   + Block(color: Color, points: int)
   + Level(number: int, arrangement: String[], random: boolean)
   + PlayArea()
   + Ball(speed: int, direction: String)
   + Paddle(length: int)
   + Pause()
   + HighScore()

Relationships:
# Final Inheritance Relationships:
   + Player inherit User
   + Admin inherit User
# Final Association Relationships:
   + [1] User associate [1] Player
   + [1] User associate [1] Admin
   + [1] Admin associate [1] Game
   + [1] Game associate [1] Level
   + [1] Game associate [1] PlayArea
   + [1] Game associate [1] Player
   + [1] DestroyBlockApplication contain [1] User
   + [1] DestroyBlockApplication contain [1] Admin
   + [1] DestroyBlockApplication contain [1] Game
   + [1] Game contain [*] Block
   + [1] Game contain [*] Level
   + [1] PlayArea contain [1] Ball
   + [1] PlayArea contain [1] Paddle
   + [1] Player contain [1] Pause
   + [1] Game contain [*] HighScore
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: Color (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Class: Admin (class) - Enum Attributes: [], Class Attributes: []
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,hallOfFame:String[]]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:Color,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:String[],random:boolean]
Class: PlayArea (class) - Enum Attributes: [], Class Attributes: []
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:String]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int]
Class: Pause (class) - Enum Attributes: [], Class Attributes: []
Class: HighScore (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False Player inheritance False User
 False Admin inheritance False User
 1 User association 1 Player
 1 User association 1 Admin
 1 Admin association 1 Game
 1 Game association 1 Level
 1 Game association 1 PlayArea
 1 Game association 1 Player
 1 DestroyBlockApplication association 1 User
 1 DestroyBlockApplication association 1 Admin
 1 DestroyBlockApplication association 1 Game
 1 Game association * Block
 1 Game association * Level
 1 PlayArea association 1 Ball
 1 PlayArea association 1 Paddle
 1 Player association 1 Pause
 1 Game association * HighScore
--------------------------------------------------------------------------------
--2/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'HighScore(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
-Relationships:
 ' 1 Game association 1 Level' - ' 1 Game association 1..* Level'
 ' 1 DestroyBlockApplication association 1 User' - ' 1 DestroyBlock association * User'
 ' 1 DestroyBlockApplication association 1 Game' - ' 1 DestroyBlock association * Game'
 ' 1 Game association * Block' - ' 1 Game association * Block'
 ' 1 Game association * HighScore' - ' * HallOfFameEntry association 1 Game'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             12                  8                   13                  
Attributes          15                  4                   30                  
Associations        12                  5                   18                  
Inheritances        1                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------3/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + BlockColor(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string)
    + Admin()
    + Game( name:string,  hallOfFame:HallOfFame)
    + Block( color:BlockColor,  points:int)
    + Level( number:int,  arrangement:GridSystem,  random:boolean)
    + GridSystem()
    + PlayArea()
    + Ball( speed:int,  direction:string)
    + Paddle( length:int)
    + Player( lives:int,  score:int)
    + HallOfFame()
    + PauseGame()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Admin()
   + Game(name: String, hallOfFame: HallOfFame)
   + Block(color: BlockColor, points: int)
   + Level(number: int, arrangement: GridSystem, random: boolean)
   + GridSystem()
   + PlayArea()
   + Ball(speed: int, direction: String)
   + Paddle(length: int)
   + Player(lives: int, score: int)
   + HallOfFame()
   + PauseGame()

AI_answer(association):
```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] User
    + [1] DestroyBlockApplication contain [1] Game
    + [0..1] Game contain [*] Block
    + [0..1] Game contain [*] Level
    + [0..1] Level contain [*] Block
    + [1] Level contain [1] GridSystem
    + [1] PlayArea contain [1] Ball
    + [1] PlayArea contain [1] Paddle
    + [1] Player contain [1] Ball
    + [1] Player contain [1] Paddle
    + [1] Player contain [1] PauseGame

Final Association Relationships:
    + [1] User associate [1] Player
    + [0..1] User associate [1] Admin
    + [1] Admin associate [1] Game
    + [1] Game associate [1] HallOfFame
    + [1] Game associate [1] Level
    + [1] Block associate [1] Level
    + [1] Block associate [1] PlayArea
    + [1] Level associate [1] PlayArea
    + [1] Ball associate [1] PlayArea
    + [1] Paddle associate [1] PlayArea
    + [1] Player associate [1] Game
    + [1] Player associate [0..*] PauseGame
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player inherit User
    + Admin inherit User
    + HallOfFame inherit Game
    + Block inherit Game
    + Level inherit Game
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Admin()
   + Game(name: String, hallOfFame: HallOfFame)
   + Block(color: BlockColor, points: int)
   + Level(number: int, arrangement: GridSystem, random: boolean)
   + GridSystem()
   + PlayArea()
   + Ball(speed: int, direction: String)
   + Paddle(length: int)
   + Player(lives: int, score: int)
   + HallOfFame()
   + PauseGame()

Relationships:
# Final Inheritance Relationships:
   + Player inherit User
   + Admin inherit User
   + HallOfFame inherit Game
   + Block inherit Game
   + Level inherit Game
# Final Association Relationships:
   + [1] User associate [1] Player
   + [0..1] User associate [1] Admin
   + [1] Admin associate [1] Game
   + [1] Game associate [1] HallOfFame
   + [1] Game contain [*] Block
   + [0..1] Game contain [*] Level
   + [0..1] Level contain [*] Block
   + [1] Level contain [1] GridSystem
   + [1] Block associate [1] PlayArea
   + [1] Level associate [1] PlayArea
   + [1] Ball associate [1] PlayArea
   + [1] Paddle associate [1] PlayArea
   + [1] Player associate [1] Game
   + [1] Player associate [0..*] PauseGame
   + [1] DestroyBlockApplication contain [1] User
   + [1] DestroyBlockApplication contain [1] Game
   + [1] Level inherit Game
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: BlockColor (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Class: Admin (class) - Enum Attributes: [], Class Attributes: []
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,hallOfFame:HallOfFame]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:BlockColor,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:GridSystem,random:boolean]
Class: GridSystem (class) - Enum Attributes: [], Class Attributes: []
Class: PlayArea (class) - Enum Attributes: [], Class Attributes: []
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:String]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int]
Class: Player (class) - Enum Attributes: [], Class Attributes: [lives:int,score:int]
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: []
Class: PauseGame (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False Player inheritance False User
 False Admin inheritance False User
 False HallOfFame inheritance False Game
 False Block inheritance False Game
 False Level inheritance False Game
 1 User association 1 Player
 0..1 User association 1 Admin
 1 Admin association 1 Game
 1 Game association 1 HallOfFame
 1 Game association * Block
 0..1 Game association * Level
 0..1 Level association * Block
 1 Level association 1 GridSystem
 1 Block association 1 PlayArea
 1 Level association 1 PlayArea
 1 Ball association 1 PlayArea
 1 Paddle association 1 PlayArea
 1 Player association 1 Game
 1 Player association 0..* PauseGame
 1 DestroyBlockApplication association 1 User
 1 DestroyBlockApplication association 1 Game
 False Level inheritance False Game
--------------------------------------------------------------------------------
--3/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'GridSystem(class)' - 'BlockAssignment(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
-Relationships:
 ' 1 Game association 1 HallOfFame' - ' * HallOfFameEntry association 1 Game'
 ' 1 Game association * Block' - ' 1 Game association * Block'
 ' 0..1 Game association * Level' - ' 1 Game association 1..* Level'
 ' 1 Level association 1 GridSystem' - ' 1 Level association * BlockAssignment'
 ' 1 DestroyBlockApplication association 1 User' - ' 1 DestroyBlock association * User'
 ' 1 DestroyBlockApplication association 1 Game' - ' 1 DestroyBlock association * Game'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   13                  
Attributes          17                  4                   30                  
Associations        16                  6                   18                  
Inheritances        6                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------4/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + BlockColor(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string)
    + Admin( mode:AdminMode)
    + Player()
    + Game( name:string,  blocks:Set<Block>,  levels:Set<Level>,  hallOfFame:HallOfFame)
    + Block( color:BlockColor,  points:int)
    + Level( number:int,  blocksArrangement:Grid,  isRandom:boolean)
    + GridPosition( x:int,  y:int)
    + Ball( speed:int,  direction:Direction)
    + Paddle( length:int)
    + HallOfFame()
    + AdminMode( DESIGN, PLAY)
    + Direction( UP, DOWN, LEFT, RIGHT)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Admin(mode: AdminMode)
   + Player()
   + Game(name: String, blocks: Set<Block>, levels: Set<Level>, hallOfFame: HallOfFame)
   + Block(color: BlockColor, points: int)
   + Level(number: int, blocksArrangement: Grid, isRandom: boolean)
   + GridPosition(x: int, y: int)
   + Ball(speed: int, direction: Direction)
   + Paddle(length: int)
   + HallOfFame()
   + AdminMode(DESIGN, PLAY)
   + Direction(UP, DOWN, LEFT, RIGHT)

AI_answer(association):

```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] HallOfFame
    + [1] Game contain [*] Block
    + [1] Game contain [*] Level
    + [1] Level contain [*] Block
    + [1] Level contain [1] Grid
    + [1] Grid contain [*] Block
    + [1] Ball contain [1] Direction
    + [1] Player contain [1] Paddle

Final Association Relationships:
    + [1] User associate [*] Game
    + [1] Admin associate [1] Game
    + [1] Admin associate [1] Level
    + [1] Game associate [1] HallOfFame
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + Player inherit User
   + Admin inherit User
   + Level inherit Game
   + Ball inherit Game
   + Paddle inherit Game
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Admin(mode: AdminMode)
   + Player()
   + Game(name: String, hallOfFame: HallOfFame)
   + Block(color: BlockColor, points: int)
   + Level(number: int, blocksArrangement: Grid, isRandom: boolean)
   + GridPosition(x: int, y: int)
   + Ball(speed: int, direction: Direction)
   + Paddle(length: int)
   + HallOfFame()
   + AdminMode(DESIGN, PLAY)
   + Direction(UP, DOWN, LEFT, RIGHT)

Relationships:
# Final Association Relationships:
   + [1] User associate [1] Game
   + [1] Admin associate [1] Game
   + [1] Admin associate [1] Level
   + [1] Game contain [*] Block
   + [1] Game contain [*] Level
   + [1] Level contain [*] Block
   + [1] Level contain [1] Grid
   + [1] Grid contain [*] Block
   + [1] Ball contain [1] Direction
   + [1] Player contain [1] Paddle
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: BlockColor (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Class: Admin (class) - Enum Attributes: [], Class Attributes: [mode:AdminMode]
Class: Player (class) - Enum Attributes: [], Class Attributes: []
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,hallOfFame:HallOfFame]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:BlockColor,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,blocksArrangement:Grid,isRandom:boolean]
Class: GridPosition (class) - Enum Attributes: [], Class Attributes: [x:int,y:int]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:Direction]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int]
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: []
Class: AdminMode (class) - Enum Attributes: [], Class Attributes: [DESIGN:,PLAY:]
Class: Direction (class) - Enum Attributes: [], Class Attributes: [UP:,DOWN:,LEFT:,RIGHT:]
Relationships:
 1 User association 1 Game
 1 Admin association 1 Game
 1 Admin association 1 Level
 1 Game association * Block
 1 Game association * Level
 1 Level association * Block
 1 Level association 1 Grid
 1 Grid association * Block
 1 Ball association 1 Direction
 1 Player association 1 Paddle
--------------------------------------------------------------------------------
--4/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'GridPosition(class)' - 'PlayedBlockAssignment(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
 'Level(class):isRandom' - 'isRandom'
 'GridPosition(class):x' - 'x'
 'GridPosition(class):y' - 'y'
-Relationships:
 ' 1 User association 1 Game' - ' 1 User association * Game'
 ' 1 Game association * Block' - ' 1 Game association * Block'
 ' 1 Game association * Level' - ' 1 Game association 1..* Level'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   13                  
Attributes          24                  7                   30                  
Associations        8                   3                   18                  
Inheritances        0                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------5/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + BlockColor(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string,  isAdmin:boolean,  isPlayer:boolean)
    + Game( name:string,  maxLevels:int,  speedIncreaseFactor:float,  maxPaddleLength:int,  minPaddleLength:int)
    + Level( number:int,  arrangement:array<Block>,  isRandom:boolean)
    + Block( color:BlockColor,  points:int)
    + PlayArea( blocks:array<Block>,  ball:Ball,  paddle:Paddle)
    + Ball( speed:int,  direction:string)
    + Paddle( position:string,  length:int)
    + HallOfFame( scores:array<Score>)
    + Score( player:User,  points:int)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, isAdmin: Boolean, isPlayer: Boolean)
   + Game(name: String, maxLevels: Int, speedIncreaseFactor: Float, maxPaddleLength: Int, minPaddleLength: Int)
   + Level(number: Int, arrangement: Array<Block>, isRandom: Boolean)
   + Block(color: BlockColor, points: Int)
   + PlayArea(blocks: Array<Block>, ball: Ball, paddle: Paddle)
   + Ball(speed: Int, direction: String)
   + Paddle(position: String, length: Int)
   + HallOfFame(scores: Array<Score>)
   + Score(player: User, points: Int)

AI_answer(association):
```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] User
    + [1] DestroyBlockApplication contain [1] Game
    + [1] Game contain [1..99] Level
    + [1] Level contain [0..*] Block
    + [1] PlayArea contain [1] Ball
    + [1] PlayArea contain [1] Paddle
    + [1] Game contain [1] HallOfFame
    + [0..*] HallOfFame contain [1] Score

Final Association Relationships:
    + [1] User associate [0..*] Score
    + [0..1] User associate [1] Game
    + [1] Game associate [1] User
    + [1] Game associate [0..*] User
    + [1] Game associate [1] HallOfFame
    + [1] Level associate [1] Game
    + [1] Ball associate [1] PlayArea
    + [1] Paddle associate [1] PlayArea
    + [1] Score associate [1] User
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player extends User
    + Admin extends User
    + BlockColor does not extend any class because it is a property and not a class.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, isAdmin: Boolean, isPlayer: Boolean)
   + Game(name: String, maxLevels: Int, speedIncreaseFactor: Float, maxPaddleLength: Int, minPaddleLength: Int)
   + Level(number: Int, arrangement: Array<Block>, isRandom: Boolean)
   + Block(color: BlockColor, points: Int)
   + PlayArea(blocks: Array<Block>, ball: Ball, paddle: Paddle)
   + Ball(speed: Int, direction: String)
   + Paddle(position: String, length: Int)
   + HallOfFame(scores: Array<Score>)
   + Score(player: User, points: Int)
   + Player(username: String, password: String) extends User
   + Admin(username: String, password: String) extends User
   
Relationships:
# Final Inheritance Relationships:
   + Player extends User
   + Admin extends User
# Final Association Relationships:
   + [1] User associate [0..*] Score
   + [0..1] User associate [1] Game
   + [1] Game associate [1] User
   + [1] Game associate [0..*] User
   + [1] Game associate [1] HallOfFame
   + [1] Level associate [1] Game
   + [1] Ball associate [1] PlayArea
   + [1] Paddle associate [1] PlayArea
   + [1] Score associate [1] User
   + [1] DestroyBlockApplication contain [1] User
   + [1] DestroyBlockApplication contain [1] Game
   + [1] Game contain [1..99] Level
   + [1] Level contain [0..*] Block
   + [1] PlayArea contain [1] Ball
   + [1] PlayArea contain [1] Paddle
   + [1] Game contain [1] HallOfFame
   + [0..*] HallOfFame contain [1] Score
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: BlockColor (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String,isAdmin:Boolean,isPlayer:Boolean]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,maxLevels:Int,speedIncreaseFactor:Float,maxPaddleLength:Int,minPaddleLength:Int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:Int,arrangement:Array<Block>,isRandom:Boolean]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:BlockColor,points:Int]
Class: PlayArea (class) - Enum Attributes: [], Class Attributes: [blocks:Array<Block>,ball:Ball,paddle:Paddle]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:Int,direction:String]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [position:String,length:Int]
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: [scores:Array<Score>]
Class: Score (class) - Enum Attributes: [], Class Attributes: [player:User,points:Int]
Class: Player (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Class: Admin (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Relationships:
 False Player inheritance False User
 False Admin inheritance False User
 1 User association 0..* Score
 0..1 User association 1 Game
 1 Game association 1 User
 1 Game association 0..* User
 1 Game association 1 HallOfFame
 1 Level association 1 Game
 1 Ball association 1 PlayArea
 1 Paddle association 1 PlayArea
 1 Score association 1 User
 1 DestroyBlockApplication association 1 User
 1 DestroyBlockApplication association 1 Game
 1 Game association 1..99 Level
 1 Level association 0..* Block
 1 PlayArea association 1 Ball
 1 PlayArea association 1 Paddle
 1 Game association 1 HallOfFame
 0..* HallOfFame association 1 Score
--------------------------------------------------------------------------------
--5/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Level(class)' - 'Level(class)'
 'Block(class)' - 'Block(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Level(class):isRandom' - 'isRandom'
 'Block(class):points' - 'points'
 'HallOfFame(class):scores' - 'score'
-Relationships:
 ' 0..1 User association 1 Game' - ' 1 User association * Game'
 ' 1 Game association 1 HallOfFame' - ' * HallOfFameEntry association 1 Game'
 ' 1 Level association 1 Game' - ' 1 Game association 1..* Level'
 ' 1 DestroyBlockApplication association 1 User' - ' 1 DestroyBlock association * User'
 ' 1 DestroyBlockApplication association 1 Game' - ' 1 DestroyBlock association * Game'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  8                   13                  
Attributes          31                  6                   30                  
Associations        17                  5                   18                  
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------6/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + BlockColor(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string)
    + Game( name:string,  hallOfFame:HallOfFame)
    + Block( color:BlockColor,  points:int)
    + Level( number:int,  arrangement:GridSystem,  isRandom:boolean,  startingBlocks:int,  speedIncreaseFactor:double,  maxLength:int,  minLength:int)
    + PlayArea()
    + Ball( speed:int,  direction:string)
    + Paddle( position:string)
    + Player( lives:int,  totalScore:int)
    + HallOfFame()
    + AdminMode()
    + PlayMode()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + Color(Red, Blue, Green)
   + Mode(Admin, Play)
   + Direction(Left, Right)
   
Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Game(name: String, hallOfFame: HallOfFame)
   + Block(color: Color, points: int)
   + Level(number: int, arrangement: GridSystem, isRandom: boolean, startingBlocks: int, speedIncreaseFactor: double, maxLength: int, minLength: int)
   + PlayArea()
   + Ball(speed: int, direction: Direction)
   + Paddle(position: String)
   + Player(lives: int, totalScore: int)
   + HallOfFame()
   + AdminMode()
   + PlayMode()

AI_answer(association):

```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] AdminMode
    + [1] DestroyBlockApplication contain [1] PlayMode
    + [1] DestroyBlockApplication contain [*] User
    + [1] DestroyBlockApplication contain [*] Game
    + [1] Game contain [1] HallOfFame
    + [1] Game contain [*] Level
    + [1] Level contain [*] Block
    + [1] PlayArea contain [1] Ball
    + [1] PlayArea contain [1] Paddle
    + [1] Player contain [1] HallOfFame

Final Association Relationships:
    + [1] User associate [1] Player
    + [1] User associate [1] AdminMode
    + [1] User associate [1] PlayMode
    + [1] AdminMode associate [1] Game
    + [1] PlayMode associate [1] Game
    + [1] Game associate [1] AdminMode
    + [1] Game associate [1] PlayMode
    + [1] Game associate [1] Level
    + [1] Level associate [1] PlayArea
    + [1] Level associate [1] Block
    + [1] Level associate [1] Ball
    + [1] Level associate [1] Paddle
    + [1] Player associate [1] PlayArea
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player inherit User
    + AdminMode inherit User
    + PlayMode inherit User
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
Original Domain Model:

```
Enumerations:
   + Color(Red, Blue, Green)
   + Mode(Admin, Play)
   + Direction(Left, Right)
   
Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Game(name: String, hallOfFame: HallOfFame)
   + Block(color: Color, points: int)
   + Level(number: int, arrangement: GridSystem, isRandom: boolean, startingBlocks: int, speedIncreaseFactor: double, maxLength: int, minLength: int)
   + PlayArea()
   + Ball(speed: int, direction: Direction)
   + Paddle(position: String)
   + Player(lives: int, totalScore: int)
   + HallOfFame()
   + AdminMode()
   + PlayMode()
    + Player inherit User
    + AdminMode inherit User
    + PlayMode inherit User
    + [1] User associate [1] Player
    + [1] User associate [1] AdminMode
    + [1] User associate [1] PlayMode
    + [1] AdminMode associate [1] Game
    + [1] PlayMode associate [1] Game
    + [1] Game associate [1] AdminMode
    + [1] Game associate [1] PlayMode
    + [1] Game associate [1] Level
    + [1] Level associate [1] PlayArea
    + [1] Level associate [1] Block
    + [1] Level associate [1] Ball
    + [1] Level associate [1] Paddle
    + [1] Player associate [1] PlayArea
    + [1] DestroyBlockApplication contain [1] AdminMode
    + [1] DestroyBlockApplication contain [1] PlayMode
    + [1] DestroyBlockApplication contain [*] User
    + [1] DestroyBlockApplication contain [*] Game
    + [1] Game contain [1] HallOfFame
    + [1] Game contain [*] Level
    + [1] Level contain [*] Block
    + [1] PlayArea contain [1] Ball
    + [1] PlayArea contain [1] Paddle
    + [1] Player contain [1] HallOfFame
Final Association Relationships:
```

Since the original domain model seems to cover the requirements outlined in the description, no revisions are needed.
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: Color (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: Mode (enum) - Enum Attributes: [Admin, Play], Class Attributes: []
Class: Direction (enum) - Enum Attributes: [Left, Right], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,hallOfFame:HallOfFame]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:Color,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:GridSystem,isRandom:boolean,startingBlocks:int,speedIncreaseFactor:double,maxLength:int,minLength:int]
Class: PlayArea (class) - Enum Attributes: [], Class Attributes: []
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:Direction]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [position:String]
Class: Player (class) - Enum Attributes: [], Class Attributes: [lives:int,totalScore:int]
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: []
Class: AdminMode (class) - Enum Attributes: [], Class Attributes: []
Class: PlayMode (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: []
Class: AdminMode (class) - Enum Attributes: [], Class Attributes: []
Class: PlayMode (class) - Enum Attributes: [], Class Attributes: []
Relationships:
--------------------------------------------------------------------------------
--6/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'Direction(enum)' - 'PlayedBlockAssignment(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
 'Level(class):isRandom' - 'isRandom'
-Relationships:
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             18                  9                   13                  
Attributes          25                  5                   30                  
Associations        0                   0                   18                  
Inheritances        0                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------7/20------Block 223:
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + Color(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string,  isAdmin:boolean)
    + Game( name:string,  levels:int,  maxLevels:int,  speedIncreaseFactor:float,  maxPaddleLength:int,  minPaddleLength:int,  blocksPerLevel:int)
    + Block( color:Color,  points:int)
    + Level( number:int,  arrangement:string,  isRandom:boolean)
    + PlayArea()
    + Ball( speed:int,  direction:string)
    + Paddle()
    + HallOfFame()
    + Life()
    + Score()
    + Pause()
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BlockColor(Red, Blue, Green)
Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, isAdmin: boolean)
   + Game(name: String, levels: int, maxLevels: int, speedIncreaseFactor: float, maxPaddleLength: int, minPaddleLength: int, blocksPerLevel: int)
   + Block(color: BlockColor, points: int)
   + Level(number: int, arrangement: String, isRandom: boolean)
   + PlayArea()
   + Ball(speed: int, direction: String)
   + Paddle()
   + HallOfFame()
   + Life()
   + Score()
   + Pause()
```

AI_answer(association):

```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] HallOfFame
    + [1] User contain [1] Password
    + [1] Game contain [*] Block
    + [1] Game contain [*] Level
    + [1] PlayArea contain [1] Ball
    + [1] PlayArea contain [1] Paddle
    + [1] HallOfFame contain [*] Score
    + [1] User contain [1] Life
    + [1] Game contain [1] PlayArea

Final Association Relationships:
    + [1] User associate [0..1] Game
    + [1] Game associate [1] User
    + [1] Game associate [1] HallOfFame
    + [1] Game associate [0..1] Level
    + [1] Game associate [1] PlayArea
    + [1] Game associate [0..*] User
    + [1] User associate [1] Password
    + [1] Game associate [1] Block
    + [1] Level associate [0..*] Block
    + [1] PlayArea associate [1] Ball
    + [1] PlayArea associate [1] Paddle
    + [1] PlayArea associate [1] Game
    + [1] User associate [1] Life
    + [1] Game associate [1] HallOfFame
    + [0..*] Game associate [1] User
    + [1] Game associate [1] PlayArea
    + [1] Game associate [1] Level
    + [1] Game associate [1] Ball
    + [1] Game associate [1] Paddle
    + [1] Game associate [1] HallOfFame
    + [1] Game associate [1] User
    + [1] Game associate [1] Password
    + [1] Game associate [1] Life
    + [1] Game associate [1] Score
    + [1] Game associate [1] Level
    + [1] Game associate [1] Block
    + [1] Game associate [1] PlayArea
    + [1] Game associate [1] HallOfFame
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + Player inherit User
   + Admin inherit User
   + Game inherit PlayArea
   + Block inherit PlayArea
   + Level inherit PlayArea
   + Ball inherit PlayArea
   + Paddle inherit PlayArea
   + HallOfFame inherit PlayArea
   + Life inherit PlayArea
   + Score inherit PlayArea
   + Pause inherit PlayArea
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, isAdmin: boolean)
   + Game(name: String, levels: int, maxLevels: int, speedIncreaseFactor: float, maxPaddleLength: int, minPaddleLength: int, blocksPerLevel: int)
   + Block(color: BlockColor, points: int)
   + Level(number: int, arrangement: String, isRandom: boolean)
   + PlayArea()
   + Ball(speed: int, direction: String)
   + Paddle()
   + HallOfFame()
   + Life()
   + Score()
   + Pause()
   + Player inherit User
   + Admin inherit User

Relationships:
# Final Inheritance Relationships:
   + [child class] extends [parent class]
# Final Association Relationships:
   + [1] User associate [0..1] Game
   + [1] Game associate [1] User
   + [1] Game associate [1] HallOfFame
   + [1] Game associate [0..1] Level
   + [1] Game associate [1] PlayArea
   + [1] Game associate [0..*] User
   + [1] Game associate [1] Block
   + [1] Level associate [0..*] Block
   + [1] PlayArea associate [1] Ball
   + [1] PlayArea associate [1] Paddle
   + [1] PlayArea associate [1] Game
   + [1] User associate [1] Life
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: BlockColor (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String,isAdmin:boolean]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,levels:int,maxLevels:int,speedIncreaseFactor:float,maxPaddleLength:int,minPaddleLength:int,blocksPerLevel:int]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:BlockColor,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:String,isRandom:boolean]
Class: PlayArea (class) - Enum Attributes: [], Class Attributes: []
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:String]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: []
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: []
Class: Life (class) - Enum Attributes: [], Class Attributes: []
Class: Score (class) - Enum Attributes: [], Class Attributes: []
Class: Pause (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: []
Class: Admin (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 1 child association 1 class
 1 User association 0..1 Game
 1 Game association 1 User
 1 Game association 1 HallOfFame
 1 Game association 0..1 Level
 1 Game association 1 PlayArea
 1 Game association 0..* User
 1 Game association 1 Block
 1 Level association 0..* Block
 1 PlayArea association 1 Ball
 1 PlayArea association 1 Paddle
 1 PlayArea association 1 Game
 1 User association 1 Life
--------------------------------------------------------------------------------
--7/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Game(class):blocksPerLevel' - 'nrBlocksPerLevel'
 'Block(class):points' - 'points'
 'Level(class):isRandom' - 'isRandom'
-Relationships:
 ' 1 User association 0..1 Game' - ' 1 User association * Game'
 ' 1 Game association 1 HallOfFame' - ' * HallOfFameEntry association 1 Game'
 ' 1 Game association 0..1 Level' - ' 1 Game association 1..* Level'
 ' 1 Game association 1 Block' - ' 1 Game association * Block'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             15                  8                   13                  
Attributes          20                  6                   30                  
Associations        12                  4                   18                  
Inheritances        0                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------8/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + Color(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string,  mode:Mode)
    + Game( name:string,  hallOfFame:HallOfFame,  levels:int,  speedIncreaseFactor:float,  maxPaddleLength:int,  minPaddleLength:int,  blocksPerLevel:int)
    + Block( color:Color,  points:int)
    + Level( number:int,  arrangement:string,  random:boolean)
    + Player( lives:int,  totalScore:int)
    + Ball( speed:int,  direction:Direction)
    + Paddle( position:Position)
    + Position( x:int,  y:int)
    + Mode( admin:boolean,  play:boolean)
    + HallOfFame()
    + Wall()
    + Life()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + Color(Red, Blue, Green)
Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, mode: Mode)
   + Game(name: String, hallOfFame: HallOfFame, levels: int, speedIncreaseFactor: float, maxPaddleLength: int, minPaddleLength: int, blocksPerLevel: int)
   + Block(color: Color, points: int)
   + Level(number: int, arrangement: String, random: boolean)
   + Player(lives: int, totalScore: int)
   + Ball(speed: int, direction: Direction)
   + Paddle(position: Position)
   + Position(x: int, y: int)
   + Mode(admin: boolean, play: boolean)
   + HallOfFame()
   + Wall()
   + Life()

AI_answer(association):

```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] Game
    + [1] DestroyBlockApplication contain [1] User
    + [1] Game contain [*] Block
    + [1] Game contain [*] Level
    + [1] Game contain [1] HallOfFame
    + [1] Player contain [1] Ball
    + [1] Player contain [1] Paddle
    + [1] Paddle contain [1] Position

Final Association Relationships:
    + [1] User associate [1] Player
    + [1] User associate [1] Mode
    + [1] Game associate [1] User
    + [1] Game associate [1] DestroyBlockApplication
    + [1] Level associate [*] Block
    + [1] Player associate [1] Game
    + [1] Player associate [1] Life
    + [1] Ball associate [1] Direction
    + [1] Paddle associate [1] Wall
```

--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + User inherit Player
   + Admin inherit Player
   + Game inherit Level
   + Wall inherit Block
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + Color(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, mode: Mode)
   + Game(name: String, hallOfFame: HallOfFame, levels: int, speedIncreaseFactor: float, maxPaddleLength: int, minPaddleLength: int, blocksPerLevel: int)
   + Block(color: Color, points: int)
   + Level(number: int, arrangement: String, random: boolean)
   + Player(lives: int, totalScore: int)
   + Ball(speed: int, direction: Direction)
   + Paddle(position: Position)
   + Position(x: int, y: int)
   + Mode(admin: boolean, play: boolean)
   + HallOfFame()
   + Wall()
   + Life()

Relationships:
# Final Inheritance Relationships:
   + User inherit Player
   + Admin inherit Player
   + Game inherit Level

# Final Association Relationships:
   + [1] User associate [1] Player
   + [1] User associate [1] Mode
   + [1] Game associate [1] User
   + [1] Game associate [1] DestroyBlockApplication
   + [1] Level associate [*] Block
   + [1] Player associate [1] Game
   + [1] Player associate [1] Life
   + [1] Ball associate [1] Direction
   + [1] Paddle associate [1] Wall
   + [1] DestroyBlockApplication contain [1] Game
   + [1] DestroyBlockApplication contain [1] User
   + [1] Game contain [*] Block
   + [1] Game contain [*] Level
   + [1] Game contain [1] HallOfFame
   + [1] Player contain [1] Ball
   + [1] Player contain [1] Paddle
   + [1] Paddle contain [1] Position
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: Color (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String,mode:Mode]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,hallOfFame:HallOfFame,levels:int,speedIncreaseFactor:float,maxPaddleLength:int,minPaddleLength:int,blocksPerLevel:int]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:Color,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:String,random:boolean]
Class: Player (class) - Enum Attributes: [], Class Attributes: [lives:int,totalScore:int]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:Direction]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [position:Position]
Class: Position (class) - Enum Attributes: [], Class Attributes: [x:int,y:int]
Class: Mode (class) - Enum Attributes: [], Class Attributes: [admin:boolean,play:boolean]
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: []
Class: Wall (class) - Enum Attributes: [], Class Attributes: []
Class: Life (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False User inheritance False Player
 False Admin inheritance False Player
 False Game inheritance False Level
 1 User association 1 Player
 1 User association 1 Mode
 1 Game association 1 User
 1 Game association 1 DestroyBlockApplication
 1 Level association * Block
 1 Player association 1 Game
 1 Player association 1 Life
 1 Ball association 1 Direction
 1 Paddle association 1 Wall
 1 DestroyBlockApplication association 1 Game
 1 DestroyBlockApplication association 1 User
 1 Game association * Block
 1 Game association * Level
 1 Game association 1 HallOfFame
 1 Player association 1 Ball
 1 Player association 1 Paddle
 1 Paddle association 1 Position
--------------------------------------------------------------------------------
--8/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'Position(class)' - 'PlayedBlockAssignment(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Game(class):blocksPerLevel' - 'nrBlocksPerLevel'
 'Block(class):points' - 'points'
 'Position(class):x' - 'x'
 'Position(class):y' - 'y'
-Relationships:
 ' 1 Game association 1 User' - ' 1 User association * Game'
 ' 1 Game association 1 DestroyBlockApplication' - ' 1 DestroyBlock association * Game'
 ' 1 DestroyBlockApplication association 1 User' - ' 1 DestroyBlock association * User'
 ' 1 Game association * Block' - ' 1 Game association * Block'
 ' 1 Game association * Level' - ' 1 Game association 1..* Level'
 ' 1 Game association 1 HallOfFame' - ' * HallOfFameEntry association 1 Game'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   13                  
Attributes          27                  7                   30                  
Associations        16                  6                   18                  
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------9/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + GameLevel()
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string,  isAdmin:boolean)
    + Block( color:string,  points:int)
    + Game( name:string)
    + Level( arrangement:Block[][],  random:boolean,  blockCount:int,  ballSpeed:int,  paddleLength:int)
    + PlayArea( blocks:Block[],  ball:Ball,  paddle:Paddle)
    + Ball( speed:int,  direction:string)
    + Paddle( position:string)
    + GameSession( level:GameLevel,  score:int,  lives:int,  paused:boolean)
    + HallOfFame()
    + HighScore()
    + Admin()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + BlockColor()
   + GameLevel()
Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, isAdmin: boolean)
   + Block(color: BlockColor, points: int)
   + Game(name: String)
   + Level(arrangement: Block[][], random: boolean, blockCount: int, ballSpeed: int, paddleLength: int)
   + PlayArea(blocks: Block[], ball: Ball, paddle: Paddle)
   + Ball(speed: int, direction: String)
   + Paddle(position: String)
   + GameSession(level: GameLevel, score: int, lives: int, paused: boolean)
   + HallOfFame()
   + HighScore()
   + Admin()

AI_answer(association):
```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] HallOfFame
    + [1] DestroyBlockApplication contain [*] User
    + [1] DestroyBlockApplication contain [*] Game
    + [1] Game contain [*] Level
    + [1] Game contain [1] HallOfFame
    + [0..1] Game contain [1] Admin
    + [1] Level contain [*] Block
    + [1] PlayArea contain [*] Block
    + [1] PlayArea contain [1] Ball
    + [1] PlayArea contain [1] Paddle
    + [1] GameSession contain [1] GameLevel
    + [1] HallOfFame contain [*] HighScore

Final Association Relationships:
    + [1] User associate [0..1] Admin
    + [1] User associate [*] Game
    + [1] Game associate [*] User
    + [1] Game associate [*] Level
    + [1] Level associate [*] Block
    + [1] Level associate [1] PlayArea
    + [1] PlayArea associate [1] Ball
    + [1] PlayArea associate [1] Paddle
    + [1] GameSession associate [1] GameLevel
    + [1] GameLevel associate [1] Block
    + [1] GameLevel associate [1] PlayArea
    + [1] GameLevel associate [1] GameSession
    + [1] HallOfFame associate [*] HighScore
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player inherit User
    + Admin inherit User
    + GameLevel inherit Level
    + Ball inherit PlayArea
    + Paddle inherit PlayArea
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + BlockColor()

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, isAdmin: boolean)
   + Block(color: BlockColor, points: int)
   + Game(name: String)
   + Level(arrangement: Block[][], random: boolean, blockCount: int, ballSpeed: int, paddleLength: int)
   + PlayArea(blocks: Block[], ball: Ball, paddle: Paddle)
   + Ball(speed: int, direction: String)
   + Paddle(position: String)
   + GameSession(level: GameLevel, score: int, lives: int, paused: boolean)
   + HallOfFame()
   + HighScore()
   + Admin()
   + Player(username: String, password: String, isAdmin: boolean)
   + GameLevel(arrangement: Block[][], random: boolean, blockCount: int, ballSpeed: int, paddleLength: int)

Relationships:
# Final Inheritance Relationships:
   + Player extends User
   + Admin extends User
   + GameLevel extends Level
   + Ball extends PlayArea
   + Paddle extends PlayArea

# Final Association Relationships:
   + [1] User associate [0..1] Admin
   + [1] User associate [*] Game
   + [1] Game associate [*] User
   + [1] Game associate [*] Level
   + [1] Level associate [*] Block
   + [1] Level associate [1] PlayArea
   + [1] PlayArea associate [1] Ball
   + [1] PlayArea associate [1] Paddle
   + [1] GameSession associate [1] GameLevel
   + [1] GameLevel associate [1] Block
   + [1] GameLevel associate [1] PlayArea
   + [1] GameLevel associate [1] GameSession
   + [1] HallOfFame associate [*] HighScore
   + [1] DestroyBlockApplication contain [1] HallOfFame
   + [1] DestroyBlockApplication contain [*] User
   + [1] DestroyBlockApplication contain [*] Game
   + [1] Game contain [*] Level
   + [1] Game contain [1] HallOfFame
   + [0..1] Game contain [1] Admin
   + [1] Level contain [*] Block
   + [1] PlayArea contain [*] Block
   + [1] PlayArea contain [1] Ball
   + [1] PlayArea contain [1] Paddle
   + [1] GameSession contain [1] GameLevel
   + [1] HallOfFame contain [*] HighScore
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: BlockColor (enum) - Enum Attributes: [], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String,isAdmin:boolean]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:BlockColor,points:int]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Level (class) - Enum Attributes: [], Class Attributes: [arrangement:Block[][],random:boolean,blockCount:int,ballSpeed:int,paddleLength:int]
Class: PlayArea (class) - Enum Attributes: [], Class Attributes: [blocks:Block[],ball:Ball,paddle:Paddle]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:String]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [position:String]
Class: GameSession (class) - Enum Attributes: [], Class Attributes: [level:GameLevel,score:int,lives:int,paused:boolean]
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: []
Class: HighScore (class) - Enum Attributes: [], Class Attributes: []
Class: Admin (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [username:String,password:String,isAdmin:boolean]
Class: GameLevel (class) - Enum Attributes: [], Class Attributes: [arrangement:Block[][],random:boolean,blockCount:int,ballSpeed:int,paddleLength:int]
Relationships:
 False Player inheritance False User
 False Admin inheritance False User
 False GameLevel inheritance False Level
 False Ball inheritance False PlayArea
 False Paddle inheritance False PlayArea
 1 User association 0..1 Admin
 1 User association * Game
 1 Game association * User
 1 Game association * Level
 1 Level association * Block
 1 Level association 1 PlayArea
 1 PlayArea association 1 Ball
 1 PlayArea association 1 Paddle
 1 GameSession association 1 GameLevel
 1 GameLevel association 1 Block
 1 GameLevel association 1 PlayArea
 1 GameLevel association 1 GameSession
 1 HallOfFame association * HighScore
 1 DestroyBlockApplication association 1 HallOfFame
 1 DestroyBlockApplication association * User
 1 DestroyBlockApplication association * Game
 1 Game association * Level
 1 Game association 1 HallOfFame
 0..1 Game association 1 Admin
 1 Level association * Block
 1 PlayArea association * Block
 1 PlayArea association 1 Ball
 1 PlayArea association 1 Paddle
 1 GameSession association 1 GameLevel
 1 HallOfFame association * HighScore
--------------------------------------------------------------------------------
--9/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Block(class)' - 'Block(class)'
 'Game(class)' - 'Game(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'GameSession(class)' - 'PlayedGame(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Block(class):points' - 'points'
 'Game(class):name' - 'name'
 'GameSession(class):score' - 'score'
 'GameSession(class):lives' - 'lives'
-Relationships:
 ' 1 User association * Game' - ' 1 User association * Game'
 ' 1 Game association * Level' - ' 1 Game association 1..* Level'
 ' 1 DestroyBlockApplication association 1 HallOfFame' - ' 1 DestroyBlock association * HallOfFameEntry'
 ' 1 DestroyBlockApplication association * User' - ' 1 DestroyBlock association * User'
 ' 1 DestroyBlockApplication association * Game' - ' 1 DestroyBlock association * Game'
 ' 1 Game association 1 HallOfFame' - ' * HallOfFameEntry association 1 Game'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             15                  9                   13                  
Attributes          29                  6                   30                  
Associations        25                  6                   18                  
Inheritances        5                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------10/20------Block 223:
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + Color(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string)
    + Game( name:string,  hallOfFame:List<Player>)
    + Block( color:Color,  points:int)
    + Level( number:int,  blocks:Array<Block>,  random:boolean)
    + Admin()
    + Player( lives:int,  totalScore:int)
    + Ball( speed:int,  direction:string)
    + Paddle( length:int)
    + GridSystem( blocks:Array<Block>)
    + GameSession( paused:boolean,  saved:boolean)
    + HallOfFame( highScore:Player)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + Color(Red, Blue, Green)
Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Game(name: String, hallOfFame: List<Player>)
   + Block(color: Color, points: int)
   + Level(number: int, blocks: Array<Block>, random: boolean)
   + Admin()
   + Player(lives: int, totalScore: int)
   + Ball(speed: int, direction: String)
   + Paddle(length: int)
   + GridSystem(blocks: Array<Block>)
   + GameSession(paused: boolean, saved: boolean)
   + HallOfFame(highScore: Player)
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [*] Game
    + [1] Game contain [*] Level
    + [1] Level contain [*] Block
    + [1] Game contain [1] HallOfFame
    + [1] GridSystem contain [*] Block

Final Association Relationships:
    + [0..*] User associate [1] Player
    + [0..*] User associate [1] Admin
    + [1] Admin associate [1] Game
    + [1] Player associate [1] Game
    + [1] Game associate [1] GameSession
    + [1] GameSession associate [1] Level
    + [1] GameSession associate [1] Ball
    + [1] GameSession associate [1] Paddle
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player extends User
    + Admin extends User
    + Block extends Object
    + Level extends Object
    + Ball extends Object
    + Paddle extends Object
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + Color(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Game(name: String, hallOfFame: List<Player>)
   + Block(color: Color, points: int)
   + Level(number: int, blocks: Array<Block>, random: boolean)
   + Admin()
   + Player(lives: int, totalScore: int)
   + Ball(speed: int, direction: String)
   + Paddle(length: int)
   + GridSystem(blocks: Array<Block>)
   + GameSession(paused: boolean, saved: boolean)
   + HallOfFame(highScore: Player)

Relationships:
# Final Inheritance Relationships:
   + Player extends User
   + Admin extends User
   
# Final Association Relationships:
   + [0..*] User associate [1] Player
   + [0..*] User associate [1] Admin
   + [1] Admin associate [1] Game
   + [1] Player associate [1] Game
   + [1] Game associate [1] GameSession
   + [1] GameSession associate [1] Level
   + [1] GameSession associate [1] Ball
   + [1] GameSession associate [1] Paddle
   + [1] DestroyBlockApplication contain [*] Game
   + [1] Game contain [*] Level
   + [1] Level contain [*] Block
   + [1] Game contain [1] HallOfFame
   + [1] GridSystem contain [*] Block
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: Color (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,hallOfFame:List<Player>]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:Color,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,blocks:Array<Block>,random:boolean]
Class: Admin (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [lives:int,totalScore:int]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:String]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int]
Class: GridSystem (class) - Enum Attributes: [], Class Attributes: [blocks:Array<Block>]
Class: GameSession (class) - Enum Attributes: [], Class Attributes: [paused:boolean,saved:boolean]
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: [highScore:Player]
Relationships:
 False Player inheritance False User
 False Admin inheritance False User
 0..* User association 1 Player
 0..* User association 1 Admin
 1 Admin association 1 Game
 1 Player association 1 Game
 1 Game association 1 GameSession
 1 GameSession association 1 Level
 1 GameSession association 1 Ball
 1 GameSession association 1 Paddle
 1 DestroyBlockApplication association * Game
 1 Game association * Level
 1 Level association * Block
 1 Game association 1 HallOfFame
 1 GridSystem association * Block
--------------------------------------------------------------------------------
--10/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'GridSystem(class)' - 'BlockAssignment(class)'
 'GameSession(class)' - 'PlayedGame(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
-Relationships:
 ' 1 Game association 1 GameSession' - ' 1 Game association * PlayedGame'
 ' 1 DestroyBlockApplication association * Game' - ' 1 DestroyBlock association * Game'
 ' 1 Game association * Level' - ' 1 Game association 1..* Level'
 ' 1 Game association 1 HallOfFame' - ' * HallOfFameEntry association 1 Game'
 ' 1 GridSystem association * Block' - ' * BlockAssignment association 1 Block'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  10                  13                  
Attributes          21                  4                   30                  
Associations        13                  5                   18                  
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------11/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + BlockColor(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User(username:string, password:string, role:UserRole)
    + Game(name:string, blocks:Set<Block>, levels:List<Level>, speedIncreaseFactor:float, maxPaddleLength:int, minPaddleLength:int)
    + Level(number:int, blocksArrangement:Grid<Block>, isRandom:boolean)
    + Block(color:BlockColor, points:int)
    + Ball(speed:int, direction:Direction)
    + Paddle(length:int)
    + GameSession(player:User, currentLevel:int, lives:int, score:int, isPaused:boolean)
    + HallOfFame(game:Game, highScores:List<User>)
    + UserRole()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + Color(Red, Blue, Green)
   + Direction(Up, Down, Left, Right)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, role: UserRole)
   + Game(name: String, blocks: Set<Block>, levels: List<Level>, speedIncreaseFactor: float, maxPaddleLength: int, minPaddleLength: int)
   + Level(number: int, blocksArrangement: Grid<Block>, isRandom: boolean)
   + Block(color: Color, points: int)
   + Ball(speed: int, direction: Direction)
   + Paddle(length: int)
   + GameSession(player: User, currentLevel: int, lives: int, score: int, isPaused: boolean)
   + HallOfFame(game: Game, highScores: List<User)
   + UserRole()

AI_answer(association):

```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] User
    + [1] DestroyBlockApplication contain [1] Game
    + [1] Game contain [*] Block
    + [1] Game contain [*] Level
    + [1] Level contain [*] Block
    + [1] GameSession contain [1] Ball
    + [1] GameSession contain [1] Paddle
    + [1] GameSession contain [1] User
    + [1] HallOfFame contain [*] User

Final Association Relationships:
    + [1] User associate [1] UserRole
    + [1] Game associate [1] User
    + [1] Game associate [1] GameSession
    + [1] Game associate [1] HallOfFame
    + [1] GameSession associate [1] Game
    + [1] GameSession associate [1] Level
    + [0..1] GameSession associate [1] User
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Intermediate reasoning results:
   + Player extends User because a player is a type of user.
   + Admin extends User because an admin is a type of user.
   + GameAdmin extends Admin because a game admin is a specific type of admin.
   + Level does not extend Block because a level is not a type of block.
   + Ball does not extend Block because a ball is not a type of block.
   + Paddle does not extend Block because a paddle is not a type of block.
   + GameSession does not extend User because a game session is not a type of user.
   + HallOfFame does not extend Game because a hall of fame is not a type of game.
```

```
Final Inheritance Relationships:
   + Player extends User
   + Admin extends User
   + GameAdmin extends Admin
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + Color(Red, Blue, Green)
   + Direction(Up, Down, Left, Right)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, role: UserRole)
   + Game(name: String, blocks: Set<Block>, levels: List<Level>, speedIncreaseFactor: float, maxPaddleLength: int, minPaddleLength: int)
   + Level(number: int, blocksArrangement: Grid<Block>, isRandom: boolean)
   + Block(color: Color, points: int)
   + Ball(speed: int, direction: Direction)
   + Paddle(length: int)
   + GameSession(player: User, currentLevel: int, lives: int, score: int, isPaused: boolean)
   + HallOfFame(game: Game, highScores: List<User)
   + UserRole()
   + Player extends User
   + Admin extends User
   + GameAdmin extends Admin

Relationships:
# Final Inheritance Relationships:
   + Player extends User
   + Admin extends User
   + GameAdmin extends Admin
# Final Association Relationships:
   + [1] User associate [1] UserRole
   + [1] Game associate [1] User
   + [1] Game associate [1] GameSession
   + [1] Game associate [*] Block
   + [1] Game associate [*] Level
   + [1] Level associate [*] Block
   + [1] GameSession associate [1] Game
   + [1] GameSession associate [1] Level
   + [0..1] GameSession associate [1] User
   + [1] DestroyBlockApplication contain [1] User
   + [1] DestroyBlockApplication contain [1] Game
   + [1] GameSession contain [1] Ball
   + [1] GameSession contain [1] Paddle
   + [1] GameSession contain [1] User
   + [1] HallOfFame contain [*] User
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: Color (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: Direction (enum) - Enum Attributes: [Up, Down, Left, Right], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String,role:UserRole]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,blocks:Set<Block>,levels:List<Level>,speedIncreaseFactor:float,maxPaddleLength:int,minPaddleLength:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,blocksArrangement:Grid<Block>,isRandom:boolean]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:Color,points:int]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:Direction]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int]
Class: GameSession (class) - Enum Attributes: [], Class Attributes: [player:User,currentLevel:int,lives:int,score:int,isPaused:boolean]
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: [game:Game,highScores:List<User]
Class: UserRole (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: []
Class: Admin (class) - Enum Attributes: [], Class Attributes: []
Class: GameAdmin (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False Player inheritance False User
 False Admin inheritance False User
 False GameAdmin inheritance False Admin
 1 User association 1 UserRole
 1 Game association 1 User
 1 Game association 1 GameSession
 1 Game association * Block
 1 Game association * Level
 1 Level association * Block
 1 GameSession association 1 Game
 1 GameSession association 1 Level
 0..1 GameSession association 1 User
 1 DestroyBlockApplication association 1 User
 1 DestroyBlockApplication association 1 Game
 1 GameSession association 1 Ball
 1 GameSession association 1 Paddle
 1 GameSession association 1 User
 1 HallOfFame association * User
--------------------------------------------------------------------------------
--11/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Level(class)' - 'Level(class)'
 'Block(class)' - 'Block(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'Direction(enum)' - 'PlayedBlockAssignment(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'GameSession(class)' - 'PlayedGame(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Level(class):isRandom' - 'isRandom'
 'Block(class):points' - 'points'
 'GameSession(class):currentLevel' - 'currentLevel'
 'GameSession(class):lives' - 'lives'
 'GameSession(class):score' - 'score'
-Relationships:
 ' 1 Game association 1 User' - ' 1 User association * Game'
 ' 1 Game association 1 GameSession' - ' 1 Game association * PlayedGame'
 ' 1 Game association * Block' - ' 1 Game association * Block'
 ' 1 Game association * Level' - ' 1 Game association 1..* Level'
 ' 1 DestroyBlockApplication association 1 User' - ' 1 DestroyBlock association * User'
 ' 1 DestroyBlockApplication association 1 Game' - ' 1 DestroyBlock association * Game'
 ' 1 HallOfFame association * User' - ' 1 User association * HallOfFameEntry'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             15                  10                  13                  
Attributes          31                  8                   30                  
Associations        15                  7                   18                  
Inheritances        3                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------12/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + BlockColor(Red, Blue, Green)
# Classes (attributes):
    + User( username:string,  password:string)
    + Admin( mode:AdminMode)
    + Game( name:string,  hallOfFame:HallOfFame)
    + Block( color:BlockColor,  points:int)
    + Level( number:int,  arrangement:Arrangement,  random:bool,  blocksNumber:int)
    + Ball( speed:int,  direction:Direction)
    + Paddle( length:int)
    + Player( lives:int,  score:int)
    + HallOfFame()
    + Arrangement( grid:GridPosition[] )
    + GridPosition( x:int, y:int)
    + AdminMode( Design, Play)
    + Direction( Up, Down, Left, Right)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + BlockColor(Red, Blue, Green)
   + AdminMode(Design, Play)
   + Direction(Up, Down, Left, Right)

Classes:
   + User(username: String, password: String)
   + Admin(mode: AdminMode)
   + Game(name: String, hallOfFame: HallOfFame)
   + Block(color: BlockColor, points: int)
   + Level(number: int, arrangement: Arrangement, random: boolean, blocksNumber: int)
   + Ball(speed: int, direction: Direction)
   + Paddle(length: int)
   + Player(lives: int, score: int)
   + HallOfFame()
   + Arrangement(grid: GridPosition[])
   + GridPosition(x: int, y: int)

AI_answer(association):

```
Final Composition Relationships:
    + [1] User contain [1] Player
    + [1] Admin contain [1] User
    + [1] Admin contain [1] Game
    + [1] Admin contain [*] Block
    + [1] Admin contain [*] Level
    + [1] Game contain [1] HallOfFame
    + [1] Level contain [1] Arrangement
    + [1] Arrangement contain [*] Block
    + [1] Ball contain [1] Direction
    + [1] Player contain [1] Paddle

Final Association Relationships:
    + [1] User associate [0..1] Admin
    + [1] User associate [1] Player
    + [1] Admin associate [1] Game
    + [1] Game associate [*] Player
    + [1] Game associate [*] Level
    + [1] Level associate [*] Block
    + [1] Player associate [1] Ball
    + [1] Player associate [1] Paddle
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player inherit User
    + Admin inherit User
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + BlockColor(Red, Blue, Green)
   + AdminMode(Design, Play)
   + Direction(Up, Down, Left, Right)

Classes:
   + User(username: String, password: String)
   + Admin(mode: AdminMode)
   + Game(name: String, hallOfFame: HallOfFame)
   + Block(color: BlockColor, points: int)
   + Level(number: int, arrangement: Arrangement, random: boolean, blocksNumber: int)
   + Ball(speed: int, direction: Direction)
   + Paddle(length: int)
   + Player(lives: int, score: int)
   + HallOfFame()
   + Arrangement(grid: GridPosition[])
   + GridPosition(x: int, y: int)

Relationships:
# Final Inheritance Relationships:
   + Player inherit User
   + Admin inherit User

# Final Association Relationships:
   + [1] User associate [0..1] Admin
   + [1] User contain [1] Player
   + [1] Admin associate [1] Game
   + [1] Game associate [*] Player
   + [1] Game associate [*] Level
   + [1] Level associate [*] Block
   + [1] Player associate [1] Ball
   + [1] Player associate [1] Paddle
   + [1] Admin contain [1] Game
   + [1] Admin contain [*] Block
   + [1] Admin contain [*] Level
   + [1] Game contain [1] HallOfFame
   + [1] Level contain [1] Arrangement
   + [1] Arrangement contain [*] Block
   + [1] Ball contain [1] Direction
   + [1] Player contain [1] Paddle
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: BlockColor (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: AdminMode (enum) - Enum Attributes: [Design, Play], Class Attributes: []
Class: Direction (enum) - Enum Attributes: [Up, Down, Left, Right], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Class: Admin (class) - Enum Attributes: [], Class Attributes: [mode:AdminMode]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,hallOfFame:HallOfFame]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:BlockColor,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:Arrangement,random:boolean,blocksNumber:int]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:Direction]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int]
Class: Player (class) - Enum Attributes: [], Class Attributes: [lives:int,score:int]
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: []
Class: Arrangement (class) - Enum Attributes: [], Class Attributes: [grid:GridPosition[]]
Class: GridPosition (class) - Enum Attributes: [], Class Attributes: [x:int,y:int]
Relationships:
 False Player inheritance False User
 False Admin inheritance False User
 1 User association 0..1 Admin
 1 User association 1 Player
 1 Admin association 1 Game
 1 Game association * Player
 1 Game association * Level
 1 Level association * Block
 1 Player association 1 Ball
 1 Player association 1 Paddle
 1 Admin association 1 Game
 1 Admin association * Block
 1 Admin association * Level
 1 Game association 1 HallOfFame
 1 Level association 1 Arrangement
 1 Arrangement association * Block
 1 Ball association 1 Direction
 1 Player association 1 Paddle
--------------------------------------------------------------------------------
--12/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'GridPosition(class)' - 'PlayedBlockAssignment(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
 'GridPosition(class):x' - 'x'
 'GridPosition(class):y' - 'y'
-Relationships:
 ' 1 Game association * Level' - ' 1 Game association 1..* Level'
 ' 1 Game association 1 HallOfFame' - ' * HallOfFameEntry association 1 Game'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  8                   13                  
Attributes          28                  6                   30                  
Associations        16                  2                   18                  
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------13/20------Block 223:
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + GameStatus(Active, Paused, Ended)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string,  mode:AdminMode/PlayMode)
    + Player()
    + Admin()
    + Game( name:string,  blocks:Set<Block>,  levels:List<Level>,  speedIncreaseFactor:float,  maxLength:int,  minLength:int)
    + Block( color:string,  points:int)
    + Level( number:int,  arrangement:Block[][],  random:boolean,  numBlocks:int)
    + Ball( speed:int,  direction:Direction)
    + Paddle( length:int)
    + GameInstance( status:GameStatus,  currentLevel:int,  lives:int,  totalScore:int)
    + HallOfFameEntry( player:Player,  score:int)
    + Direction(Up, Down, Left, Right)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + AdminMode()
   + PlayMode()
   + Direction(Up, Down, Left, Right)
   + GameStatus(Active, Paused, Ended)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, mode: AdminMode/PlayMode)
   + Player()
   + Admin()
   + Game(name: String, blocks: Set<Block>, levels: List<Level>, speedIncreaseFactor: float, maxLength: int, minLength: int)
   + Block(color: String, points: int)
   + Level(number: int, arrangement: Block[][], random: boolean, numBlocks: int)
   + Ball(speed: int, direction: Direction)
   + Paddle(length: int)
   + GameInstance(status: GameStatus, currentLevel: int, lives: int, totalScore: int)
   + HallOfFameEntry(player: Player, score: int)
```

AI_answer(association):

```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [*] User
    + [1] DestroyBlockApplication contain [*] Game

Final Association Relationships:
    + [1] User associate [1..*] Game
    + [1] Admin associate [1] Game
    + [1] Game associate [1..*] Block
    + [1] Game associate [1..99] Level
    + [1] Level associate [1..*] Block
    + [1] Game associate [1] Ball
    + [1] Game associate [1] Paddle
    + [1] Game associate [1] GameInstance
    + [1] Game associate [1] HallOfFameEntry
    + [1] Player associate [1] GameInstance
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player extends User
    + Admin extends User
    + Block extends Object
    + Level extends Object
    + Ball extends Object
    + Paddle extends Object
    + GameInstance extends Object
    + HallOfFameEntry extends Object
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + AdminMode()
   + PlayMode()
   + Direction(Up, Down, Left, Right)
   + GameStatus(Active, Paused, Ended)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, mode: AdminMode/PlayMode)
   + Player()
   + Admin()
   + Game(name: String, blocks: Set<Block>, levels: List<Level>, speedIncreaseFactor: float, maxLength: int, minLength: int)
   + Block(color: String, points: int)
   + Level(number: int, arrangement: Block[][], random: boolean, numBlocks: int)
   + Ball(speed: int, direction: Direction)
   + Paddle(length: int)
   + GameInstance(status: GameStatus, currentLevel: int, lives: int, totalScore: int)
   + HallOfFameEntry(player: Player, score: int)

Relationships:
# Final Inheritance Relationships:
   + Player extends User
   + Admin extends User
   + Block extends Object
   + Level extends Object
   + Ball extends Object
   + Paddle extends Object
   + GameInstance extends Object
   + HallOfFameEntry extends Object
# Final Association Relationships:
   + [1] User associate [1..*] Game
   + [1] Admin associate [1] Game
   + [1] Game associate [1..*] Block
   + [1] Game associate [1..99] Level
   + [1] Level associate [1..*] Block
   + [1] Game associate [1] Ball
   + [1] Game associate [1] Paddle
   + [1] Game associate [1] GameInstance
   + [1] Game associate [1] HallOfFameEntry
   + [1] Player associate [1] GameInstance
   + [1] DestroyBlockApplication contain [*] User
   + [1] DestroyBlockApplication contain [*] Game
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: AdminMode (enum) - Enum Attributes: [], Class Attributes: []
Class: PlayMode (enum) - Enum Attributes: [], Class Attributes: []
Class: Direction (enum) - Enum Attributes: [Up, Down, Left, Right], Class Attributes: []
Class: GameStatus (enum) - Enum Attributes: [Active, Paused, Ended], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String,mode:AdminMode/PlayMode]
Class: Player (class) - Enum Attributes: [], Class Attributes: []
Class: Admin (class) - Enum Attributes: [], Class Attributes: []
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,blocks:Set<Block>,levels:List<Level>,speedIncreaseFactor:float,maxLength:int,minLength:int]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:String,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:Block[][],random:boolean,numBlocks:int]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:Direction]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int]
Class: GameInstance (class) - Enum Attributes: [], Class Attributes: [status:GameStatus,currentLevel:int,lives:int,totalScore:int]
Class: HallOfFameEntry (class) - Enum Attributes: [], Class Attributes: [player:Player,score:int]
Relationships:
 False Player inheritance False User
 False Admin inheritance False User
 False Block inheritance False Object
 False Level inheritance False Object
 False Ball inheritance False Object
 False Paddle inheritance False Object
 False GameInstance inheritance False Object
 False HallOfFameEntry inheritance False Object
 1 User association 1..* Game
 1 Admin association 1 Game
 1 Game association 1..* Block
 1 Game association 1..99 Level
 1 Level association 1..* Block
 1 Game association 1 Ball
 1 Game association 1 Paddle
 1 Game association 1 GameInstance
 1 Game association 1 HallOfFameEntry
 1 Player association 1 GameInstance
 1 DestroyBlockApplication association * User
 1 DestroyBlockApplication association * Game
--------------------------------------------------------------------------------
--13/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'HallOfFameEntry(class)' - 'HallOfFameEntry(class)'
 'Direction(enum)' - 'PlayedBlockAssignment(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'GameInstance(class)' - 'PlayedGame(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
 'HallOfFameEntry(class):score' - 'score'
 'GameInstance(class):currentLevel' - 'currentLevel'
 'GameInstance(class):lives' - 'lives'
-Relationships:
 ' 1 User association 1..* Game' - ' 1 User association * Game'
 ' 1 Game association 1..* Block' - ' 1 Game association * Block'
 ' 1 Game association 1..99 Level' - ' 1 Game association 1..* Level'
 ' 1 Game association 1 Ball' - ' 1 Game association 1 Ball'
 ' 1 Game association 1 Paddle' - ' 1 Game association 1 Paddle'
 ' 1 Game association 1 GameInstance' - ' 1 Game association * PlayedGame'
 ' 1 Game association 1 HallOfFameEntry' - ' * HallOfFameEntry association 1 Game'
 ' 1 DestroyBlockApplication association * User' - ' 1 DestroyBlock association * User'
 ' 1 DestroyBlockApplication association * Game' - ' 1 DestroyBlock association * Game'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             15                  10                  13                  
Attributes          31                  7                   30                  
Associations        12                  9                   18                  
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------14/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + BlockColor(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User(username:string, password:string, role:UserRole)
    + Game(name:string, hallOfFame:List<User>, levels:List<Level>)
    + Level(number:int, blocksArrangement:List<Block>, random:boolean, startingBlocks:List<Block>, ballSpeed:int, paddleLength:int)
    + Block(color:BlockColor, points:int, position:Position)
    + Position(x:int, y:int)
    + Player(lives:int, totalScore:int, currentLevel:int)
    + Admin()
    + UserRole(roleType:string)
    + Ball(speed:int, direction:Direction)
    + Direction(up, down, left, right)
--------------------------------------------------------------------------------
2nd conversation AI:

```
Enumerations:
   + Color(red, blue, green)
   + Direction(up, down, left, right)
Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, role: UserRole)
   + Game(name: String, hallOfFame: List<User>, levels: List<Level>)
   + Level(number: int, blocksArrangement: List<Block>, random: boolean, startingBlocks: List<Block>, ballSpeed: int, paddleLength: int)
   + Block(color: Color, points: int, position: Position)
   + Position(x: int, y: int)
   + Player(lives: int, totalScore: int, currentLevel: int)
   + Admin()
   + UserRole(roleType: String)
   + Ball(speed: int, direction: Direction)
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] Game contain [*] Level
    + [1] Level contain [*] Block
    + [1] Level contain [1] Ball
    + [1] Player contain [1] Ball

Final Association Relationships:
    + [1] User associate [0..*] Game
    + [1] Game associate [0..*] User
    + [1] User associate [1] UserRole
    + [1] Game associate [1] Admin
    + [1] Game associate [1] Level
    + [1] Level associate [0..*] Block
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + Player extends User because a Player is a kind of User.
   + Admin extends User because an Admin is a kind of User.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + Color(red, blue, green)
   + Direction(up, down, left, right)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, role: UserRole)
   + Game(name: String, hallOfFame: List<User>, levels: List<Level>)
   + Level(number: int, blocksArrangement: List<Block>, random: boolean, startingBlocks: List<Block>, ballSpeed: int, paddleLength: int)
   + Block(color: Color, points: int, position: Position)
   + Position(x: int, y: int)
   + Player(lives: int, totalScore: int, currentLevel: int)
   + Admin()

Relationships:
# Final Association Relationships:
   + [1] User associate [0..*] Game
   + [1] Game associate [0..*] User
   + [1] User associate [1] UserRole
   + [1] Game associate [1] Admin
   + [1] Game associate [1] Level
   + [1] Level associate [0..*] Block
   + [1] Game contain [*] Level
   + [1] Level contain [*] Block
   + [1] Level contain [1] Ball
   + [1] Player contain [1] Ball
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: Color (enum) - Enum Attributes: [red, blue, green], Class Attributes: []
Class: Direction (enum) - Enum Attributes: [up, down, left, right], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String,role:UserRole]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,hallOfFame:List<User>,levels:List<Level>]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,blocksArrangement:List<Block>,random:boolean,startingBlocks:List<Block>,ballSpeed:int,paddleLength:int]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:Color,points:int,position:Position]
Class: Position (class) - Enum Attributes: [], Class Attributes: [x:int,y:int]
Class: Player (class) - Enum Attributes: [], Class Attributes: [lives:int,totalScore:int,currentLevel:int]
Class: Admin (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 1 User association 0..* Game
 1 Game association 0..* User
 1 User association 1 UserRole
 1 Game association 1 Admin
 1 Game association 1 Level
 1 Level association 0..* Block
 1 Game association * Level
 1 Level association * Block
 1 Level association 1 Ball
 1 Player association 1 Ball
--------------------------------------------------------------------------------
--14/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Level(class)' - 'Level(class)'
 'Block(class)' - 'Block(class)'
 'Position(class)' - 'PlayedBlockAssignment(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
 'Position(class):x' - 'x'
 'Position(class):y' - 'y'
-Relationships:
 ' 1 User association 0..* Game' - ' 1 User association * Game'
 ' 1 Game association 1 Level' - ' 1 Game association 1..* Level'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  6                   13                  
Attributes          27                  6                   30                  
Associations        7                   2                   18                  
Inheritances        0                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------15/20------Block 223:
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + BlockColor(Red, Blue)
    
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string,  role:UserRole,  mode:Mode)
    + Game( name:string,  hallOfFame:list)
    + Block( color:BlockColor,  points:int)
    + Level( number:int,  arrangement:list)
    + GridPosition( x:int,  y:int)
    + Admin()
    + Player( lives:int,  totalScore:int)
    + Ball( speed:int,  direction:string)
    + Paddle( length:int)
    + UserRole()
    + Mode()
    + GameStatus( paused:boolean)
    + Life()
    + HallOfFameEntry( player:Player,  score:int)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BlockColor(Red, Blue)
Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, role: UserRole, mode: Mode)
   + Game(name: String, hallOfFame: List)
   + Block(color: BlockColor, points: int)
   + Level(number: int, arrangement: List)
   + GridPosition(x: int, y: int)
   + Admin()
   + Player(lives: int, totalScore: int)
   + Ball(speed: int, direction: String)
   + Paddle(length: int)
   + UserRole()
   + Mode()
   + GameStatus(paused: boolean)
   + Life()
   + HallOfFameEntry(player: Player, score: int)
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] Game
    + [1] Game contain [*] Block
    + [1] Game contain [*] Level
    + [1] Level contain [*] Block
    + [1] Level contain [*] GridPosition
    + [1] Player contain [1] Ball
    + [1] Player contain [1] Paddle
    + [1] GameStatus contain [1] Game
    + [1] User contain [1] UserRole
    + [1] User contain [1] Mode
    + [1] Life contain [1] Player
    + [1] HallOfFameEntry contain [1] Player

Final Association Relationships:
    + [0..1] User associate [1] Player
    + [0..1] User associate [1] Admin
    + [1] User associate [1] Mode
    + [1] Admin associate [1] Game
    + [1] Player associate [1] Game
    + [1] Player associate [1] GameStatus
    + [0..1] GameStatus associate [1] Game
    + [0..1] GameStatus associate [1] Level
    + [0..1] GameStatus associate [1] Block
    + [1] Block associate [0..1] Level
    + [1] Level associate [0..1] Game
    + [1] Level associate [*] Block
    + [1] Level associate [*] GridPosition
    + [1] Player associate [1] Ball
    + [1] Player associate [1] Paddle
    + [1] HallOfFameEntry associate [1] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + Admin inherit User
   + Player inherit User
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + BlockColor(Red, Blue)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Game(name: String, hallOfFame: List)
   + Block(color: BlockColor, points: int)
   + Level(number: int, arrangement: List)
   + GridPosition(x: int, y: int)
   + Admin()
   + Player(lives: int, totalScore: int)
   + Ball(speed: int, direction: String)
   + Paddle(length: int)
   + UserRole()
   + Mode()
   + GameStatus(paused: boolean)
   + Life()
   + HallOfFameEntry(player: Player, score: int)

Relationships:
# Final Association Relationships:
   + [1] User associate [1] Player
   + [1] User associate [1] Admin
   + [1] User associate [1] Mode
   + [1] Admin associate [1] Game
   + [1] Player associate [1] Game
   + [1] Player associate [1] GameStatus
   + [0..1] GameStatus associate [1] Game
   + [0..1] GameStatus associate [1] Level
   + [0..1] GameStatus associate [1] Block
   + [1] Block associate [0..1] Level
   + [1] Level associate [0..1] Game
   + [1] Level associate [*] Block
   + [1] Level associate [*] GridPosition
   + [1] Player associate [1] Ball
   + [1] Player associate [1] Paddle
   + [1] HallOfFameEntry associate [1] Player
   + [1] DestroyBlockApplication contain [1] Game
   + [1] Game contain [*] Block
   + [1] Game contain [*] Level
   + [1] Level contain [*] Block
   + [1] Level contain [*] GridPosition
   + [1] Player contain [1] Ball
   + [1] Player contain [1] Paddle
   + [1] GameStatus contain [1] Game
   + [1] User contain [1] UserRole
   + [1] User contain [1] Mode
   + [1] Life contain [1] Player
   + [1] HallOfFameEntry contain [1] Player
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: BlockColor (enum) - Enum Attributes: [Red, Blue], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,hallOfFame:List]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:BlockColor,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:List]
Class: GridPosition (class) - Enum Attributes: [], Class Attributes: [x:int,y:int]
Class: Admin (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [lives:int,totalScore:int]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:String]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int]
Class: UserRole (class) - Enum Attributes: [], Class Attributes: []
Class: Mode (class) - Enum Attributes: [], Class Attributes: []
Class: GameStatus (class) - Enum Attributes: [], Class Attributes: [paused:boolean]
Class: Life (class) - Enum Attributes: [], Class Attributes: []
Class: HallOfFameEntry (class) - Enum Attributes: [], Class Attributes: [player:Player,score:int]
Relationships:
 1 User association 1 Player
 1 User association 1 Admin
 1 User association 1 Mode
 1 Admin association 1 Game
 1 Player association 1 Game
 1 Player association 1 GameStatus
 0..1 GameStatus association 1 Game
 0..1 GameStatus association 1 Level
 0..1 GameStatus association 1 Block
 1 Block association 0..1 Level
 1 Level association 0..1 Game
 1 Level association * Block
 1 Level association * GridPosition
 1 Player association 1 Ball
 1 Player association 1 Paddle
 1 HallOfFameEntry association 1 Player
 1 DestroyBlockApplication association 1 Game
 1 Game association * Block
 1 Game association * Level
 1 Level association * Block
 1 Level association * GridPosition
 1 Player association 1 Ball
 1 Player association 1 Paddle
 1 GameStatus association 1 Game
 1 User association 1 UserRole
 1 User association 1 Mode
 1 Life association 1 Player
 1 HallOfFameEntry association 1 Player
--------------------------------------------------------------------------------
--15/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'HallOfFameEntry(class)' - 'HallOfFameEntry(class)'
 'GridPosition(class)' - 'PlayedBlockAssignment(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
 'HallOfFameEntry(class):score' - 'score'
 'GridPosition(class):x' - 'x'
 'GridPosition(class):y' - 'y'
-Relationships:
 ' 1 Level association 0..1 Game' - ' 1 Game association 1..* Level'
 ' 1 DestroyBlockApplication association 1 Game' - ' 1 DestroyBlock association * Game'
 ' 1 Game association * Block' - ' 1 Game association * Block'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             16                  9                   13                  
Attributes          20                  7                   30                  
Associations        28                  3                   18                  
Inheritances        0                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------16/20------Block 223:
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + BlockColor(Red, Blue, Green)
    
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string,  role:UserRole)
    + Game( name:string,  hallOfFame:HallOfFame)
    + Admin()
    + Level( number:int,  arrangement:Block[][],  random:boolean)
    + Paddle( length:int)
    + Ball( speed:int,  direction:string)
    + Player( lives:int,  totalScore:int)
    + HallOfFame()
    + UserRole()
    + SavedGame()
    + GameSession()
    + GridSystem()
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + Color(Red, Blue, Green)
   + UserRole()
   + Direction()
Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, role: UserRole)
   + Game(name: String, hallOfFame: HallOfFame)
   + Admin()
   + Level(number: int, arrangement: Block[][], random: boolean)
   + Paddle(length: int)
   + Ball(speed: int, direction: Direction)
   + Player(lives: int, totalScore: int)
   + HallOfFame()
   + SavedGame()
   + GameSession()
   + GridSystem()
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] User
    + [1] DestroyBlockApplication contain [1] Game
    + [0..*] Game contain [1] HallOfFame
    + [1] Game contain [99] Level
    + [1] Level contain [*] Block
    + [1] Level contain [1] Paddle
    + [1] Level contain [1] Ball
    + [1] Player contain [1] GameSession
    + [1] GameSession contain [1] SavedGame

Final Association Relationships:
    + [1] User associate [0..*] Game
    + [1] Admin associate [1] Game
    + [1] Game associate [0..*] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Intermediate Inheritance Relationships:
   + Admin extends User because an Admin is a type of User.
   + Player extends User because a Player is a type of User.
   + Block does not extend Level because a Block is a part of a Level, delete this inheritance.
   + Ball extends GameSession because a Ball is a part of a GameSession.
   + Paddle extends GameSession because a Paddle is a part of a GameSession.
   + SavedGame extends GameSession because a SavedGame is a part of a GameSession.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + Color(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, role: UserRole)
   + Game(name: String, hallOfFame: HallOfFame)
   + Admin()
   + Level(number: int, arrangement: Block[][], random: boolean)
   + Block(color: Color, points: int)
   + Paddle(length: int)
   + Ball(speed: int, direction: Direction)
   + Player(lives: int, totalScore: int)
   + HallOfFame()
   + SavedGame()
   + GameSession()
   + GridSystem()

Relationships:
# Final Association Relationships:
   + [1] User associate [0..*] Game
   + [1] Admin associate [1] Game
   + [1] Game associate [0..*] Player
   + [1] DestroyBlockApplication contain [1] User
   + [1] DestroyBlockApplication contain [1] Game
   + [0..*] Game contain [1] HallOfFame
   + [1] Game contain [99] Level
   + [1] Level contain [*] Block
   + [1] Level contain [1] Paddle
   + [1] Level contain [1] Ball
   + [1] Player contain [1] GameSession
   + [1] GameSession contain [1] SavedGame
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: Color (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String,role:UserRole]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,hallOfFame:HallOfFame]
Class: Admin (class) - Enum Attributes: [], Class Attributes: []
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:Block[][],random:boolean]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:Color,points:int]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:Direction]
Class: Player (class) - Enum Attributes: [], Class Attributes: [lives:int,totalScore:int]
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: []
Class: SavedGame (class) - Enum Attributes: [], Class Attributes: []
Class: GameSession (class) - Enum Attributes: [], Class Attributes: []
Class: GridSystem (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 1 User association 0..* Game
 1 Admin association 1 Game
 1 Game association 0..* Player
 1 DestroyBlockApplication association 1 User
 1 DestroyBlockApplication association 1 Game
 0..* Game association 1 HallOfFame
 1 Game association 99 Level
 1 Level association * Block
 1 Level association 1 Paddle
 1 Level association 1 Ball
 1 Player association 1 GameSession
 1 GameSession association 1 SavedGame
--------------------------------------------------------------------------------
--16/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Level(class)' - 'Level(class)'
 'Block(class)' - 'Block(class)'
 'Paddle(class)' - 'Paddle(class)'
 'Ball(class)' - 'Ball(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
 'GameSession(class)' - 'PlayedGame(class)'
 'GridSystem(class)' - 'BlockAssignment(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
-Relationships:
 ' 1 User association 0..* Game' - ' 1 User association * Game'
 ' 1 DestroyBlockApplication association 1 User' - ' 1 DestroyBlock association * User'
 ' 1 DestroyBlockApplication association 1 Game' - ' 1 DestroyBlock association * Game'
 ' 0..* Game association 1 HallOfFame' - ' * HallOfFameEntry association 1 Game'
 ' 1 Game association 99 Level' - ' 1 Game association 1..* Level'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  10                  13                  
Attributes          18                  4                   30                  
Associations        12                  5                   18                  
Inheritances        0                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------17/20------Block 223:
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + BlockColor(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string)
    + Player()
    + Admin()
    + Game( name:string,  blocks:Set<Block>,  levels:List<Level>,  speedIncreaseFactor:int,  maxPaddleLength:int,  minPaddleLength:int)
    + Block( color:BlockColor,  points:int)
    + Level( number:int,  arrangement:Map<Position, Block>,  random:boolean,  numBlocks:int)
    + Position( x:int, y:int)
    + Ball( speed:int, direction:Direction)
    + Paddle( length:int)
    + Life()
    + HallOfFame()
    + Score()
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BlockColor(Red, Blue, Green)
Classes:
   + DestroyBlockApplication()
   + User(username:String, password:String)
   + Player()
   + Admin()
   + Game(name:String, blocks:Set<Block>, levels:List<Level>, speedIncreaseFactor:int, maxPaddleLength:int, minPaddleLength:int)
   + Block(color:BlockColor, points:int)
   + Level(number:int, arrangement:Map<Position, Block>, random:boolean, numBlocks:int)
   + Position(x:int, y:int)
   + Ball(speed:int, direction:Direction)
   + Paddle(length:int)
   + Life()
   + HallOfFame()
   + Score()
```

AI_answer(association):

```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] HallOfFame
    + [1] User contain [1] Player
    + [1] User contain [0..1] Admin
    + [1] Game contain [*] Block
    + [1] Game contain [*] Level
    + [1] Level contain [*] Block
    + [1] Level contain [1] Ball
    + [1] Level contain [1] Paddle
    + [1] Player contain [*] Life
    + [1] Player contain [*] Score

Final Association Relationships:
    + [1] User associate [0..1] Player
    + [0..1] User associate [0..1] Admin
    + [1] Admin associate [1] Game
    + [1] Player associate [1] Game
    + [1] Game associate [1] HallOfFame
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player inherit User
    + Admin inherit User
    + Level inherit Object
    + Ball inherit Object
    + Paddle inherit Object
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username:String, password:String)
   + Player()
   + Admin()
   + Game(name:String, blocks:Set<Block>, levels:List<Level>, speedIncreaseFactor:int, maxPaddleLength:int, minPaddleLength:int)
   + Block(color:BlockColor, points:int)
   + Level(number:int, arrangement:Map<Position, Block>, random:boolean, numBlocks:int)
   + Position(x:int, y:int)
   + Ball(speed:int, direction:Direction)
   + Paddle(length:int)
   + Life()
   + HallOfFame()
   + Score()

Relationships:
# Final Inheritance Relationships:
   + Player extends User
   + Admin extends User
# Final Association Relationships:
   + [1] User associate [1] Player
   + [0..1] User associate [0..1] Admin
   + [1] Admin associate [1] Game
   + [1] Player associate [1] Game
   + [1] Game associate [1] HallOfFame
   + [1] DestroyBlockApplication contain [1] HallOfFame
   + [1] User contain [1] Player
   + [1] User contain [0..1] Admin
   + [1] Game contain [*] Block
   + [1] Game contain [*] Level
   + [1] Level contain [*] Block
   + [1] Level contain [1] Ball
   + [1] Level contain [1] Paddle
   + [1] Player contain [*] Life
   + [1] Player contain [*] Score
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: BlockColor (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Class: Player (class) - Enum Attributes: [], Class Attributes: []
Class: Admin (class) - Enum Attributes: [], Class Attributes: []
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,blocks:Set<Block>,levels:List<Level>,speedIncreaseFactor:int,maxPaddleLength:int,minPaddleLength:int]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:BlockColor,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:Map<Position,Block>:,random:boolean,numBlocks:int]
Class: Position (class) - Enum Attributes: [], Class Attributes: [x:int,y:int]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:Direction]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int]
Class: Life (class) - Enum Attributes: [], Class Attributes: []
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: []
Class: Score (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False Player inheritance False User
 False Admin inheritance False User
 1 User association 1 Player
 0..1 User association 0..1 Admin
 1 Admin association 1 Game
 1 Player association 1 Game
 1 Game association 1 HallOfFame
 1 DestroyBlockApplication association 1 HallOfFame
 1 User association 1 Player
 1 User association 0..1 Admin
 1 Game association * Block
 1 Game association * Level
 1 Level association * Block
 1 Level association 1 Ball
 1 Level association 1 Paddle
 1 Player association * Life
 1 Player association * Score
--------------------------------------------------------------------------------
--17/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'Position(class)' - 'PlayedBlockAssignment(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
 'Position(class):x' - 'x'
 'Position(class):y' - 'y'
-Relationships:
 ' 1 Game association 1 HallOfFame' - ' * HallOfFameEntry association 1 Game'
 ' 1 DestroyBlockApplication association 1 HallOfFame' - ' 1 DestroyBlock association * HallOfFameEntry'
 ' 1 Game association * Block' - ' 1 Game association * Block'
 ' 1 Game association * Level' - ' 1 Game association 1..* Level'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   13                  
Attributes          23                  6                   30                  
Associations        15                  4                   18                  
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------18/20------Block 223:
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + BlockColor(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string,  role:UserRole)
    + Game( name:string)
    + Admin()
    + Player()
    + Block( color:BlockColor,  points:int)
    + Level( number:int,  arrangement:array<Block>)
    + PlayArea()
    + Ball( speed:int,  direction:string)
    + Paddle( length:int,  position:string)
    + Life( count:int)
    + HighScore()
    + GameHallOfFame()
    + SavedGame()
    + UserRole()
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + BlockColor(Red, Blue, Green)
Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, role: UserRole)
   + Game(name: String)
   + Admin()
   + Player()
   + Block(color: BlockColor, points: int)
   + Level(number: int, arrangement: Block[])
   + PlayArea()
   + Ball(speed: int, direction: String)
   + Paddle(length: int, position: String)
   + Life(count: int)
   + HighScore()
   + GameHallOfFame()
   + SavedGame()
   + UserRole()
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] Game
    + [1] Game contain [*] Block
    + [1] Game contain [99] Level
    + [1] Level contain [*] Block
    + [1] PlayArea contain [1] Ball
    + [1] PlayArea contain [1] Paddle
    + [1] Player contain [1] Life
    + [1] GameHallOfFame contain [1] HighScore
    + [1] User contain [1] UserRole
    + [0..1] User contain [1] Player
    + [0..1] User contain [1] Admin
    + [0..1] Game contain [1] SavedGame

Final Association Relationships:
    + [1] Admin associate [1] Game
    + [1] Player associate [1] Game
    + [1] User associate [1] Game
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Intermediate reasoning results:
   + Admin extends User because an admin is a kind of user in the DestroyBlock application.
   + Player extends User because a player is a kind of user in the DestroyBlock application.

Final Inheritance Relationships:
   + Admin extends User
   + Player extends User
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, role: UserRole)
   + Game(name: String)
   + Block(color: BlockColor, points: int)
   + Level(number: int, arrangement: Block[])
   + PlayArea()
   + Ball(speed: int, direction: String)
   + Paddle(length: int, position: String)
   + Life(count: int)
   + HighScore()
   + GameHallOfFame()
   + SavedGame()
   + UserRole()

Relationships:
# Final Association Relationships:
   + [1] Admin associate [1] Game
   + [1] Player associate [1] Game
   + [1] User associate [1] Game
   + [1] DestroyBlockApplication contain [1] Game
   + [1] Game contain [*] Block
   + [1] Game contain [99] Level
   + [1] Level contain [*] Block
   + [1] PlayArea contain [1] Ball
   + [1] PlayArea contain [1] Paddle
   + [1] Player contain [1] Life
   + [1] GameHallOfFame contain [1] HighScore
   + [1] User contain [1] UserRole
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: BlockColor (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String,role:UserRole]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:BlockColor,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:Block[]]
Class: PlayArea (class) - Enum Attributes: [], Class Attributes: []
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:String]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int,position:String]
Class: Life (class) - Enum Attributes: [], Class Attributes: [count:int]
Class: HighScore (class) - Enum Attributes: [], Class Attributes: []
Class: GameHallOfFame (class) - Enum Attributes: [], Class Attributes: []
Class: SavedGame (class) - Enum Attributes: [], Class Attributes: []
Class: UserRole (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 1 Admin association 1 Game
 1 Player association 1 Game
 1 User association 1 Game
 1 DestroyBlockApplication association 1 Game
 1 Game association * Block
 1 Game association 99 Level
 1 Level association * Block
 1 PlayArea association 1 Ball
 1 PlayArea association 1 Paddle
 1 Player association 1 Life
 1 GameHallOfFame association 1 HighScore
 1 User association 1 UserRole
--------------------------------------------------------------------------------
--18/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'HighScore(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
-Relationships:
 ' 1 User association 1 Game' - ' 1 User association * Game'
 ' 1 DestroyBlockApplication association 1 Game' - ' 1 DestroyBlock association * Game'
 ' 1 Game association * Block' - ' 1 Game association * Block'
 ' 1 Game association 99 Level' - ' 1 Game association 1..* Level'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  8                   13                  
Attributes          16                  4                   30                  
Associations        9                   4                   18                  
Inheritances        0                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------19/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + BlockColor(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string,  role:UserRole)
    + Game( name:string,  hallOfFame:HallOfFame)
    + Block( color:BlockColor,  points:int)
    + Level( number:int,  arrangement:string)
    + GridSystem()
    + Player( lives:int,  totalScore:int)
    + Ball( speed:int,  direction:string)
    + Paddle( length:int)
    + HallOfFame()
    + GameState()
    + PauseState()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + Color(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String, role: UserRole)
   + Game(name: String, hallOfFame: HallOfFame)
   + Block(color: Color, points: int)
   + Level(number: int, arrangement: String)
   + Player(lives: int, totalScore: int)
   + Ball(speed: int, direction: String)
   + Paddle(length: int)
   + HallOfFame()
   + GameState()
   + PauseState()

AI_answer(association):

```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] GameState
    + [1] DestroyBlockApplication contain [1] PauseState
    + [1] User contain [1] Player
    + [1] Game contain [1] HallOfFame
    + [1] Game contain [*] Level
    + [1] Game contain [*] Block
    + [1] Level contain [*] Block
    + [1] Player contain [1] Ball
    + [1] Player contain [1] Paddle

Final Association Relationships:
    + [1] User associate [1] UserRole
    + [1] User associate [1] Game
    + [1] Game associate [1] User
    + [0..1] Player associate [1] GameState
    + [0..1] Player associate [1] Game
    + [0..*] Game associate [0..*] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Admin extends User
    + Player extends User
    + GameLevel extends Level
    + GameBlock extends Block
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + Color(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Admin()
   + Player(lives: int, totalScore: int)
   + Game(name: String, hallOfFame: HallOfFame)
   + Block(color: Color, points: int)
   + Level(number: int, arrangement: String)
   + Ball(speed: int, direction: String)
   + Paddle(length: int)
   + HallOfFame()
   + GameState()
   + PauseState()

Relationships:
# Final Inheritance Relationships:
   + Admin extends User
   + Player extends User
# Final Association Relationships:
   + [1] User associate [1] Game
   + [1] Game associate [1] User
   + [0..1] Player associate [1] GameState
   + [0..1] Player associate [1] Game
   + [0..*] Game associate [0..*] Player
   + [1] DestroyBlockApplication contain [1] GameState
   + [1] DestroyBlockApplication contain [1] PauseState
   + [1] User contain [1] Player
   + [1] Game contain [1] HallOfFame
   + [1] Game contain [*] Level
   + [1] Game contain [*] Block
   + [1] Level contain [*] Block
   + [1] Player contain [1] Ball
   + [1] Player contain [1] Paddle
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: Color (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Class: Admin (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [lives:int,totalScore:int]
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,hallOfFame:HallOfFame]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:Color,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:String]
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:String]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: [length:int]
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: []
Class: GameState (class) - Enum Attributes: [], Class Attributes: []
Class: PauseState (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False Admin inheritance False User
 False Player inheritance False User
 1 User association 1 Game
 1 Game association 1 User
 0..1 Player association 1 GameState
 0..1 Player association 1 Game
 0..* Game association 0..* Player
 1 DestroyBlockApplication association 1 GameState
 1 DestroyBlockApplication association 1 PauseState
 1 User association 1 Player
 1 Game association 1 HallOfFame
 1 Game association * Level
 1 Game association * Block
 1 Level association * Block
 1 Player association 1 Ball
 1 Player association 1 Paddle
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
-Relationships:
 ' 1 User association 1 Game' - ' 1 User association * Game'
 ' 1 Game association 1 HallOfFame' - ' * HallOfFameEntry association 1 Game'
 ' 1 Game association * Level' - ' 1 Game association 1..* Level'
 ' 1 Game association * Block' - ' 1 Game association * Block'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  8                   13                  
Attributes          16                  4                   30                  
Associations        14                  4                   18                  
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------20/20------Block 223:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + BlockColor(Red, Blue, Green)
# Classes (attributes):
    + DestroyBlockApplication()
    + User( username:string,  password:string)
    + Admin( mode:AdminMode)
    + Player()
    + Game( name:string,  levels:int,  maxLevels:int,  speedIncreaseFactor:float,  maxPaddleLength:int,  minPaddleLength:int)
    + Block( color:BlockColor,  points:int)
    + Level( number:int,  arrangement:string,  random:bool,  blocksNumber:int)
    + PlayArea()
    + Ball( speed:int,  direction:string)
    + Paddle()
    + Life()
    + HallOfFame()
    + SavedGame()
    + HighScore()
    + GameSession()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Admin(mode: AdminMode)
   + Player()
   + Game(name: String, levels: int, maxLevels: int, speedIncreaseFactor: float, maxPaddleLength: int, minPaddleLength: int)
   + Block(color: BlockColor, points: int)
   + Level(number: int, arrangement: String, random: boolean, blocksNumber: int)
   + PlayArea()
   + Ball(speed: int, direction: String)
   + Paddle()
   + Life()
   + HallOfFame()
   + SavedGame()
   + HighScore()
   + GameSession()

AI_answer(association):
```
Final Composition Relationships:
    + [1] DestroyBlockApplication contain [1] HallOfFame
    + [1] User contain [1] Player
    + [1] User contain [1] Admin
    + [1] Game contain [*] Block
    + [1] Game contain [*] Level
    + [1] Game contain [1] HallOfFame
    + [1] Level contain [*] Block
    + [1] PlayArea contain [1] Ball
    + [1] PlayArea contain [1] Paddle
    + [1] GameSession contain [1] SavedGame
    + [1] HallOfFame contain [*] HighScore

Final Association Relationships:
    + [0..1] User associate [1] Player
    + [0..1] User associate [1] Admin
    + [1] Admin associate [1] Game
    + [1] Player associate [1] Game
    + [1] Game associate [1] Level
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Admin inherit User
    + Player inherit User
    + Block inherit Object
    + Level inherit Object
    + Ball inherit Object
    + Paddle inherit Object
    + Life inherit Object
    + SavedGame inherit Object
    + HighScore inherit Object
    + GameSession inherit Object
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + BlockColor(Red, Blue, Green)

Classes:
   + DestroyBlockApplication()
   + User(username: String, password: String)
   + Admin(mode: AdminMode)
   + Player()
   + Game(name: String, levels: int, maxLevels: int, speedIncreaseFactor: float, maxPaddleLength: int, minPaddleLength: int)
   + Block(color: BlockColor, points: int)
   + Level(number: int, arrangement: String, random: boolean, blocksNumber: int)
   + PlayArea()
   + Ball(speed: int, direction: String)
   + Paddle()
   + Life()
   + HallOfFame()
   + SavedGame()
   + HighScore()
   + GameSession()

Relationships:
# Final Inheritance Relationships:
   + Admin extends User
   + Player extends User
   + Block extends Object
   + Level extends Object
   + Ball extends Object
   + Paddle extends Object
   + Life extends Object
   + SavedGame extends Object
   + HighScore extends Object
   + GameSession extends Object

# Final Association Relationships:
   + [0..1] User associate [1] Player
   + [0..1] User associate [1] Admin
   + [1] Admin associate [1] Game
   + [1] Player associate [1] Game
   + [1] Game associate [1] Level
   + [1] DestroyBlockApplication contain [1] HallOfFame
   + [1] User contain [1] Player
   + [1] User contain [1] Admin
   + [1] Game contain [*] Block
   + [1] Game contain [*] Level
   + [1] Game contain [1] HallOfFame
   + [1] Level contain [*] Block
   + [1] PlayArea contain [1] Ball
   + [1] PlayArea contain [1] Paddle
   + [1] GameSession contain [1] SavedGame
   + [1] HallOfFame contain [*] HighScore
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: BlockColor (enum) - Enum Attributes: [Red, Blue, Green], Class Attributes: []
Class: DestroyBlockApplication (class) - Enum Attributes: [], Class Attributes: []
Class: User (class) - Enum Attributes: [], Class Attributes: [username:String,password:String]
Class: Admin (class) - Enum Attributes: [], Class Attributes: [mode:AdminMode]
Class: Player (class) - Enum Attributes: [], Class Attributes: []
Class: Game (class) - Enum Attributes: [], Class Attributes: [name:String,levels:int,maxLevels:int,speedIncreaseFactor:float,maxPaddleLength:int,minPaddleLength:int]
Class: Block (class) - Enum Attributes: [], Class Attributes: [color:BlockColor,points:int]
Class: Level (class) - Enum Attributes: [], Class Attributes: [number:int,arrangement:String,random:boolean,blocksNumber:int]
Class: PlayArea (class) - Enum Attributes: [], Class Attributes: []
Class: Ball (class) - Enum Attributes: [], Class Attributes: [speed:int,direction:String]
Class: Paddle (class) - Enum Attributes: [], Class Attributes: []
Class: Life (class) - Enum Attributes: [], Class Attributes: []
Class: HallOfFame (class) - Enum Attributes: [], Class Attributes: []
Class: SavedGame (class) - Enum Attributes: [], Class Attributes: []
Class: HighScore (class) - Enum Attributes: [], Class Attributes: []
Class: GameSession (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False Admin inheritance False User
 False Player inheritance False User
 False Block inheritance False Object
 False Level inheritance False Object
 False Ball inheritance False Object
 False Paddle inheritance False Object
 False Life inheritance False Object
 False SavedGame inheritance False Object
 False HighScore inheritance False Object
 False GameSession inheritance False Object
 0..1 User association 1 Player
 0..1 User association 1 Admin
 1 Admin association 1 Game
 1 Player association 1 Game
 1 Game association 1 Level
 1 DestroyBlockApplication association 1 HallOfFame
 1 User association 1 Player
 1 User association 1 Admin
 1 Game association * Block
 1 Game association * Level
 1 Game association 1 HallOfFame
 1 Level association * Block
 1 PlayArea association 1 Ball
 1 PlayArea association 1 Paddle
 1 GameSession association 1 SavedGame
 1 HallOfFame association * HighScore
--------------------------------------------------------------------------------
--20/20--Classes and attributes matching process:
-Class:
 'User(class)' - 'User(class)'
 'Game(class)' - 'Game(class)'
 'Block(class)' - 'Block(class)'
 'Level(class)' - 'Level(class)'
 'Ball(class)' - 'Ball(class)'
 'Paddle(class)' - 'Paddle(class)'
 'DestroyBlockApplication(class)' - 'DestroyBlock(class)'
 'HallOfFame(class)' - 'HallOfFameEntry(class)'
 'GameSession(class)' - 'PlayedGame(class)'
-Attributes:
 'User(class):username' - 'username'
 'User(class):password' - 'password'
 'Game(class):name' - 'name'
 'Block(class):points' - 'points'
-Relationships:
 ' 1 Game association 1 Level' - ' 1 Game association 1..* Level'
 ' 1 DestroyBlockApplication association 1 HallOfFame' - ' 1 DestroyBlock association * HallOfFameEntry'
 ' 1 Game association * Block' - ' 1 Game association * Block'
 ' 1 Game association 1 HallOfFame' - ' * HallOfFameEntry association 1 Game'
--------------------------------------------------------------------------------
Block 223, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             16                  9                   13                  
Attributes          20                  4                   30                  
Associations        16                  4                   18                  
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
Block 223, avg-method2
--------------------------------------------------------------------------------
Metric              Precision      Recall         F1             F2             
--------------------------------------------------------------------------------
Classes             0.618          0.665          0.641          0.655
Attributes          0.235          0.187          0.208          0.195
Associations        0.314          0.236          0.269          0.248
Inheritances        0.000          0.000          0.000          0.000
--------------------------------------------------------------------------------
