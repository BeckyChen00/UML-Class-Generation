------------------------------------------------------------
---------------------1/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
    + PlayerColor(Red, Blue, Green, Yellow)

# Classes (attributes):
    + Tile-O()
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + HiddenTile()
    + ActionTile()
    + PlayingPiece( color:PlayerColor)
    + ActionDeck( cards:List<ActionCard>)
    + GameDesigner()
    + Player( playerNumber:int)
    + Die()
    + Turn()
    + GameResult()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] GameBoard
    + [1] Tile-O contain [1] ActionDeck
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] GameBoard contain [1] HiddenTile
    + [1] GameBoard contain [*] ActionTile
    + [1] GameBoard contain [*] Player
    + [1] ActionDeck contain [32] ActionCard

Final Association Relationships:
    + [1] Tile associate [*] ConnectionPiece
    + [1] Tile associate [*] Tile
    + [1] Tile associate [0..1] ActionTile
    + [1] ConnectionPiece associate [1] Tile
    + [1] ConnectionPiece associate [1] Tile
    + [1] HiddenTile associate [1] Tile
    + [1] ActionTile associate [0..1] Tile
    + [1] ActionTile associate [1] ActionCard
    + [1] Player associate [1] PlayingPiece
    + [1] Player associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] GameResult associate [1] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
   + Player inherit PlayingPiece
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

Relationships:
# Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
# Final Association Relationships:
   + [1] Tile associate [*] ConnectionPiece
   + [1] Tile associate [*] Tile
   + [1] Tile associate [0..1] ActionTile
   + [1] ConnectionPiece associate [1] Tile
   + [1] HiddenTile associate [1] Tile
   + [1] ActionTile associate [0..1] Tile
   + [1] ActionTile associate [1] ActionCard
   + [1] Player associate [1] PlayingPiece
   + [1] Player associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] GameResult associate [1] Player
   + [1] Tile-O contain [1] GameBoard
   + [1] Tile-O contain [1] ActionDeck
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [1] HiddenTile
   + [1] GameBoard contain [*] ActionTile
   + [1] GameBoard contain [*] Player
   + [1] ActionDeck contain [32] ActionCard
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: PlayerColor (enum) - Enum Attributes: [Red, Blue, Green, Yellow], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: HiddenTile (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:PlayerColor]
Class: ActionDeck (class) - Enum Attributes: [], Class Attributes: [cards:List<ActionCard>]
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int]
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: GameResult (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False HiddenTile inheritance False Tile
 False ActionTile inheritance False Tile
 1 Tile association * ConnectionPiece
 1 Tile association * Tile
 1 Tile association 0..1 ActionTile
 1 ConnectionPiece association 1 Tile
 1 HiddenTile association 1 Tile
 1 ActionTile association 0..1 Tile
 1 ActionTile association 1 ActionCard
 1 Player association 1 PlayingPiece
 1 Player association 1 Turn
 1 Turn association 1 Player
 1 GameResult association 1 Player
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association 1 HiddenTile
 1 GameBoard association * ActionTile
 1 GameBoard association * Player
 1 ActionDeck association 32 ActionCard
--------------------------------------------------------------------------------
--1/20--Classes and attributes matching process:
-Class:
 'Tile-O(class)' - 'TileO(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Player(class)' - 'Player(class)'
 'Die(class)' - 'Die(class)'
 'PlayerColor(enum)' - 'Color(enum)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
 'ActionDeck(class)' - 'Deck(class)'
-Attributes:
 'PlayerColor(enum):Red' - 'red'
 'PlayerColor(enum):Blue' - 'blue'
 'PlayerColor(enum):Green' - 'green'
 'PlayerColor(enum):Yellow' - 'yellow'
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 1 Tile association * ConnectionPiece' - ' 0..4 Connection association 2 Tile'
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
 ' 1 GameBoard association * Player' - ' 1 Game association 0..1 Player'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   18                  
Attributes          7                   4                   16                  
Associations        15                  4                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------------------------------------------------------------------
---------------------2/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
    + PlayerColor(Red, Blue, Green, Yellow)

# Classes (attributes):
    + Tile-O()
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + HiddenTile()
    + ActionTile()
    + PlayingPiece( color:PlayerColor)
    + ActionDeck( cards:List<ActionCard>)
    + GameDesigner()
    + Player( playerNumber:int)
    + Die()
    + Turn()
    + GameResult()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] GameBoard
    + [1] Tile-O contain [1] ActionDeck
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] GameBoard contain [1] HiddenTile
    + [1] GameBoard contain [*] ActionTile
    + [1] GameBoard contain [*] Player
    + [1] ActionDeck contain [32] ActionCard

Final Association Relationships:
    + [1] Tile associate [*] ConnectionPiece
    + [1] Tile associate [*] Tile
    + [1] Tile associate [0..1] ActionTile
    + [1] ConnectionPiece associate [1] Tile
    + [1] ConnectionPiece associate [1] Tile
    + [1] HiddenTile associate [1] Tile
    + [1] ActionTile associate [0..1] Tile
    + [1] ActionTile associate [1] ActionCard
    + [1] Player associate [1] PlayingPiece
    + [1] Player associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] GameResult associate [1] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
   + Player inherit PlayingPiece
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

Relationships:
# Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
# Final Association Relationships:
   + [1] Tile associate [*] ConnectionPiece
   + [1] Tile associate [*] Tile
   + [1] Tile associate [0..1] ActionTile
   + [1] ConnectionPiece associate [1] Tile
   + [1] HiddenTile associate [1] Tile
   + [1] ActionTile associate [0..1] Tile
   + [1] ActionTile associate [1] ActionCard
   + [1] Player associate [1] PlayingPiece
   + [1] Player associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] GameResult associate [1] Player
   + [1] Tile-O contain [1] GameBoard
   + [1] Tile-O contain [1] ActionDeck
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [1] HiddenTile
   + [1] GameBoard contain [*] ActionTile
   + [1] GameBoard contain [*] Player
   + [1] ActionDeck contain [32] ActionCard
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: PlayerColor (enum) - Enum Attributes: [Red, Blue, Green, Yellow], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: HiddenTile (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:PlayerColor]
Class: ActionDeck (class) - Enum Attributes: [], Class Attributes: [cards:List<ActionCard>]
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int]
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: GameResult (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False HiddenTile inheritance False Tile
 False ActionTile inheritance False Tile
 1 Tile association * ConnectionPiece
 1 Tile association * Tile
 1 Tile association 0..1 ActionTile
 1 ConnectionPiece association 1 Tile
 1 HiddenTile association 1 Tile
 1 ActionTile association 0..1 Tile
 1 ActionTile association 1 ActionCard
 1 Player association 1 PlayingPiece
 1 Player association 1 Turn
 1 Turn association 1 Player
 1 GameResult association 1 Player
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association 1 HiddenTile
 1 GameBoard association * ActionTile
 1 GameBoard association * Player
 1 ActionDeck association 32 ActionCard
--------------------------------------------------------------------------------
--2/20--Classes and attributes matching process:
-Class:
 'Tile-O(class)' - 'TileO(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Player(class)' - 'Player(class)'
 'Die(class)' - 'Die(class)'
 'PlayerColor(enum)' - 'Color(enum)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
 'ActionDeck(class)' - 'Deck(class)'
-Attributes:
 'PlayerColor(enum):Red' - 'red'
 'PlayerColor(enum):Blue' - 'blue'
 'PlayerColor(enum):Green' - 'green'
 'PlayerColor(enum):Yellow' - 'yellow'
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 1 Tile association * ConnectionPiece' - ' 0..4 Connection association 2 Tile'
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
 ' 1 GameBoard association * Player' - ' 1 Game association 0..1 Player'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   18                  
Attributes          7                   4                   16                  
Associations        15                  4                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------3/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
    + PlayerColor(Red, Blue, Green, Yellow)

# Classes (attributes):
    + Tile-O()
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + HiddenTile()
    + ActionTile()
    + PlayingPiece( color:PlayerColor)
    + ActionDeck( cards:List<ActionCard>)
    + GameDesigner()
    + Player( playerNumber:int)
    + Die()
    + Turn()
    + GameResult()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] GameBoard
    + [1] Tile-O contain [1] ActionDeck
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] GameBoard contain [1] HiddenTile
    + [1] GameBoard contain [*] ActionTile
    + [1] GameBoard contain [*] Player
    + [1] ActionDeck contain [32] ActionCard

Final Association Relationships:
    + [1] Tile associate [*] ConnectionPiece
    + [1] Tile associate [*] Tile
    + [1] Tile associate [0..1] ActionTile
    + [1] ConnectionPiece associate [1] Tile
    + [1] ConnectionPiece associate [1] Tile
    + [1] HiddenTile associate [1] Tile
    + [1] ActionTile associate [0..1] Tile
    + [1] ActionTile associate [1] ActionCard
    + [1] Player associate [1] PlayingPiece
    + [1] Player associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] GameResult associate [1] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
   + Player inherit PlayingPiece
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

Relationships:
# Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
# Final Association Relationships:
   + [1] Tile associate [*] ConnectionPiece
   + [1] Tile associate [*] Tile
   + [1] Tile associate [0..1] ActionTile
   + [1] ConnectionPiece associate [1] Tile
   + [1] HiddenTile associate [1] Tile
   + [1] ActionTile associate [0..1] Tile
   + [1] ActionTile associate [1] ActionCard
   + [1] Player associate [1] PlayingPiece
   + [1] Player associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] GameResult associate [1] Player
   + [1] Tile-O contain [1] GameBoard
   + [1] Tile-O contain [1] ActionDeck
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [1] HiddenTile
   + [1] GameBoard contain [*] ActionTile
   + [1] GameBoard contain [*] Player
   + [1] ActionDeck contain [32] ActionCard
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: PlayerColor (enum) - Enum Attributes: [Red, Blue, Green, Yellow], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: HiddenTile (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:PlayerColor]
Class: ActionDeck (class) - Enum Attributes: [], Class Attributes: [cards:List<ActionCard>]
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int]
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: GameResult (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False HiddenTile inheritance False Tile
 False ActionTile inheritance False Tile
 1 Tile association * ConnectionPiece
 1 Tile association * Tile
 1 Tile association 0..1 ActionTile
 1 ConnectionPiece association 1 Tile
 1 HiddenTile association 1 Tile
 1 ActionTile association 0..1 Tile
 1 ActionTile association 1 ActionCard
 1 Player association 1 PlayingPiece
 1 Player association 1 Turn
 1 Turn association 1 Player
 1 GameResult association 1 Player
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association 1 HiddenTile
 1 GameBoard association * ActionTile
 1 GameBoard association * Player
 1 ActionDeck association 32 ActionCard
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Class:
 'Tile-O(class)' - 'TileO(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Player(class)' - 'Player(class)'
 'Die(class)' - 'Die(class)'
 'PlayerColor(enum)' - 'Color(enum)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
 'ActionDeck(class)' - 'Deck(class)'
-Attributes:
 'PlayerColor(enum):Red' - 'red'
 'PlayerColor(enum):Blue' - 'blue'
 'PlayerColor(enum):Green' - 'green'
 'PlayerColor(enum):Yellow' - 'yellow'
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 1 Tile association * ConnectionPiece' - ' 0..4 Connection association 2 Tile'
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
 ' 1 GameBoard association * Player' - ' 1 Game association 0..1 Player'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   18                  
Attributes          7                   4                   16                  
Associations        15                  4                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------4/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
    + PlayerColor(Red, Blue, Green, Yellow)

# Classes (attributes):
    + Tile-O()
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + HiddenTile()
    + ActionTile()
    + PlayingPiece( color:PlayerColor)
    + ActionDeck( cards:List<ActionCard>)
    + GameDesigner()
    + Player( playerNumber:int)
    + Die()
    + Turn()
    + GameResult()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] GameBoard
    + [1] Tile-O contain [1] ActionDeck
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] GameBoard contain [1] HiddenTile
    + [1] GameBoard contain [*] ActionTile
    + [1] GameBoard contain [*] Player
    + [1] ActionDeck contain [32] ActionCard

Final Association Relationships:
    + [1] Tile associate [*] ConnectionPiece
    + [1] Tile associate [*] Tile
    + [1] Tile associate [0..1] ActionTile
    + [1] ConnectionPiece associate [1] Tile
    + [1] ConnectionPiece associate [1] Tile
    + [1] HiddenTile associate [1] Tile
    + [1] ActionTile associate [0..1] Tile
    + [1] ActionTile associate [1] ActionCard
    + [1] Player associate [1] PlayingPiece
    + [1] Player associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] GameResult associate [1] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
   + Player inherit PlayingPiece
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

Relationships:
# Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
# Final Association Relationships:
   + [1] Tile associate [*] ConnectionPiece
   + [1] Tile associate [*] Tile
   + [1] Tile associate [0..1] ActionTile
   + [1] ConnectionPiece associate [1] Tile
   + [1] HiddenTile associate [1] Tile
   + [1] ActionTile associate [0..1] Tile
   + [1] ActionTile associate [1] ActionCard
   + [1] Player associate [1] PlayingPiece
   + [1] Player associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] GameResult associate [1] Player
   + [1] Tile-O contain [1] GameBoard
   + [1] Tile-O contain [1] ActionDeck
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [1] HiddenTile
   + [1] GameBoard contain [*] ActionTile
   + [1] GameBoard contain [*] Player
   + [1] ActionDeck contain [32] ActionCard
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: PlayerColor (enum) - Enum Attributes: [Red, Blue, Green, Yellow], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: HiddenTile (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:PlayerColor]
Class: ActionDeck (class) - Enum Attributes: [], Class Attributes: [cards:List<ActionCard>]
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int]
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: GameResult (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False HiddenTile inheritance False Tile
 False ActionTile inheritance False Tile
 1 Tile association * ConnectionPiece
 1 Tile association * Tile
 1 Tile association 0..1 ActionTile
 1 ConnectionPiece association 1 Tile
 1 HiddenTile association 1 Tile
 1 ActionTile association 0..1 Tile
 1 ActionTile association 1 ActionCard
 1 Player association 1 PlayingPiece
 1 Player association 1 Turn
 1 Turn association 1 Player
 1 GameResult association 1 Player
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association 1 HiddenTile
 1 GameBoard association * ActionTile
 1 GameBoard association * Player
 1 ActionDeck association 32 ActionCard
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Class:
 'Tile-O(class)' - 'TileO(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Player(class)' - 'Player(class)'
 'Die(class)' - 'Die(class)'
 'PlayerColor(enum)' - 'Color(enum)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
 'ActionDeck(class)' - 'Deck(class)'
-Attributes:
 'PlayerColor(enum):Red' - 'red'
 'PlayerColor(enum):Blue' - 'blue'
 'PlayerColor(enum):Green' - 'green'
 'PlayerColor(enum):Yellow' - 'yellow'
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 1 Tile association * ConnectionPiece' - ' 0..4 Connection association 2 Tile'
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
 ' 1 GameBoard association * Player' - ' 1 Game association 0..1 Player'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   18                  
Attributes          7                   4                   16                  
Associations        15                  4                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------5/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
    + PlayerColor(Red, Blue, Green, Yellow)

# Classes (attributes):
    + Tile-O()
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + HiddenTile()
    + ActionTile()
    + PlayingPiece( color:PlayerColor)
    + ActionDeck( cards:List<ActionCard>)
    + GameDesigner()
    + Player( playerNumber:int)
    + Die()
    + Turn()
    + GameResult()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] GameBoard
    + [1] Tile-O contain [1] ActionDeck
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] GameBoard contain [1] HiddenTile
    + [1] GameBoard contain [*] ActionTile
    + [1] GameBoard contain [*] Player
    + [1] ActionDeck contain [32] ActionCard

Final Association Relationships:
    + [1] Tile associate [*] ConnectionPiece
    + [1] Tile associate [*] Tile
    + [1] Tile associate [0..1] ActionTile
    + [1] ConnectionPiece associate [1] Tile
    + [1] ConnectionPiece associate [1] Tile
    + [1] HiddenTile associate [1] Tile
    + [1] ActionTile associate [0..1] Tile
    + [1] ActionTile associate [1] ActionCard
    + [1] Player associate [1] PlayingPiece
    + [1] Player associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] GameResult associate [1] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
   + Player inherit PlayingPiece
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

Relationships:
# Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
# Final Association Relationships:
   + [1] Tile associate [*] ConnectionPiece
   + [1] Tile associate [*] Tile
   + [1] Tile associate [0..1] ActionTile
   + [1] ConnectionPiece associate [1] Tile
   + [1] HiddenTile associate [1] Tile
   + [1] ActionTile associate [0..1] Tile
   + [1] ActionTile associate [1] ActionCard
   + [1] Player associate [1] PlayingPiece
   + [1] Player associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] GameResult associate [1] Player
   + [1] Tile-O contain [1] GameBoard
   + [1] Tile-O contain [1] ActionDeck
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [1] HiddenTile
   + [1] GameBoard contain [*] ActionTile
   + [1] GameBoard contain [*] Player
   + [1] ActionDeck contain [32] ActionCard
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: PlayerColor (enum) - Enum Attributes: [Red, Blue, Green, Yellow], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: HiddenTile (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:PlayerColor]
Class: ActionDeck (class) - Enum Attributes: [], Class Attributes: [cards:List<ActionCard>]
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int]
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: GameResult (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False HiddenTile inheritance False Tile
 False ActionTile inheritance False Tile
 1 Tile association * ConnectionPiece
 1 Tile association * Tile
 1 Tile association 0..1 ActionTile
 1 ConnectionPiece association 1 Tile
 1 HiddenTile association 1 Tile
 1 ActionTile association 0..1 Tile
 1 ActionTile association 1 ActionCard
 1 Player association 1 PlayingPiece
 1 Player association 1 Turn
 1 Turn association 1 Player
 1 GameResult association 1 Player
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association 1 HiddenTile
 1 GameBoard association * ActionTile
 1 GameBoard association * Player
 1 ActionDeck association 32 ActionCard
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Class:
 'Tile-O(class)' - 'TileO(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Player(class)' - 'Player(class)'
 'Die(class)' - 'Die(class)'
 'PlayerColor(enum)' - 'Color(enum)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
 'ActionDeck(class)' - 'Deck(class)'
-Attributes:
 'PlayerColor(enum):Red' - 'red'
 'PlayerColor(enum):Blue' - 'blue'
 'PlayerColor(enum):Green' - 'green'
 'PlayerColor(enum):Yellow' - 'yellow'
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 1 Tile association * ConnectionPiece' - ' 0..4 Connection association 2 Tile'
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
 ' 1 GameBoard association * Player' - ' 1 Game association 0..1 Player'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   18                  
Attributes          7                   4                   16                  
Associations        15                  4                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------------------------------------------------------------------
---------------------6/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)
# Classes (attributes):
    + Tile-O()
    + GameDesigner()
    + Player(playerNumber:int, playingPieceColor:string)
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + ActionTile()
    + Die()
    + Turn()
    + ActionCardDeck( actionCards:ActionCard[])
    + PlayingPiece(color:string)
    + Game()
    + GameRules()
    + TurnSequence()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)
Classes:
   + Tile-O()
   + GameDesigner()
   + Player(playerNumber:int, playingPieceColor:String)
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + ActionTile()
   + Die()
   + Turn()
   + ActionCardDeck(actionCards:ActionCard[])
   + PlayingPiece(color:String)
   + Game()
   + GameRules()
   + TurnSequence()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] Game
    + [1] GameDesigner contain [1] Game
    + [1] Game contain [1] GameBoard
    + [0..*] GameBoard contain [1] Tile
    + [0..*] GameBoard contain [1] ConnectionPiece
    + [0..*] GameBoard contain [1] ActionTile
    + [1] Game contain [1] ActionCardDeck
    + [1] ActionCardDeck contain [32] ActionCard

Final Association Relationships:
    + [2..4] Game associate [1] Player
    + [1] Game associate [1] Die
    + [1] Game associate [1] TurnSequence
    + [1] TurnSequence associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] Turn associate [1] PlayingPiece
    + [1] Tile associate [0..1] Tile
    + [1] Tile associate [0..1] Tile
    + [1] Tile associate [0..1] Tile
    + [1] Tile associate [0..1] Tile
    + [1] ActionTile associate [0..1] ActionCard
```
--------------------------------------------------------------------------------
AI_answer(inheritance):

```
Final Inheritance Relationships:
    + ActionTile inherit Tile
    + PlayingPiece inherit Tile
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)

Classes:
   + Tile-O()
   + GameDesigner()
   + Player(playerNumber:int, playingPieceColor:String)
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + ActionTile()
   + Die()
   + Turn()
   + ActionCardDeck(actionCards:ActionCard[])
   + PlayingPiece(color:String)
   + Game()
   + GameRules()

Relationships:
# Final Inheritance Relationships:
   + ActionTile extends Tile
   + PlayingPiece extends Tile
# Final Association Relationships:
   + [2..4] Game associate [1] Player
   + [1] Game associate [1] Die
   + [1] Game associate [1] TurnSequence
   + [1] TurnSequence associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] Turn associate [1] PlayingPiece
   + [1] Tile associate [0..1] Tile
   + [1] ActionTile associate [0..1] ActionCard
   + [1] Tile-O contain [1] Game
   + [1] GameDesigner contain [1] Game
   + [1] Game contain [1] GameBoard
   + [0..*] GameBoard contain [1] Tile
   + [0..*] GameBoard contain [1] ConnectionPiece
   + [0..*] GameBoard contain [1] ActionTile
   + [1] Game contain [1] ActionCardDeck
   + [1] ActionCardDeck contain [32] ActionCard
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ActionCard (enum) - Enum Attributes: [RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int,playingPieceColor:String]
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: ActionCardDeck (class) - Enum Attributes: [], Class Attributes: [actionCards:ActionCard[]]
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:String]
Class: Game (class) - Enum Attributes: [], Class Attributes: []
Class: GameRules (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False ActionTile inheritance False Tile
 False PlayingPiece inheritance False Tile
 2..4 Game association 1 Player
 1 Game association 1 Die
 1 Game association 1 TurnSequence
 1 TurnSequence association 1 Turn
 1 Turn association 1 Player
 1 Turn association 1 PlayingPiece
 1 Tile association 0..1 Tile
 1 ActionTile association 0..1 ActionCard
 1 GameDesigner association 1 Game
 1 Game association 1 GameBoard
 0..* GameBoard association 1 Tile
 0..* GameBoard association 1 ConnectionPiece
 0..* GameBoard association 1 ActionTile
 1 Game association 1 ActionCardDeck
 1 ActionCardDeck association 32 ActionCard
--------------------------------------------------------------------------------
--13/20--Classes and attributes matching process:
-Class:
 'ActionCard(enum)' - 'ActionCard(class)'
 'Tile-O(class)' - 'TileO(class)'
 'Player(class)' - 'Player(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Die(class)' - 'Die(class)'
 'Game(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
-Attributes:
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 2..4 Game association 1 Player' - ' 1 Game association 0..1 Player'
 ' 1 Game association 1 Die' - ' 1 Game association 1 Die'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  8                   18                  
Attributes          9                   0                   16                  
Associations        13                  2                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------------------------------------------------------------------
---------------------7/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)
# Classes (attributes):
    + Tile-O()
    + GameDesigner()
    + Player(playerNumber:int, playingPieceColor:string)
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + ActionTile()
    + Die()
    + Turn()
    + ActionCardDeck( actionCards:ActionCard[])
    + PlayingPiece(color:string)
    + Game()
    + GameRules()
    + TurnSequence()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)
Classes:
   + Tile-O()
   + GameDesigner()
   + Player(playerNumber:int, playingPieceColor:String)
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + ActionTile()
   + Die()
   + Turn()
   + ActionCardDeck(actionCards:ActionCard[])
   + PlayingPiece(color:String)
   + Game()
   + GameRules()
   + TurnSequence()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] Game
    + [1] GameDesigner contain [1] Game
    + [1] Game contain [1] GameBoard
    + [0..*] GameBoard contain [1] Tile
    + [0..*] GameBoard contain [1] ConnectionPiece
    + [0..*] GameBoard contain [1] ActionTile
    + [1] Game contain [1] ActionCardDeck
    + [1] ActionCardDeck contain [32] ActionCard

Final Association Relationships:
    + [2..4] Game associate [1] Player
    + [1] Game associate [1] Die
    + [1] Game associate [1] TurnSequence
    + [1] TurnSequence associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] Turn associate [1] PlayingPiece
    + [1] Tile associate [0..1] Tile
    + [1] Tile associate [0..1] Tile
    + [1] Tile associate [0..1] Tile
    + [1] Tile associate [0..1] Tile
    + [1] ActionTile associate [0..1] ActionCard
```
--------------------------------------------------------------------------------
AI_answer(inheritance):

```
Final Inheritance Relationships:
    + ActionTile inherit Tile
    + PlayingPiece inherit Tile
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)

Classes:
   + Tile-O()
   + GameDesigner()
   + Player(playerNumber:int, playingPieceColor:String)
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + ActionTile()
   + Die()
   + Turn()
   + ActionCardDeck(actionCards:ActionCard[])
   + PlayingPiece(color:String)
   + Game()
   + GameRules()

Relationships:
# Final Inheritance Relationships:
   + ActionTile extends Tile
   + PlayingPiece extends Tile
# Final Association Relationships:
   + [2..4] Game associate [1] Player
   + [1] Game associate [1] Die
   + [1] Game associate [1] TurnSequence
   + [1] TurnSequence associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] Turn associate [1] PlayingPiece
   + [1] Tile associate [0..1] Tile
   + [1] ActionTile associate [0..1] ActionCard
   + [1] Tile-O contain [1] Game
   + [1] GameDesigner contain [1] Game
   + [1] Game contain [1] GameBoard
   + [0..*] GameBoard contain [1] Tile
   + [0..*] GameBoard contain [1] ConnectionPiece
   + [0..*] GameBoard contain [1] ActionTile
   + [1] Game contain [1] ActionCardDeck
   + [1] ActionCardDeck contain [32] ActionCard
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ActionCard (enum) - Enum Attributes: [RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int,playingPieceColor:String]
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: ActionCardDeck (class) - Enum Attributes: [], Class Attributes: [actionCards:ActionCard[]]
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:String]
Class: Game (class) - Enum Attributes: [], Class Attributes: []
Class: GameRules (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False ActionTile inheritance False Tile
 False PlayingPiece inheritance False Tile
 2..4 Game association 1 Player
 1 Game association 1 Die
 1 Game association 1 TurnSequence
 1 TurnSequence association 1 Turn
 1 Turn association 1 Player
 1 Turn association 1 PlayingPiece
 1 Tile association 0..1 Tile
 1 ActionTile association 0..1 ActionCard
 1 GameDesigner association 1 Game
 1 Game association 1 GameBoard
 0..* GameBoard association 1 Tile
 0..* GameBoard association 1 ConnectionPiece
 0..* GameBoard association 1 ActionTile
 1 Game association 1 ActionCardDeck
 1 ActionCardDeck association 32 ActionCard
--------------------------------------------------------------------------------
--13/20--Classes and attributes matching process:
-Class:
 'ActionCard(enum)' - 'ActionCard(class)'
 'Tile-O(class)' - 'TileO(class)'
 'Player(class)' - 'Player(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Die(class)' - 'Die(class)'
 'Game(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
-Attributes:
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 2..4 Game association 1 Player' - ' 1 Game association 0..1 Player'
 ' 1 Game association 1 Die' - ' 1 Game association 1 Die'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  8                   18                  
Attributes          9                   0                   16                  
Associations        13                  2                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------8/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)
# Classes (attributes):
    + Tile-O()
    + GameDesigner()
    + Player(playerNumber:int, playingPieceColor:string)
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + ActionTile()
    + Die()
    + Turn()
    + ActionCardDeck( actionCards:ActionCard[])
    + PlayingPiece(color:string)
    + Game()
    + GameRules()
    + TurnSequence()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)
Classes:
   + Tile-O()
   + GameDesigner()
   + Player(playerNumber:int, playingPieceColor:String)
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + ActionTile()
   + Die()
   + Turn()
   + ActionCardDeck(actionCards:ActionCard[])
   + PlayingPiece(color:String)
   + Game()
   + GameRules()
   + TurnSequence()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] Game
    + [1] GameDesigner contain [1] Game
    + [1] Game contain [1] GameBoard
    + [0..*] GameBoard contain [1] Tile
    + [0..*] GameBoard contain [1] ConnectionPiece
    + [0..*] GameBoard contain [1] ActionTile
    + [1] Game contain [1] ActionCardDeck
    + [1] ActionCardDeck contain [32] ActionCard

Final Association Relationships:
    + [2..4] Game associate [1] Player
    + [1] Game associate [1] Die
    + [1] Game associate [1] TurnSequence
    + [1] TurnSequence associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] Turn associate [1] PlayingPiece
    + [1] Tile associate [0..1] Tile
    + [1] Tile associate [0..1] Tile
    + [1] Tile associate [0..1] Tile
    + [1] Tile associate [0..1] Tile
    + [1] ActionTile associate [0..1] ActionCard
```
--------------------------------------------------------------------------------
AI_answer(inheritance):

```
Final Inheritance Relationships:
    + ActionTile inherit Tile
    + PlayingPiece inherit Tile
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)

Classes:
   + Tile-O()
   + GameDesigner()
   + Player(playerNumber:int, playingPieceColor:String)
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + ActionTile()
   + Die()
   + Turn()
   + ActionCardDeck(actionCards:ActionCard[])
   + PlayingPiece(color:String)
   + Game()
   + GameRules()

Relationships:
# Final Inheritance Relationships:
   + ActionTile extends Tile
   + PlayingPiece extends Tile
# Final Association Relationships:
   + [2..4] Game associate [1] Player
   + [1] Game associate [1] Die
   + [1] Game associate [1] TurnSequence
   + [1] TurnSequence associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] Turn associate [1] PlayingPiece
   + [1] Tile associate [0..1] Tile
   + [1] ActionTile associate [0..1] ActionCard
   + [1] Tile-O contain [1] Game
   + [1] GameDesigner contain [1] Game
   + [1] Game contain [1] GameBoard
   + [0..*] GameBoard contain [1] Tile
   + [0..*] GameBoard contain [1] ConnectionPiece
   + [0..*] GameBoard contain [1] ActionTile
   + [1] Game contain [1] ActionCardDeck
   + [1] ActionCardDeck contain [32] ActionCard
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ActionCard (enum) - Enum Attributes: [RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int,playingPieceColor:String]
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: ActionCardDeck (class) - Enum Attributes: [], Class Attributes: [actionCards:ActionCard[]]
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:String]
Class: Game (class) - Enum Attributes: [], Class Attributes: []
Class: GameRules (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False ActionTile inheritance False Tile
 False PlayingPiece inheritance False Tile
 2..4 Game association 1 Player
 1 Game association 1 Die
 1 Game association 1 TurnSequence
 1 TurnSequence association 1 Turn
 1 Turn association 1 Player
 1 Turn association 1 PlayingPiece
 1 Tile association 0..1 Tile
 1 ActionTile association 0..1 ActionCard
 1 GameDesigner association 1 Game
 1 Game association 1 GameBoard
 0..* GameBoard association 1 Tile
 0..* GameBoard association 1 ConnectionPiece
 0..* GameBoard association 1 ActionTile
 1 Game association 1 ActionCardDeck
 1 ActionCardDeck association 32 ActionCard
--------------------------------------------------------------------------------
--13/20--Classes and attributes matching process:
-Class:
 'ActionCard(enum)' - 'ActionCard(class)'
 'Tile-O(class)' - 'TileO(class)'
 'Player(class)' - 'Player(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Die(class)' - 'Die(class)'
 'Game(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
-Attributes:
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 2..4 Game association 1 Player' - ' 1 Game association 0..1 Player'
 ' 1 Game association 1 Die' - ' 1 Game association 1 Die'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  8                   18                  
Attributes          9                   0                   16                  
Associations        13                  2                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------------------------------------------------------------------
---------------------9/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
    + PlayerColor(Red, Blue, Green, Yellow)

# Classes (attributes):
    + Tile-O()
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + HiddenTile()
    + ActionTile()
    + PlayingPiece( color:PlayerColor)
    + ActionDeck( cards:List<ActionCard>)
    + GameDesigner()
    + Player( playerNumber:int)
    + Die()
    + Turn()
    + GameResult()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] GameBoard
    + [1] Tile-O contain [1] ActionDeck
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] GameBoard contain [1] HiddenTile
    + [1] GameBoard contain [*] ActionTile
    + [1] GameBoard contain [*] Player
    + [1] ActionDeck contain [32] ActionCard

Final Association Relationships:
    + [1] Tile associate [*] ConnectionPiece
    + [1] Tile associate [*] Tile
    + [1] Tile associate [0..1] ActionTile
    + [1] ConnectionPiece associate [1] Tile
    + [1] ConnectionPiece associate [1] Tile
    + [1] HiddenTile associate [1] Tile
    + [1] ActionTile associate [0..1] Tile
    + [1] ActionTile associate [1] ActionCard
    + [1] Player associate [1] PlayingPiece
    + [1] Player associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] GameResult associate [1] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
   + Player inherit PlayingPiece
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

Relationships:
# Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
# Final Association Relationships:
   + [1] Tile associate [*] ConnectionPiece
   + [1] Tile associate [*] Tile
   + [1] Tile associate [0..1] ActionTile
   + [1] ConnectionPiece associate [1] Tile
   + [1] HiddenTile associate [1] Tile
   + [1] ActionTile associate [0..1] Tile
   + [1] ActionTile associate [1] ActionCard
   + [1] Player associate [1] PlayingPiece
   + [1] Player associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] GameResult associate [1] Player
   + [1] Tile-O contain [1] GameBoard
   + [1] Tile-O contain [1] ActionDeck
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [1] HiddenTile
   + [1] GameBoard contain [*] ActionTile
   + [1] GameBoard contain [*] Player
   + [1] ActionDeck contain [32] ActionCard
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: PlayerColor (enum) - Enum Attributes: [Red, Blue, Green, Yellow], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: HiddenTile (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:PlayerColor]
Class: ActionDeck (class) - Enum Attributes: [], Class Attributes: [cards:List<ActionCard>]
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int]
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: GameResult (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False HiddenTile inheritance False Tile
 False ActionTile inheritance False Tile
 1 Tile association * ConnectionPiece
 1 Tile association * Tile
 1 Tile association 0..1 ActionTile
 1 ConnectionPiece association 1 Tile
 1 HiddenTile association 1 Tile
 1 ActionTile association 0..1 Tile
 1 ActionTile association 1 ActionCard
 1 Player association 1 PlayingPiece
 1 Player association 1 Turn
 1 Turn association 1 Player
 1 GameResult association 1 Player
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association 1 HiddenTile
 1 GameBoard association * ActionTile
 1 GameBoard association * Player
 1 ActionDeck association 32 ActionCard
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Class:
 'Tile-O(class)' - 'TileO(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Player(class)' - 'Player(class)'
 'Die(class)' - 'Die(class)'
 'PlayerColor(enum)' - 'Color(enum)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
 'ActionDeck(class)' - 'Deck(class)'
-Attributes:
 'PlayerColor(enum):Red' - 'red'
 'PlayerColor(enum):Blue' - 'blue'
 'PlayerColor(enum):Green' - 'green'
 'PlayerColor(enum):Yellow' - 'yellow'
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 1 Tile association * ConnectionPiece' - ' 0..4 Connection association 2 Tile'
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
 ' 1 GameBoard association * Player' - ' 1 Game association 0..1 Player'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   18                  
Attributes          7                   4                   16                  
Associations        15                  4                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------10/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
# Classes (attributes):
    + TileO()
    + GameDesigner()
    + Player( playerNumber:int,  color:string)
    + Board()
    + Tile( connectedTiles:List<Tile>,  isHidden:boolean,  isActionTile:boolean,  visited:boolean)
    + ConnectionPiece()
    + ActionTile( turnsToRegular:int)
    + PlayingPiece()
    + Die()
    + Turn( currentPlayer:Player,  actionCard:ActionCard)
    + Game()
    + ActionDeck( cards:List<ActionCard>)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TileOActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
Classes:
   + TileO()
   + GameDesigner()
   + Player(playerNumber: int, color: String)
   + Board()
   + Tile(connectedTiles: List<Tile>, isHidden: boolean, isActionTile: boolean, visited: boolean)
   + ConnectionPiece()
   + ActionTile(turnsToRegular: int)
   + PlayingPiece()
   + Die()
   + Turn(currentPlayer: Player, actionCard: TileOActionCard)
   + Game()
   + ActionDeck(cards: List<TileOActionCard)

AI_answer(association):
```
Final Composition Relationships:
    + [1] TileO contain [1] Game
    + [1] TileO contain [1] GameDesigner
    + [1] Game contain [1] Board
    + [1] Game contain [1] ActionDeck
    + [1] Board contain [*] Tile
    + [1] Board contain [*] ConnectionPiece
    + [1] ActionDeck contain [32] TileOActionCard

Final Association Relationships:
    + [1] GameDesigner associate [2..4] Player
    + [1] Player associate [1] PlayingPiece
    + [1] Player associate [1] Turn
    + [1] Board associate [1] Tile
    + [1] Board associate [1] ConnectionPiece
    + [1] Tile associate [4] Tile
    + [1] Tile associate [1] ActionTile
    + [1] ActionTile associate [1] TileOActionCard
    + [1] Turn associate [1] Player
    + [1] Turn associate [1] TileOActionCard
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + ActionTile extends Tile
   + PlayingPiece extends Player
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + TileOActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)

Classes:
   + TileO()
   + GameDesigner()
   + Player(playerNumber: int, color: String)
   + Board()
   + Tile(connectedTiles: List<Tile>, isHidden: boolean, isActionTile: boolean, visited: boolean)
   + ConnectionPiece()
   + ActionTile(turnsToRegular: int)
   + PlayingPiece()
   + Die()
   + Turn(currentPlayer: Player, actionCard: TileOActionCard)
   + Game()
   + ActionDeck(cards: List<TileOActionCard)

Relationships:
# Final Inheritance Relationships:
   + ActionTile extends Tile
   + PlayingPiece extends Player

# Final Association Relationships:
   + [1] GameDesigner associate [2..4] Player
   + [1] Player associate [1] PlayingPiece
   + [1] Player associate [1] Turn
   + [1] Board associate [1] Tile
   + [1] Board associate [1] ConnectionPiece
   + [1] Tile associate [4] Tile
   + [1] Tile associate [1] ActionTile
   + [1] ActionTile associate [1] TileOActionCard
   + [1] Turn associate [1] Player
   + [1] Turn associate [1] TileOActionCard
   + [1] TileO contain [1] Game
   + [1] TileO contain [1] GameDesigner
   + [1] Game contain [1] Board
   + [1] Game contain [1] ActionDeck
   + [1] Board contain [*] Tile
   + [1] Board contain [*] ConnectionPiece
   + [1] ActionDeck contain [32] TileOActionCard
```

--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: TileOActionCard (enum) - Enum Attributes: [RollExtraTurn, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn], Class Attributes: []
Class: TileO (class) - Enum Attributes: [], Class Attributes: []
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int,color:String]
Class: Board (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: [connectedTiles:List<Tile>,isHidden:boolean,isActionTile:boolean,visited:boolean]
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: [turnsToRegular:int]
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: []
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: [currentPlayer:Player,actionCard:TileOActionCard]
Class: Game (class) - Enum Attributes: [], Class Attributes: []
Class: ActionDeck (class) - Enum Attributes: [], Class Attributes: [cards:List<TileOActionCard]
Relationships:
 False ActionTile inheritance False Tile
 False PlayingPiece inheritance False Player
 1 GameDesigner association 2..4 Player
 1 Player association 1 PlayingPiece
 1 Player association 1 Turn
 1 Board association 1 Tile
 1 Board association 1 ConnectionPiece
 1 Tile association 4 Tile
 1 Tile association 1 ActionTile
 1 ActionTile association 1 TileOActionCard
 1 Turn association 1 Player
 1 Turn association 1 TileOActionCard
 1 TileO association 1 Game
 1 TileO association 1 GameDesigner
 1 Game association 1 Board
 1 Game association 1 ActionDeck
 1 Board association * Tile
 1 Board association * ConnectionPiece
 1 ActionDeck association 32 TileOActionCard
--------------------------------------------------------------------------------
--10/20--Classes and attributes matching process:
-Class:
 'TileO(class)' - 'TileO(class)'
 'Player(class)' - 'Player(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Die(class)' - 'Die(class)'
 'Game(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
 'ActionDeck(class)' - 'Deck(class)'
-Attributes:
 'Player(class):color' - 'color'
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 1 TileO association 1 Game' - ' 1 TileO association * Game'
 ' 1 Game association 1 ActionDeck' - ' 1 Game association 1 Deck'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  8                   18                  
Attributes          15                  1                   16                  
Associations        17                  2                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------11/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnectionPiece, MoveToArbitraryTile, LoseNextTurn)
# Classes (attributes):
    + TileOGame()
    + GameDesigner()
    + Player( playerNumber:int,  playingPieceColor:string)
    + GameBoard( tiles:Tile[], connectionPieces:ConnectionPiece[])
    + Tile( connectedTiles:Tile[], isHidden:boolean, isActionTile:boolean, isVisited:boolean)
    + ConnectionPiece()
    + Die()
    + ActionTile( turnsAsRegularTile:int)
    + Turn( player:Player, rolledNumber:int)
    + DeckOfActionCards( actionCards:ActionCard[])
    + TurnSequence( currentPlayer:Player)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnectionPiece, MoveToArbitraryTile, LoseNextTurn)
Classes:
   + TileOGame()
   + GameDesigner()
   + Player(playerNumber: int, playingPieceColor: String)
   + GameBoard()
   + Tile(isHidden: boolean, isActionTile: boolean, isVisited: boolean)
   + ConnectionPiece()
   + Die()
   + ActionTile(turnsAsRegularTile: int)
   + Turn()
   + DeckOfActionCards()
   + TurnSequence(currentPlayer: Player)

AI_answer(association):
```
Final Composition Relationships:
    + [1] TileOGame contain [1] GameDesigner
    + [1] TileOGame contain [1] GameBoard
    + [1] TileOGame contain [1] DeckOfActionCards
    + [1] GameDesigner contain [1] GameBoard
    + [1] GameDesigner contain [1] DeckOfActionCards
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] DeckOfActionCards contain [32] ActionTile

Final Association Relationships:
    + [1] TileOGame associate [*] Player
    + [1] TileOGame associate [1] TurnSequence
    + [1] GameDesigner associate [1] TileOGame
    + [1] Player associate [1] Turn
    + [1] Player associate [1] Tile
    + [1] Turn associate [1] Die
    + [1] Turn associate [1] GameBoard
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + GameDesigner inherit Player
    + Player inherit TurnSequence
    + GameBoard inherit TileOGame
    + Tile inherit GameBoard
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnectionPiece, MoveToArbitraryTile, LoseNextTurn)

Classes:
   + TileOGame()
   + GameDesigner()
   + Player(playerNumber: int, playingPieceColor: String)
   + GameBoard()
   + Tile(isHidden: boolean, isActionTile: boolean, isVisited: boolean)
   + ConnectionPiece()
   + Die()
   + ActionTile(turnsAsRegularTile: int)
   + Turn()
   + DeckOfActionCards()
   + TurnSequence(currentPlayer: Player)

Relationships:
# Final Association Relationships:
   + [1] TileOGame associate [*] Player
   + [1] TileOGame associate [1] TurnSequence
   + [1] TileOGame contain [1] GameDesigner
   + [1] TileOGame contain [1] GameBoard
   + [1] TileOGame contain [1] DeckOfActionCards
   + [1] GameDesigner contain [1] GameBoard
   + [1] GameDesigner contain [1] DeckOfActionCards
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] DeckOfActionCards contain [32] ActionTile
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ActionCard (enum) - Enum Attributes: [RollExtraTurn, ConnectTiles, RemoveConnectionPiece, MoveToArbitraryTile, LoseNextTurn], Class Attributes: []
Class: TileOGame (class) - Enum Attributes: [], Class Attributes: []
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int,playingPieceColor:String]
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: [isHidden:boolean,isActionTile:boolean,isVisited:boolean]
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: [turnsAsRegularTile:int]
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: DeckOfActionCards (class) - Enum Attributes: [], Class Attributes: []
Class: TurnSequence (class) - Enum Attributes: [], Class Attributes: [currentPlayer:Player]
Relationships:
 1 TileOGame association * Player
 1 TileOGame association 1 TurnSequence
 1 TileOGame association 1 GameDesigner
 1 TileOGame association 1 GameBoard
 1 TileOGame association 1 DeckOfActionCards
 1 GameDesigner association 1 GameBoard
 1 GameDesigner association 1 DeckOfActionCards
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 DeckOfActionCards association 32 ActionTile
--------------------------------------------------------------------------------
--11/20--Classes and attributes matching process:
-Class:
 'ActionCard(enum)' - 'ActionCard(class)'
 'Player(class)' - 'Player(class)'
 'Tile(class)' - 'Tile(class)'
 'Die(class)' - 'Die(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
-Attributes:
-Relationships:
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             12                  7                   18                  
Attributes          12                  0                   16                  
Associations        10                  2                   12                  
Inheritances        0                   0                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------12/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)
# Classes (attributes):
    + TileOGame()
    + Player( playerNumber:int,  playingPieceColor:string)
    + GameDesigner()
    + Tile( connectedTiles:List<Tile>,  isHidden:boolean,  isActionTile:boolean,  isVisited:boolean)
    + ConnectionPiece()
    + ActionTile( turnsAsRegularTile:int)
    + ActionDeck( actionCards:List<ActionCard>)
    + Die()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)
Classes:
   + TileOGame()
   + Player(playerNumber:int, playingPieceColor:String)
   + GameDesigner()
   + Tile(connectedTiles:List<Tile>, isHidden:boolean, isActionTile:boolean, isVisited:boolean)
   + ConnectionPiece()
   + ActionTile(turnsAsRegularTile:int)
   + ActionDeck(actionCards:List<ActionCard>)
   + Die()

AI_answer(association):
```
Final Composition Relationships:
    + [1] TileOGame contain [1] ActionDeck
    + [1] TileOGame contain [1] Die
    + [1] TileOGame contain [1] GameDesigner
    + [1] TileOGame contain [*] Player
    + [1] TileOGame contain [*] Tile
    + [1] Tile contain [*] ConnectionPiece
    + [1] ActionDeck contain [32] ActionCard

Final Association Relationships:
    + [1] Player associate [1] TileOGame
    + [1] Tile associate [*] Tile
    + [1] Tile associate [*] ConnectionPiece
    + [1] Tile associate [1] ActionTile
    + [1] ActionTile associate [1] ActionCard
    + [1] ActionCard associate [1] TileOGame
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + TileOGame inherit GameDesigner
    + Player inherit GameDesigner
    + Tile inherit Tile
    + ConnectionPiece inherit ConnectionPiece
    + ActionTile inherit Tile
    + ActionDeck inherit ActionDeck
    + Die inherit Die
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)

Classes:
   + TileOGame()
   + Player(playerNumber:int, playingPieceColor:String)
   + GameDesigner()
   + Tile(connectedTiles:List<Tile>, isHidden:boolean, isActionTile:boolean, isVisited:boolean)
   + ConnectionPiece()
   + ActionTile(turnsAsRegularTile:int)
   + ActionDeck(actionCards:List<ActionCard>)
   + Die()

Relationships:
# Final Inheritance Relationships:
# Final Association Relationships:
   + [1] Player associate [1] TileOGame
   + [1] Tile associate [*] Tile
   + [1] Tile associate [*] ConnectionPiece
   + [1] Tile associate [1] ActionTile
   + [1] ActionTile associate [1] ActionCard
   + [1] ActionCard associate [1] TileOGame
   + [1] TileOGame contain [1] ActionDeck
   + [1] TileOGame contain [1] Die
   + [1] TileOGame contain [1] GameDesigner
   + [1] TileOGame contain [*] Player
   + [1] TileOGame contain [*] Tile
   + [1] Tile contain [*] ConnectionPiece
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ActionCard (enum) - Enum Attributes: [RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn], Class Attributes: []
Class: TileOGame (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int,playingPieceColor:String]
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: [connectedTiles:List<Tile>,isHidden:boolean,isActionTile:boolean,isVisited:boolean]
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: [turnsAsRegularTile:int]
Class: ActionDeck (class) - Enum Attributes: [], Class Attributes: [actionCards:List<ActionCard>]
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 1 Player association 1 TileOGame
 1 Tile association * Tile
 1 Tile association * ConnectionPiece
 1 Tile association 1 ActionTile
 1 ActionTile association 1 ActionCard
 1 ActionCard association 1 TileOGame
 1 TileOGame association 1 ActionDeck
 1 TileOGame association 1 Die
 1 TileOGame association 1 GameDesigner
 1 TileOGame association * Player
 1 TileOGame association * Tile
 1 Tile association * ConnectionPiece
--------------------------------------------------------------------------------
--12/20--Classes and attributes matching process:
-Class:
 'ActionCard(enum)' - 'ActionCard(class)'
 'Player(class)' - 'Player(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Die(class)' - 'Die(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
 'ActionDeck(class)' - 'Deck(class)'
-Attributes:
-Relationships:
 ' 1 Tile association * ConnectionPiece' - ' 0..4 Connection association 2 Tile'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             9                   7                   18                  
Attributes          13                  0                   16                  
Associations        12                  1                   12                  
Inheritances        0                   0                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------13/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)
# Classes (attributes):
    + Tile-O()
    + GameDesigner()
    + Player(playerNumber:int, playingPieceColor:string)
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + ActionTile()
    + Die()
    + Turn()
    + ActionCardDeck( actionCards:ActionCard[])
    + PlayingPiece(color:string)
    + Game()
    + GameRules()
    + TurnSequence()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)
Classes:
   + Tile-O()
   + GameDesigner()
   + Player(playerNumber:int, playingPieceColor:String)
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + ActionTile()
   + Die()
   + Turn()
   + ActionCardDeck(actionCards:ActionCard[])
   + PlayingPiece(color:String)
   + Game()
   + GameRules()
   + TurnSequence()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] Game
    + [1] GameDesigner contain [1] Game
    + [1] Game contain [1] GameBoard
    + [0..*] GameBoard contain [1] Tile
    + [0..*] GameBoard contain [1] ConnectionPiece
    + [0..*] GameBoard contain [1] ActionTile
    + [1] Game contain [1] ActionCardDeck
    + [1] ActionCardDeck contain [32] ActionCard

Final Association Relationships:
    + [2..4] Game associate [1] Player
    + [1] Game associate [1] Die
    + [1] Game associate [1] TurnSequence
    + [1] TurnSequence associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] Turn associate [1] PlayingPiece
    + [1] Tile associate [0..1] Tile
    + [1] Tile associate [0..1] Tile
    + [1] Tile associate [0..1] Tile
    + [1] Tile associate [0..1] Tile
    + [1] ActionTile associate [0..1] ActionCard
```
--------------------------------------------------------------------------------
AI_answer(inheritance):

```
Final Inheritance Relationships:
    + ActionTile inherit Tile
    + PlayingPiece inherit Tile
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn)

Classes:
   + Tile-O()
   + GameDesigner()
   + Player(playerNumber:int, playingPieceColor:String)
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + ActionTile()
   + Die()
   + Turn()
   + ActionCardDeck(actionCards:ActionCard[])
   + PlayingPiece(color:String)
   + Game()
   + GameRules()

Relationships:
# Final Inheritance Relationships:
   + ActionTile extends Tile
   + PlayingPiece extends Tile
# Final Association Relationships:
   + [2..4] Game associate [1] Player
   + [1] Game associate [1] Die
   + [1] Game associate [1] TurnSequence
   + [1] TurnSequence associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] Turn associate [1] PlayingPiece
   + [1] Tile associate [0..1] Tile
   + [1] ActionTile associate [0..1] ActionCard
   + [1] Tile-O contain [1] Game
   + [1] GameDesigner contain [1] Game
   + [1] Game contain [1] GameBoard
   + [0..*] GameBoard contain [1] Tile
   + [0..*] GameBoard contain [1] ConnectionPiece
   + [0..*] GameBoard contain [1] ActionTile
   + [1] Game contain [1] ActionCardDeck
   + [1] ActionCardDeck contain [32] ActionCard
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ActionCard (enum) - Enum Attributes: [RollExtraTurn, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseNextTurn], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int,playingPieceColor:String]
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: ActionCardDeck (class) - Enum Attributes: [], Class Attributes: [actionCards:ActionCard[]]
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:String]
Class: Game (class) - Enum Attributes: [], Class Attributes: []
Class: GameRules (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False ActionTile inheritance False Tile
 False PlayingPiece inheritance False Tile
 2..4 Game association 1 Player
 1 Game association 1 Die
 1 Game association 1 TurnSequence
 1 TurnSequence association 1 Turn
 1 Turn association 1 Player
 1 Turn association 1 PlayingPiece
 1 Tile association 0..1 Tile
 1 ActionTile association 0..1 ActionCard
 1 GameDesigner association 1 Game
 1 Game association 1 GameBoard
 0..* GameBoard association 1 Tile
 0..* GameBoard association 1 ConnectionPiece
 0..* GameBoard association 1 ActionTile
 1 Game association 1 ActionCardDeck
 1 ActionCardDeck association 32 ActionCard
--------------------------------------------------------------------------------
--13/20--Classes and attributes matching process:
-Class:
 'ActionCard(enum)' - 'ActionCard(class)'
 'Tile-O(class)' - 'TileO(class)'
 'Player(class)' - 'Player(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Die(class)' - 'Die(class)'
 'Game(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
-Attributes:
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 2..4 Game association 1 Player' - ' 1 Game association 0..1 Player'
 ' 1 Game association 1 Die' - ' 1 Game association 1 Die'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  8                   18                  
Attributes          9                   0                   16                  
Associations        13                  2                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------14/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
    + PlayerColor(Red, Blue, Green, Yellow)

# Classes (attributes):
    + Tile-O()
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + HiddenTile()
    + ActionTile()
    + PlayingPiece( color:PlayerColor)
    + ActionDeck( cards:List<ActionCard>)
    + GameDesigner()
    + Player( playerNumber:int)
    + Die()
    + Turn()
    + GameResult()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] GameBoard
    + [1] Tile-O contain [1] ActionDeck
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] GameBoard contain [1] HiddenTile
    + [1] GameBoard contain [*] ActionTile
    + [1] GameBoard contain [*] Player
    + [1] ActionDeck contain [32] ActionCard

Final Association Relationships:
    + [1] Tile associate [*] ConnectionPiece
    + [1] Tile associate [*] Tile
    + [1] Tile associate [0..1] ActionTile
    + [1] ConnectionPiece associate [1] Tile
    + [1] ConnectionPiece associate [1] Tile
    + [1] HiddenTile associate [1] Tile
    + [1] ActionTile associate [0..1] Tile
    + [1] ActionTile associate [1] ActionCard
    + [1] Player associate [1] PlayingPiece
    + [1] Player associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] GameResult associate [1] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
   + Player inherit PlayingPiece
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

Relationships:
# Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
# Final Association Relationships:
   + [1] Tile associate [*] ConnectionPiece
   + [1] Tile associate [*] Tile
   + [1] Tile associate [0..1] ActionTile
   + [1] ConnectionPiece associate [1] Tile
   + [1] HiddenTile associate [1] Tile
   + [1] ActionTile associate [0..1] Tile
   + [1] ActionTile associate [1] ActionCard
   + [1] Player associate [1] PlayingPiece
   + [1] Player associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] GameResult associate [1] Player
   + [1] Tile-O contain [1] GameBoard
   + [1] Tile-O contain [1] ActionDeck
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [1] HiddenTile
   + [1] GameBoard contain [*] ActionTile
   + [1] GameBoard contain [*] Player
   + [1] ActionDeck contain [32] ActionCard
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: PlayerColor (enum) - Enum Attributes: [Red, Blue, Green, Yellow], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: HiddenTile (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:PlayerColor]
Class: ActionDeck (class) - Enum Attributes: [], Class Attributes: [cards:List<ActionCard>]
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int]
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: GameResult (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False HiddenTile inheritance False Tile
 False ActionTile inheritance False Tile
 1 Tile association * ConnectionPiece
 1 Tile association * Tile
 1 Tile association 0..1 ActionTile
 1 ConnectionPiece association 1 Tile
 1 HiddenTile association 1 Tile
 1 ActionTile association 0..1 Tile
 1 ActionTile association 1 ActionCard
 1 Player association 1 PlayingPiece
 1 Player association 1 Turn
 1 Turn association 1 Player
 1 GameResult association 1 Player
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association 1 HiddenTile
 1 GameBoard association * ActionTile
 1 GameBoard association * Player
 1 ActionDeck association 32 ActionCard
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Class:
 'Tile-O(class)' - 'TileO(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Player(class)' - 'Player(class)'
 'Die(class)' - 'Die(class)'
 'PlayerColor(enum)' - 'Color(enum)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
 'ActionDeck(class)' - 'Deck(class)'
-Attributes:
 'PlayerColor(enum):Red' - 'red'
 'PlayerColor(enum):Blue' - 'blue'
 'PlayerColor(enum):Green' - 'green'
 'PlayerColor(enum):Yellow' - 'yellow'
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 1 Tile association * ConnectionPiece' - ' 0..4 Connection association 2 Tile'
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
 ' 1 GameBoard association * Player' - ' 1 Game association 0..1 Player'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   18                  
Attributes          7                   4                   16                  
Associations        15                  4                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------15/20------Tile-O:
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + ActionType(RollDie, ConnectTiles, RemoveConnectionPiece, MovePlayingPiece, LoseTurn)
# Classes (attributes):
    + Tile-O()
    + GameDesigner()
    + Player( color:string)
    + GameBoard()
    + Tile( connectedTiles:Tile[], isHidden:boolean, isActionTile:boolean, color:Color)
    + ConnectionPiece()
    + ActionCard( type:ActionType)
    + Dice()
    + Turn( player:Player, actionCard:ActionCard)
    + TurnOrder()
    + Color( name:string)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ActionType(RollDie, ConnectTiles, RemoveConnectionPiece, MovePlayingPiece, LoseTurn)
   + Color()

Classes:
   + TileO()
   + GameDesigner()
   + Player(color:Color)
   + GameBoard()
   + Tile(connectedTiles: Tile[], isHidden:boolean, isActionTile:boolean, color:Color)
   + ConnectionPiece()
   + ActionCard(type:ActionType)
   + Dice()
   + Turn(player:Player, actionCard:ActionCard)
   + TurnOrder()
```

AI_answer(association):
```
Final Composition Relationships:
   + [1] TileO contain [1] GameDesigner
   + [1] TileO contain [1] GameBoard
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [32] ActionCard
   + [1] Turn contain [1] Player

Final Association Relationships:
   + [1] TileO associate [*] Player
   + [1] GameDesigner associate [2] Tile
   + [1] Player associate [1] GameBoard
   + [1] Player associate [1..*] Turn
   + [1] Tile associate [1] Tile
   + [0..1] Tile associate [1] ActionCard
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player inherit TurnOrder
    + GameDesigner inherit Player
    + GameBoard inherit TileO
    + Tile inherit TileO
    + ConnectionPiece inherit TileO
    + ActionCard inherit TileO
    + Dice inherit TileO
    + Turn inherit TileO
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ActionType(RollDie, ConnectTiles, RemoveConnectionPiece, MovePlayingPiece, LoseTurn)
   + Color()

Classes:
   + TileO()
   + GameDesigner()
   + Player(color:Color)
   + GameBoard()
   + Tile(connectedTiles: Tile[], isHidden:boolean, isActionTile:boolean, color:Color)
   + ConnectionPiece()
   + ActionCard(type:ActionType)
   + Dice()
   + Turn(player:Player, actionCard:ActionCard)
   + TurnOrder()

Relationships:
# Final Inheritance Relationships:
   + Player extends TurnOrder
   + GameDesigner extends Player
   + GameBoard extends TileO
   + Tile extends TileO
   + ConnectionPiece extends TileO
   + ActionCard extends TileO
   + Dice extends TileO
   + Turn extends TileO

# Final Association Relationships:
   + [1] TileO associate [*] Player
   + [1] GameDesigner associate [2] Tile
   + [1] Player associate [1] GameBoard
   + [1] Player associate [1..*] Turn
   + [1] Tile associate [1] Tile
   + [0..1] Tile associate [1] ActionCard
   + [1] TileO contain [1] GameDesigner
   + [1] TileO contain [1] GameBoard
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [32] ActionCard
   + [1] Turn contain [1] Player
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ActionType (enum) - Enum Attributes: [RollDie, ConnectTiles, RemoveConnectionPiece, MovePlayingPiece, LoseTurn], Class Attributes: []
Class: Color (enum) - Enum Attributes: [], Class Attributes: []
Class: TileO (class) - Enum Attributes: [], Class Attributes: []
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [color:Color]
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: [connectedTiles:Tile[],isHidden:boolean,isActionTile:boolean,color:Color]
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: ActionCard (class) - Enum Attributes: [], Class Attributes: [type:ActionType]
Class: Dice (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: [player:Player,actionCard:ActionCard]
Class: TurnOrder (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False Player inheritance False TurnOrder
 False GameDesigner inheritance False Player
 False GameBoard inheritance False TileO
 False Tile inheritance False TileO
 False ConnectionPiece inheritance False TileO
 False ActionCard inheritance False TileO
 False Dice inheritance False TileO
 False Turn inheritance False TileO
 1 TileO association * Player
 1 GameDesigner association 2 Tile
 1 Player association 1 GameBoard
 1 Player association 1..* Turn
 1 Tile association 1 Tile
 0..1 Tile association 1 ActionCard
 1 TileO association 1 GameDesigner
 1 TileO association 1 GameBoard
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association 32 ActionCard
 1 Turn association 1 Player
--------------------------------------------------------------------------------
--15/20--Classes and attributes matching process:
-Class:
 'Color(enum)' - 'Color(enum)'
 'TileO(class)' - 'TileO(class)'
 'Player(class)' - 'Player(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionCard(class)' - 'ActionCard(class)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
-Attributes:
 'Player(class):color' - 'color'
-Relationships:
 ' 1 Player association 1 GameBoard' - ' 1 Game association 0..1 Player'
 ' 1 TileO association 1 GameBoard' - ' 1 TileO association * Game'
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             12                  7                   18                  
Attributes          13                  1                   16                  
Associations        12                  4                   12                  
Inheritances        8                   0                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------16/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollExtraTurn, ConnectTiles, RemoveConnectionPiece, MoveToArbitraryTile, LoseNextTurn)
# Classes (attributes):
    + Tile-O()
    + GameDesigner()
    + Player(color:Color)
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + ActionTile()
    + Die()
    + PlayingPiece()
    + Turn()
    + Color(white, black)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TileOActionCard(RollExtraTurn, ConnectTiles, RemoveConnectionPiece, MoveToArbitraryTile, LoseNextTurn)
Classes:
   + TileO()
   + GameDesigner()
   + Player(color:Color)
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + ActionTile()
   + Die()
   + PlayingPiece()
   + Turn()
   + Color(white, black)

AI_answer(association):

```
Final Composition Relationships:
    + [1] TileO contain [1] GameBoard
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] GameBoard contain [*] ActionTile
    + [1] GameBoard contain [1] Die
    + [1] GameBoard contain [*] Player
    + [1] GameBoard contain [*] Turn

Final Association Relationships:
    + [1] GameDesigner associate [1] GameBoard
    + [1] GameDesigner associate [*] ActionTile
    + [1] Player associate [1] PlayingPiece
    + [1] Player associate [1] Color
    + [1] Player associate [1] Turn
    + [0..*] GameBoard associate [0..*] Tile
    + [0..*] Tile associate [0..*] ConnectionPiece
    + [0..*] Tile associate [0..*] ActionTile
    + [0..*] Tile associate [0..*] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player inherit TileO because players are part of the game.
    + GameBoard inherit TileO because the game board is a part of the game.
    + Tile inherit GameBoard because tiles are part of the game board.
    + ConnectionPiece inherit GameBoard because connection pieces are part of the game board.
    + ActionTile inherit Tile because action tiles are a type of tile.
    + PlayingPiece inherit TileO because playing pieces are part of the game.
    + Turn inherit TileO because turns are part of the game.
    + Color does not extend any class.
    + Die does not extend any class.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + TileOActionCard(RollExtraTurn, ConnectTiles, RemoveConnectionPiece, MoveToArbitraryTile, LoseNextTurn)
   + Color(white, black)

Classes:
   + TileO()
   + GameDesigner()
   + Player(color:Color)
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + ActionTile()
   + Die()
   + PlayingPiece()
   + Turn()

Relationships:
# Final Association Relationships:
   + [1] GameDesigner associate [1] GameBoard
   + [1] GameDesigner associate [*] ActionTile
   + [1] Player associate [1] PlayingPiece
   + [1] Player associate [1] Color
   + [1] Player associate [1] Turn
   + [0..*] GameBoard associate [0..*] Tile
   + [0..*] Tile associate [0..*] ConnectionPiece
   + [0..*] Tile associate [0..*] ActionTile
   + [0..*] Tile associate [0..*] Player
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [*] ActionTile
   + [1] GameBoard contain [1] Die
   + [1] GameBoard contain [*] Player
   + [1] GameBoard contain [*] Turn
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: TileOActionCard (enum) - Enum Attributes: [RollExtraTurn, ConnectTiles, RemoveConnectionPiece, MoveToArbitraryTile, LoseNextTurn], Class Attributes: []
Class: Color (enum) - Enum Attributes: [white, black], Class Attributes: []
Class: TileO (class) - Enum Attributes: [], Class Attributes: []
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [color:Color]
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 1 GameDesigner association 1 GameBoard
 1 GameDesigner association * ActionTile
 1 Player association 1 PlayingPiece
 1 Player association 1 Color
 1 Player association 1 Turn
 0..* GameBoard association 0..* Tile
 0..* Tile association 0..* ConnectionPiece
 0..* Tile association 0..* ActionTile
 0..* Tile association 0..* Player
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association * ActionTile
 1 GameBoard association 1 Die
 1 GameBoard association * Player
 1 GameBoard association * Turn
--------------------------------------------------------------------------------
--16/20--Classes and attributes matching process:
-Class:
 'Color(enum)' - 'Color(enum)'
 'TileO(class)' - 'TileO(class)'
 'Player(class)' - 'Player(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Die(class)' - 'Die(class)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
-Attributes:
 'Player(class):color' - 'color'
-Relationships:
 ' 0..* GameBoard association 0..* Tile' - ' 1 Game association * Tile'
 ' 0..* Tile association 0..* ConnectionPiece' - ' 0..4 Connection association 2 Tile'
 ' 0..* Tile association 0..* Player' - ' 1 Player association 0..1 Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
 ' 1 GameBoard association 1 Die' - ' 1 Game association 1 Die'
 ' 1 GameBoard association * Player' - ' 1 Game association 0..1 Player'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             12                  8                   18                  
Attributes          8                   1                   16                  
Associations        15                  6                   12                  
Inheritances        0                   0                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------17/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
    + PlayerColor(Red, Blue, Green, Yellow)

# Classes (attributes):
    + Tile-O()
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + HiddenTile()
    + ActionTile()
    + PlayingPiece( color:PlayerColor)
    + ActionDeck( cards:List<ActionCard>)
    + GameDesigner()
    + Player( playerNumber:int)
    + Die()
    + Turn()
    + GameResult()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] GameBoard
    + [1] Tile-O contain [1] ActionDeck
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] GameBoard contain [1] HiddenTile
    + [1] GameBoard contain [*] ActionTile
    + [1] GameBoard contain [*] Player
    + [1] ActionDeck contain [32] ActionCard

Final Association Relationships:
    + [1] Tile associate [*] ConnectionPiece
    + [1] Tile associate [*] Tile
    + [1] Tile associate [0..1] ActionTile
    + [1] ConnectionPiece associate [1] Tile
    + [1] ConnectionPiece associate [1] Tile
    + [1] HiddenTile associate [1] Tile
    + [1] ActionTile associate [0..1] Tile
    + [1] ActionTile associate [1] ActionCard
    + [1] Player associate [1] PlayingPiece
    + [1] Player associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] GameResult associate [1] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
   + Player inherit PlayingPiece
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

Relationships:
# Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
# Final Association Relationships:
   + [1] Tile associate [*] ConnectionPiece
   + [1] Tile associate [*] Tile
   + [1] Tile associate [0..1] ActionTile
   + [1] ConnectionPiece associate [1] Tile
   + [1] HiddenTile associate [1] Tile
   + [1] ActionTile associate [0..1] Tile
   + [1] ActionTile associate [1] ActionCard
   + [1] Player associate [1] PlayingPiece
   + [1] Player associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] GameResult associate [1] Player
   + [1] Tile-O contain [1] GameBoard
   + [1] Tile-O contain [1] ActionDeck
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [1] HiddenTile
   + [1] GameBoard contain [*] ActionTile
   + [1] GameBoard contain [*] Player
   + [1] ActionDeck contain [32] ActionCard
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: PlayerColor (enum) - Enum Attributes: [Red, Blue, Green, Yellow], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: HiddenTile (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:PlayerColor]
Class: ActionDeck (class) - Enum Attributes: [], Class Attributes: [cards:List<ActionCard>]
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int]
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: GameResult (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False HiddenTile inheritance False Tile
 False ActionTile inheritance False Tile
 1 Tile association * ConnectionPiece
 1 Tile association * Tile
 1 Tile association 0..1 ActionTile
 1 ConnectionPiece association 1 Tile
 1 HiddenTile association 1 Tile
 1 ActionTile association 0..1 Tile
 1 ActionTile association 1 ActionCard
 1 Player association 1 PlayingPiece
 1 Player association 1 Turn
 1 Turn association 1 Player
 1 GameResult association 1 Player
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association 1 HiddenTile
 1 GameBoard association * ActionTile
 1 GameBoard association * Player
 1 ActionDeck association 32 ActionCard
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Class:
 'Tile-O(class)' - 'TileO(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Player(class)' - 'Player(class)'
 'Die(class)' - 'Die(class)'
 'PlayerColor(enum)' - 'Color(enum)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
 'ActionDeck(class)' - 'Deck(class)'
-Attributes:
 'PlayerColor(enum):Red' - 'red'
 'PlayerColor(enum):Blue' - 'blue'
 'PlayerColor(enum):Green' - 'green'
 'PlayerColor(enum):Yellow' - 'yellow'
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 1 Tile association * ConnectionPiece' - ' 0..4 Connection association 2 Tile'
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
 ' 1 GameBoard association * Player' - ' 1 Game association 0..1 Player'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   18                  
Attributes          7                   4                   16                  
Associations        15                  4                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------18/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionType(RollDie, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseTurn)
# Classes (attributes):
    + TileOGame()
    + Player( name:string,  color:string)
    + GameDesigner()
    + GameBoard( tiles:Tile[],  connectionPieces:ConnectionPiece[],  hiddenTile:Tile,  actionTiles:Tile[])
    + Tile( connectedTiles:Tile[],  color:string)
    + ConnectionPiece()
    + ActionCard( type:ActionType)
    + Die()
    + Turn( player:Player,  actions:ActionCard[])
    + TurnOrder()
    + ActionTile( turnsAsRegular:int)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionType(RollDie, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseTurn)

Classes:
   + TileOGame()
   + Player(name: String, color: String)
   + GameDesigner()
   + GameBoard(tiles: Tile[], connectionPieces: ConnectionPiece[], hiddenTile: Tile, actionTiles: Tile[])
   + Tile(connectedTiles: Tile[], color: String)
   + ConnectionPiece()
   + ActionCard(type: ActionType)
   + Die()
   + Turn(player: Player, actions: ActionCard[])
   + TurnOrder()
   + ActionTile(turnsAsRegular: int)

AI_answer(association):
```
Final Composition Relationships:
    + [1] TileOGame contain [1] GameBoard
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] GameBoard contain [1] Tile
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [32] ActionCard
    + [1] Turn contain [*] ActionCard

Final Association Relationships:
    + [0..4] TileOGame associate [1] Player
    + [1] TileOGame associate [1] TurnOrder
    + [0..4] Player associate [1] Tile
    + [1] Player associate [1] Turn
    + [1] GameDesigner associate [1] GameBoard
    + [1] GameBoard associate [*] Tile
    + [1] GameBoard associate [*] ConnectionPiece
    + [1] GameBoard associate [*] Tile
    + [1] GameBoard associate [*] Tile
    + [1] Tile associate [*] Tile
    + [1] Tile associate [*] ConnectionPiece
    + [1] Tile associate [1] Tile
    + [1] Tile associate [*] Tile
    + [1] ConnectionPiece associate [1] Tile
    + [1] ActionCard associate [1] ActionType
    + [1] Turn associate [0..4] Player
    + [1] Turn associate [*] ActionCard
    + [1] TurnOrder associate [1] Player
    + [1] ActionTile associate [1] Tile
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + Player inherits Person
   + GameDesigner inherits Person
   + GameBoard inherits Board
   + Tile inherits BoardElement
   + ConnectionPiece inherits BoardElement
   + ActionCard inherits Card
   + TurnOrder inherits Order
   + ActionTile inherits Tile
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ActionType(RollDie, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseTurn)

Classes:
   + TileOGame()
   + Player(name: String, color: String)
   + GameDesigner()
   + GameBoard(tiles: Tile[], connectionPieces: ConnectionPiece[], hiddenTile: Tile, actionTiles: Tile[])
   + Tile(connectedTiles: Tile[], color: String)
   + ConnectionPiece()
   + ActionCard(type: ActionType)
   + Die()
   + Turn(player: Player, actions: ActionCard[])
   + TurnOrder()
   + ActionTile(turnsAsRegular: int)
   + Person()
   + Board()
   + BoardElement()
   + Card()
   + Order()

Relationships:
# Final Inheritance Relationships:
   + Player extends Person
   + GameDesigner extends Person
   + GameBoard extends Board
   + Tile extends BoardElement
   + ConnectionPiece extends BoardElement
   + ActionCard extends Card
   + TurnOrder extends Order

# Final Association Relationships:
   + [0..4] TileOGame associate [1] Player
   + [1] TileOGame associate [1] TurnOrder
   + [0..4] Player associate [1] Tile
   + [1] Player associate [1] Turn
   + [1] GameDesigner associate [1] GameBoard
   + [1] GameBoard associate [*] Tile
   + [1] GameBoard associate [*] ConnectionPiece
   + [1] Tile associate [*] Tile
   + [1] Tile associate [*] ConnectionPiece
   + [1] Tile associate [1] Tile
   + [1] ConnectionPiece associate [1] Tile
   + [1] ActionCard associate [1] ActionType
   + [1] Turn associate [0..4] Player
   + [1] Turn associate [*] ActionCard
   + [1] TurnOrder associate [1] Player
   + [1] ActionTile associate [1] Tile
   + [1] TileOGame contain [1] GameBoard
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [1] Tile
   + [1] GameBoard contain [32] ActionCard
   + [1] Turn contain [*] ActionCard
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ActionType (enum) - Enum Attributes: [RollDie, ConnectTiles, RemoveConnection, MoveToArbitraryTile, LoseTurn], Class Attributes: []
Class: TileOGame (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [name:String,color:String]
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: [tiles:Tile[],connectionPieces:ConnectionPiece[],hiddenTile:Tile,actionTiles:Tile[]]
Class: Tile (class) - Enum Attributes: [], Class Attributes: [connectedTiles:Tile[],color:String]
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: ActionCard (class) - Enum Attributes: [], Class Attributes: [type:ActionType]
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: [player:Player,actions:ActionCard[]]
Class: TurnOrder (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: [turnsAsRegular:int]
Class: Person (class) - Enum Attributes: [], Class Attributes: []
Class: Board (class) - Enum Attributes: [], Class Attributes: []
Class: BoardElement (class) - Enum Attributes: [], Class Attributes: []
Class: Card (class) - Enum Attributes: [], Class Attributes: []
Class: Order (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False Player inheritance False Person
 False GameDesigner inheritance False Person
 False GameBoard inheritance False Board
 False Tile inheritance False BoardElement
 False ConnectionPiece inheritance False BoardElement
 False ActionCard inheritance False Card
 False TurnOrder inheritance False Order
 0..4 TileOGame association 1 Player
 1 TileOGame association 1 TurnOrder
 0..4 Player association 1 Tile
 1 Player association 1 Turn
 1 GameDesigner association 1 GameBoard
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 Tile association * Tile
 1 Tile association * ConnectionPiece
 1 Tile association 1 Tile
 1 ConnectionPiece association 1 Tile
 1 ActionCard association 1 ActionType
 1 Turn association 0..4 Player
 1 Turn association * ActionCard
 1 TurnOrder association 1 Player
 1 ActionTile association 1 Tile
 1 TileOGame association 1 GameBoard
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association 1 Tile
 1 GameBoard association 32 ActionCard
 1 Turn association * ActionCard
--------------------------------------------------------------------------------
--18/20--Classes and attributes matching process:
-Class:
 'Player(class)' - 'Player(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionCard(class)' - 'ActionCard(class)'
 'Die(class)' - 'Die(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
-Attributes:
 'Player(class):color' - 'color'
-Relationships:
 ' 0..4 Player association 1 Tile' - ' 1 Player association 0..1 Tile'
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
 ' 1 Tile association * ConnectionPiece' - ' 0..4 Connection association 2 Tile'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             17                  7                   18                  
Attributes          17                  1                   16                  
Associations        22                  4                   12                  
Inheritances        7                   0                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------19/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
    + PlayerColor(Red, Blue, Green, Yellow)

# Classes (attributes):
    + Tile-O()
    + GameBoard()
    + Tile()
    + ConnectionPiece()
    + HiddenTile()
    + ActionTile()
    + PlayingPiece( color:PlayerColor)
    + ActionDeck( cards:List<ActionCard>)
    + GameDesigner()
    + Player( playerNumber:int)
    + Die()
    + Turn()
    + GameResult()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Tile-O contain [1] GameBoard
    + [1] Tile-O contain [1] ActionDeck
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] GameBoard contain [1] HiddenTile
    + [1] GameBoard contain [*] ActionTile
    + [1] GameBoard contain [*] Player
    + [1] ActionDeck contain [32] ActionCard

Final Association Relationships:
    + [1] Tile associate [*] ConnectionPiece
    + [1] Tile associate [*] Tile
    + [1] Tile associate [0..1] ActionTile
    + [1] ConnectionPiece associate [1] Tile
    + [1] ConnectionPiece associate [1] Tile
    + [1] HiddenTile associate [1] Tile
    + [1] ActionTile associate [0..1] Tile
    + [1] ActionTile associate [1] ActionCard
    + [1] Player associate [1] PlayingPiece
    + [1] Player associate [1] Turn
    + [1] Turn associate [1] Player
    + [1] GameResult associate [1] Player
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
   + Player inherit PlayingPiece
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + PlayerColor(Red, Blue, Green, Yellow)

Classes:
   + Tile-O()
   + GameBoard()
   + Tile()
   + ConnectionPiece()
   + HiddenTile()
   + ActionTile()
   + PlayingPiece(color:PlayerColor)
   + ActionDeck(cards:List<ActionCard>)
   + GameDesigner()
   + Player(playerNumber:int)
   + Die()
   + Turn()
   + GameResult()

Relationships:
# Final Inheritance Relationships:
   + HiddenTile inherit Tile
   + ActionTile inherit Tile
# Final Association Relationships:
   + [1] Tile associate [*] ConnectionPiece
   + [1] Tile associate [*] Tile
   + [1] Tile associate [0..1] ActionTile
   + [1] ConnectionPiece associate [1] Tile
   + [1] HiddenTile associate [1] Tile
   + [1] ActionTile associate [0..1] Tile
   + [1] ActionTile associate [1] ActionCard
   + [1] Player associate [1] PlayingPiece
   + [1] Player associate [1] Turn
   + [1] Turn associate [1] Player
   + [1] GameResult associate [1] Player
   + [1] Tile-O contain [1] GameBoard
   + [1] Tile-O contain [1] ActionDeck
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [1] HiddenTile
   + [1] GameBoard contain [*] ActionTile
   + [1] GameBoard contain [*] Player
   + [1] ActionDeck contain [32] ActionCard
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: PlayerColor (enum) - Enum Attributes: [Red, Blue, Green, Yellow], Class Attributes: []
Class: Tile-O (class) - Enum Attributes: [], Class Attributes: []
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: []
Class: Tile (class) - Enum Attributes: [], Class Attributes: []
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: HiddenTile (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: PlayingPiece (class) - Enum Attributes: [], Class Attributes: [color:PlayerColor]
Class: ActionDeck (class) - Enum Attributes: [], Class Attributes: [cards:List<ActionCard>]
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int]
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: Turn (class) - Enum Attributes: [], Class Attributes: []
Class: GameResult (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False HiddenTile inheritance False Tile
 False ActionTile inheritance False Tile
 1 Tile association * ConnectionPiece
 1 Tile association * Tile
 1 Tile association 0..1 ActionTile
 1 ConnectionPiece association 1 Tile
 1 HiddenTile association 1 Tile
 1 ActionTile association 0..1 Tile
 1 ActionTile association 1 ActionCard
 1 Player association 1 PlayingPiece
 1 Player association 1 Turn
 1 Turn association 1 Player
 1 GameResult association 1 Player
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association 1 HiddenTile
 1 GameBoard association * ActionTile
 1 GameBoard association * Player
 1 ActionDeck association 32 ActionCard
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Class:
 'Tile-O(class)' - 'TileO(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Player(class)' - 'Player(class)'
 'Die(class)' - 'Die(class)'
 'PlayerColor(enum)' - 'Color(enum)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
 'ActionDeck(class)' - 'Deck(class)'
-Attributes:
 'PlayerColor(enum):Red' - 'red'
 'PlayerColor(enum):Blue' - 'blue'
 'PlayerColor(enum):Green' - 'green'
 'PlayerColor(enum):Yellow' - 'yellow'
-Relationships:
 ' False ActionTile inheritance False Tile' - ' False ActionTile inheritance False Tile'
 ' 1 Tile association * ConnectionPiece' - ' 0..4 Connection association 2 Tile'
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
 ' 1 GameBoard association * Player' - ' 1 Game association 0..1 Player'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   18                  
Attributes          7                   4                   16                  
Associations        15                  4                   12                  
Inheritances        2                   1                   8                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------20/20------Tile-O:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
# Classes (attributes):
    + TileOGame()
    + GameDesigner()
    + Player( playerNumber:int,  playingPieceColor:string)
    + GameBoard( tiles:Tile[],  connectionPieces:ConnectionPiece[],  actionTiles:Tile[],  hiddenTile:Tile,  startingPositions:Map<Player, Tile>)
    + Tile( connectedTiles:Map<Direction, Tile>,  visited:boolean)
    + ConnectionPiece()
    + ActionTile()
    + Die()
    + DeckOfActionCards( actionCards:ActionCard[])
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TileOActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)
   
Classes:
   + TileOGame()
   + GameDesigner()
   + Player(playerNumber: int, playingPieceColor: String)
   + GameBoard(tiles: Tile[], connectionPieces: ConnectionPiece[], actionTiles: Tile[], hiddenTile: Tile, startingPositions: Map<Player, Tile>)
   + Tile(connectedTiles: Map<Direction, Tile>, visited: boolean)
   + ConnectionPiece()
   + ActionTile()
   + Die()
   + DeckOfActionCards(actionCards: TileOActionCard[])

AI_answer(association):

```
Final Composition Relationships:
    + [1] TileOGame contain [1] GameDesigner
    + [1] TileOGame contain [1] GameBoard
    + [1] TileOGame contain [1] DeckOfActionCards
    + [1] GameBoard contain [*] Tile
    + [1] GameBoard contain [*] ConnectionPiece
    + [1] GameBoard contain [*] Tile (for actionTiles)
    + [1] GameBoard contain [1] Tile (for hiddenTile)
    + [1] GameBoard contain [*] Player

Final Association Relationships:
    + [1] Player associate [1] Tile
    + [1] Player associate [1] GameBoard
    + [1] Player associate [*] TileOActionCard
    + [1] TileOGame associate [2..4] Player
    + [1] Die associate [1] Player
    + [1] GameDesigner associate [1] GameBoard
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Player inherit Person
    + GameDesigner inherit Person
    + TileOActionCard inherit ActionCard
    + TileOGame inherit Game
    + Tile inherit BoardComponent
    + ConnectionPiece inherit BoardComponent
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + TileOActionCard(RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn)

Classes:
   + TileOGame()
   + GameDesigner()
   + Player(playerNumber: int, playingPieceColor: String)
   + GameBoard(tiles: Tile[], connectionPieces: ConnectionPiece[], actionTiles: Tile[], hiddenTile: Tile, startingPositions: Map<Player, Tile>)
   + Tile(connectedTiles: Map<Direction, Tile>, visited: boolean)
   + ConnectionPiece()
   + ActionTile()
   + Die()
   + DeckOfActionCards(actionCards: TileOActionCard[])

Relationships:
# Final Inheritance Relationships:
   + Player extends Person
   + GameDesigner extends Person
   + TileOActionCard extends ActionCard
   + TileOGame extends Game
   + Tile extends BoardComponent
   + ConnectionPiece extends BoardComponent

# Final Association Relationships:
   + [1] Player associate [1] Tile
   + [1] Player associate [1] GameBoard
   + [1] Player associate [*] TileOActionCard
   + [1] TileOGame associate [2..4] Player
   + [1] Die associate [1] Player
   + [1] GameDesigner associate [1] GameBoard
   + [1] TileOGame contain [1] GameDesigner
   + [1] TileOGame contain [1] GameBoard
   + [1] TileOGame contain [1] DeckOfActionCards
   + [1] GameBoard contain [*] Tile
   + [1] GameBoard contain [*] ConnectionPiece
   + [1] GameBoard contain [*] Tile (for actionTiles)
   + [1] GameBoard contain [1] Tile (for hiddenTile)
   + [1] GameBoard contain [*] Player
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: TileOActionCard (enum) - Enum Attributes: [RollDie, ConnectTiles, RemoveConnection, MovePlayingPiece, LoseTurn], Class Attributes: []
Class: TileOGame (class) - Enum Attributes: [], Class Attributes: []
Class: GameDesigner (class) - Enum Attributes: [], Class Attributes: []
Class: Player (class) - Enum Attributes: [], Class Attributes: [playerNumber:int,playingPieceColor:String]
Class: GameBoard (class) - Enum Attributes: [], Class Attributes: [tiles:Tile[],connectionPieces:ConnectionPiece[],actionTiles:Tile[],hiddenTile:Tile,startingPositions:Map<Player,Tile>:]
Class: Tile (class) - Enum Attributes: [], Class Attributes: [connectedTiles:Map<Direction,Tile>:,visited:boolean]
Class: ConnectionPiece (class) - Enum Attributes: [], Class Attributes: []
Class: ActionTile (class) - Enum Attributes: [], Class Attributes: []
Class: Die (class) - Enum Attributes: [], Class Attributes: []
Class: DeckOfActionCards (class) - Enum Attributes: [], Class Attributes: [actionCards:TileOActionCard[]]
Relationships:
 False Player inheritance False Person
 False GameDesigner inheritance False Person
 False TileOActionCard inheritance False ActionCard
 False TileOGame inheritance False Game
 False Tile inheritance False BoardComponent
 False ConnectionPiece inheritance False BoardComponent
 1 Player association 1 Tile
 1 Player association 1 GameBoard
 1 Player association * TileOActionCard
 1 TileOGame association 2..4 Player
 1 Die association 1 Player
 1 GameDesigner association 1 GameBoard
 1 TileOGame association 1 GameDesigner
 1 TileOGame association 1 GameBoard
 1 TileOGame association 1 DeckOfActionCards
 1 GameBoard association * Tile
 1 GameBoard association * ConnectionPiece
 1 GameBoard association * Tile
 1 GameBoard association 1 Tile
 1 GameBoard association * Player
--------------------------------------------------------------------------------
--20/20--Classes and attributes matching process:
-Class:
 'Player(class)' - 'Player(class)'
 'Tile(class)' - 'Tile(class)'
 'ActionTile(class)' - 'ActionTile(class)'
 'Die(class)' - 'Die(class)'
 'GameBoard(class)' - 'Game(class)'
 'ConnectionPiece(class)' - 'Connection(class)'
-Attributes:
-Relationships:
 ' 1 Player association 1 Tile' - ' 1 Player association 0..1 Tile'
 ' 1 Player association 1 GameBoard' - ' 1 Game association 0..1 Player'
 ' 1 GameBoard association * Tile' - ' 1 Game association * Tile'
 ' 1 GameBoard association * ConnectionPiece' - ' 1 Game association * Connection'
--------------------------------------------------------------------------------
Tile-O, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  6                   18                  
Attributes          17                  0                   16                  
Associations        14                  4                   12                  
Inheritances        0                   0                   8                   
--------------------------------------------------------------------------------
Tile-O, avg-method2
--------------------------------------------------------------------------------
Metric              Precision      Recall         F1             F2             
--------------------------------------------------------------------------------
Classes             0.510          0.350          0.415          0.373
Attributes          0.037          0.037          0.037          0.037
Associations        0.186          0.221          0.202          0.213
Inheritances        0.192          0.031          0.054          0.038
--------------------------------------------------------------------------------
