------------------------------------------------------------
---------------------1/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestType(BloodTest, Ultrasound)
    + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signature:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + TestRequisition( validFromDate:Date)
    + Test( duration:Time)
    + TestGroup()
    + TestResult( result:Enum[Negative, Positive],  report:Text)
    + Appointment( labLocation:string,  businessHours:TimeRange,  confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  registrationNumber:int,  changeCancellationFee:Currency)
    + Lab( address:string,  businessHours:TimeRange,  fee:Currency)
    + TimeRange( startTime:Time,  endTime:Time)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestType(BloodTest, Ultrasound)
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date)
   + Test(duration: Time)
   + TestGroup()
   + TestResult(result: Enum[Negative, Positive], report: Text)
   + Appointment(labLocation: String, businessHours: TimeRange, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int, changeCancellationFee: Currency)
   + Lab(address: String, businessHours: TimeRange, fee: Currency)
   + TimeRange(startTime: Time, endTime: Time)

AI_answer(association):
```
Final Composition Relationships:
    + [1] LabTracker contain [*] Lab
    + [1] LabTracker contain [*] Doctor
    + [1] LabTracker contain [*] Patient
    + [0..*] TestRequisition contain [*] Test
    + [0..*] TestGroup contain [*] Test
    + [0..*] Appointment contain [*] TestRequisition
    + [1] Appointment contain [*] Lab

Final Association Relationships:
    + [1] TestRequisition associate [1] Doctor
    + [1] TestRequisition associate [1] Patient
    + [0..*] TestRequisition associate [0..*] TestGroup
    + [0..*] Test associate [1] TestGroup
    + [1] Test associate [1] Time
    + [1] Test associate [0..*] TestResult
    + [1] TestResult associate [1] Text
    + [1] Appointment associate [1] Patient
    + [1] Appointment associate [1] Lab
    + [1] Appointment associate [1] TimeRange
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + TestRequisition inherit LabTracker
   + Test inherit LabTracker
   + TestGroup inherit LabTracker
   + TestResult inherit LabTracker
   + Appointment inherit LabTracker
   + Lab inherit LabTracker
   + TimeRange inherit LabTracker
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date)
   + Test(duration: Time)
   + TestGroup()
   + TestResult(result: Enum[Negative, Positive], report: Text)
   + Appointment(labLocation: String, businessHours: TimeRange, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int, changeCancellationFee: Currency)
   + Lab(address: String, businessHours: TimeRange, fee: Currency)
   + TimeRange(startTime: Time, endTime: Time)

Relationships:
# Final Association Relationships:
   + [1] TestRequisition associate [1] Doctor
   + [1] TestRequisition associate [1] Patient
   + [0..*] TestRequisition associate [0..*] TestGroup
   + [0..*] Test associate [1] TestGroup
   + [1] Test associate [1] Time
   + [1] Test associate [0..*] TestResult
   + [1] TestResult associate [1] Text
   + [1] Appointment associate [1] Patient
   + [1] Appointment associate [1] Lab
   + [1] Appointment associate [1] TimeRange
   + [1] LabTracker contain [*] Lab
   + [1] LabTracker contain [*] Doctor
   + [1] LabTracker contain [*] Patient
   + [0..*] TestRequisition contain [*] Test
   + [0..*] TestGroup contain [*] Test
   + [0..*] Appointment contain [*] TestRequisition
   + [1] Appointment contain [*] Lab
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepeatInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:Time]
Class: TestGroup (class) - Enum Attributes: [], Class Attributes: []
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:Enum[Negative,Positive]:,report:Text]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [labLocation:String,businessHours:TimeRange,confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,registrationNumber:int,changeCancellationFee:Currency]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:TimeRange,fee:Currency]
Class: TimeRange (class) - Enum Attributes: [], Class Attributes: [startTime:Time,endTime:Time]
Relationships:
 1 TestRequisition association 1 Doctor
 1 TestRequisition association 1 Patient
 0..* TestRequisition association 0..* TestGroup
 0..* Test association 1 TestGroup
 1 Test association 1 Time
 1 Test association 0..* TestResult
 1 TestResult association 1 Text
 1 Appointment association 1 Patient
 1 Appointment association 1 Lab
 1 Appointment association 1 TimeRange
 1 LabTracker association * Lab
 1 LabTracker association * Doctor
 1 LabTracker association * Patient
 0..* TestRequisition association * Test
 0..* TestGroup association * Test
 0..* Appointment association * TestRequisition
 1 Appointment association * Lab
--------------------------------------------------------------------------------
--1/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'RepeatInterval(enum)' - 'Interval(enum)'
 'TimeRange(class)' - 'BusinessHour(class)'
-Attributes:
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'RepeatInterval(enum):Weekly' - 'weekly'
 'RepeatInterval(enum):Monthly' - 'monthly'
 'RepeatInterval(enum):Yearly' - 'yearly'
 'TimeRange(class):startTime' - 'startTime'
 'TimeRange(class):endTime' - 'endTime'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
 ' 1 LabTracker association * Lab' - ' 1 LabTracker association * Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  9                   16                  
Attributes          34                  13                  43                  
Associations        15                  2                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
-------------------------------------------
--------------------------------------2/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestType(BloodTest, Ultrasound)
    + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signature:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + TestRequisition( validFromDate:Date)
    + Test( duration:Time)
    + TestGroup()
    + TestResult( result:Enum[Negative, Positive],  report:Text)
    + Appointment( labLocation:string,  businessHours:TimeRange,  confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  registrationNumber:int,  changeCancellationFee:Currency)
    + Lab( address:string,  businessHours:TimeRange,  fee:Currency)
    + TimeRange( startTime:Time,  endTime:Time)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestType(BloodTest, Ultrasound)
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date)
   + Test(duration: Time)
   + TestGroup()
   + TestResult(result: Enum[Negative, Positive], report: Text)
   + Appointment(labLocation: String, businessHours: TimeRange, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int, changeCancellationFee: Currency)
   + Lab(address: String, businessHours: TimeRange, fee: Currency)
   + TimeRange(startTime: Time, endTime: Time)

AI_answer(association):
```
Final Composition Relationships:
    + [1] LabTracker contain [*] Lab
    + [1] LabTracker contain [*] Doctor
    + [1] LabTracker contain [*] Patient
    + [0..*] TestRequisition contain [*] Test
    + [0..*] TestGroup contain [*] Test
    + [0..*] Appointment contain [*] TestRequisition
    + [1] Appointment contain [*] Lab

Final Association Relationships:
    + [1] TestRequisition associate [1] Doctor
    + [1] TestRequisition associate [1] Patient
    + [0..*] TestRequisition associate [0..*] TestGroup
    + [0..*] Test associate [1] TestGroup
    + [1] Test associate [1] Time
    + [1] Test associate [0..*] TestResult
    + [1] TestResult associate [1] Text
    + [1] Appointment associate [1] Patient
    + [1] Appointment associate [1] Lab
    + [1] Appointment associate [1] TimeRange
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + TestRequisition inherit LabTracker
   + Test inherit LabTracker
   + TestGroup inherit LabTracker
   + TestResult inherit LabTracker
   + Appointment inherit LabTracker
   + Lab inherit LabTracker
   + TimeRange inherit LabTracker
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date)
   + Test(duration: Time)
   + TestGroup()
   + TestResult(result: Enum[Negative, Positive], report: Text)
   + Appointment(labLocation: String, businessHours: TimeRange, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int, changeCancellationFee: Currency)
   + Lab(address: String, businessHours: TimeRange, fee: Currency)
   + TimeRange(startTime: Time, endTime: Time)

Relationships:
# Final Association Relationships:
   + [1] TestRequisition associate [1] Doctor
   + [1] TestRequisition associate [1] Patient
   + [0..*] TestRequisition associate [0..*] TestGroup
   + [0..*] Test associate [1] TestGroup
   + [1] Test associate [1] Time
   + [1] Test associate [0..*] TestResult
   + [1] TestResult associate [1] Text
   + [1] Appointment associate [1] Patient
   + [1] Appointment associate [1] Lab
   + [1] Appointment associate [1] TimeRange
   + [1] LabTracker contain [*] Lab
   + [1] LabTracker contain [*] Doctor
   + [1] LabTracker contain [*] Patient
   + [0..*] TestRequisition contain [*] Test
   + [0..*] TestGroup contain [*] Test
   + [0..*] Appointment contain [*] TestRequisition
   + [1] Appointment contain [*] Lab
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepeatInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:Time]
Class: TestGroup (class) - Enum Attributes: [], Class Attributes: []
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:Enum[Negative,Positive]:,report:Text]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [labLocation:String,businessHours:TimeRange,confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,registrationNumber:int,changeCancellationFee:Currency]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:TimeRange,fee:Currency]
Class: TimeRange (class) - Enum Attributes: [], Class Attributes: [startTime:Time,endTime:Time]
Relationships:
 1 TestRequisition association 1 Doctor
 1 TestRequisition association 1 Patient
 0..* TestRequisition association 0..* TestGroup
 0..* Test association 1 TestGroup
 1 Test association 1 Time
 1 Test association 0..* TestResult
 1 TestResult association 1 Text
 1 Appointment association 1 Patient
 1 Appointment association 1 Lab
 1 Appointment association 1 TimeRange
 1 LabTracker association * Lab
 1 LabTracker association * Doctor
 1 LabTracker association * Patient
 0..* TestRequisition association * Test
 0..* TestGroup association * Test
 0..* Appointment association * TestRequisition
 1 Appointment association * Lab
--------------------------------------------------------------------------------
--2/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'RepeatInterval(enum)' - 'Interval(enum)'
 'TimeRange(class)' - 'BusinessHour(class)'
-Attributes:
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'RepeatInterval(enum):Weekly' - 'weekly'
 'RepeatInterval(enum):Monthly' - 'monthly'
 'RepeatInterval(enum):Yearly' - 'yearly'
 'TimeRange(class):startTime' - 'startTime'
 'TimeRange(class):endTime' - 'endTime'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
 ' 1 LabTracker association * Lab' - ' 1 LabTracker association * Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  9                   16                  
Attributes          34                  13                  43                  
Associations        15                  2                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
---------------------------------------------------
------------------------------3/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestType(BloodTest, Ultrasound)
    + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signature:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + TestRequisition( validFromDate:Date)
    + Test( duration:Time)
    + TestGroup()
    + TestResult( result:Enum[Negative, Positive],  report:Text)
    + Appointment( labLocation:string,  businessHours:TimeRange,  confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  registrationNumber:int,  changeCancellationFee:Currency)
    + Lab( address:string,  businessHours:TimeRange,  fee:Currency)
    + TimeRange( startTime:Time,  endTime:Time)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestType(BloodTest, Ultrasound)
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date)
   + Test(duration: Time)
   + TestGroup()
   + TestResult(result: Enum[Negative, Positive], report: Text)
   + Appointment(labLocation: String, businessHours: TimeRange, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int, changeCancellationFee: Currency)
   + Lab(address: String, businessHours: TimeRange, fee: Currency)
   + TimeRange(startTime: Time, endTime: Time)

AI_answer(association):
```
Final Composition Relationships:
    + [1] LabTracker contain [*] Lab
    + [1] LabTracker contain [*] Doctor
    + [1] LabTracker contain [*] Patient
    + [0..*] TestRequisition contain [*] Test
    + [0..*] TestGroup contain [*] Test
    + [0..*] Appointment contain [*] TestRequisition
    + [1] Appointment contain [*] Lab

Final Association Relationships:
    + [1] TestRequisition associate [1] Doctor
    + [1] TestRequisition associate [1] Patient
    + [0..*] TestRequisition associate [0..*] TestGroup
    + [0..*] Test associate [1] TestGroup
    + [1] Test associate [1] Time
    + [1] Test associate [0..*] TestResult
    + [1] TestResult associate [1] Text
    + [1] Appointment associate [1] Patient
    + [1] Appointment associate [1] Lab
    + [1] Appointment associate [1] TimeRange
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + TestRequisition inherit LabTracker
   + Test inherit LabTracker
   + TestGroup inherit LabTracker
   + TestResult inherit LabTracker
   + Appointment inherit LabTracker
   + Lab inherit LabTracker
   + TimeRange inherit LabTracker
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date)
   + Test(duration: Time)
   + TestGroup()
   + TestResult(result: Enum[Negative, Positive], report: Text)
   + Appointment(labLocation: String, businessHours: TimeRange, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int, changeCancellationFee: Currency)
   + Lab(address: String, businessHours: TimeRange, fee: Currency)
   + TimeRange(startTime: Time, endTime: Time)

Relationships:
# Final Association Relationships:
   + [1] TestRequisition associate [1] Doctor
   + [1] TestRequisition associate [1] Patient
   + [0..*] TestRequisition associate [0..*] TestGroup
   + [0..*] Test associate [1] TestGroup
   + [1] Test associate [1] Time
   + [1] Test associate [0..*] TestResult
   + [1] TestResult associate [1] Text
   + [1] Appointment associate [1] Patient
   + [1] Appointment associate [1] Lab
   + [1] Appointment associate [1] TimeRange
   + [1] LabTracker contain [*] Lab
   + [1] LabTracker contain [*] Doctor
   + [1] LabTracker contain [*] Patient
   + [0..*] TestRequisition contain [*] Test
   + [0..*] TestGroup contain [*] Test
   + [0..*] Appointment contain [*] TestRequisition
   + [1] Appointment contain [*] Lab
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepeatInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:Time]
Class: TestGroup (class) - Enum Attributes: [], Class Attributes: []
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:Enum[Negative,Positive]:,report:Text]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [labLocation:String,businessHours:TimeRange,confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,registrationNumber:int,changeCancellationFee:Currency]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:TimeRange,fee:Currency]
Class: TimeRange (class) - Enum Attributes: [], Class Attributes: [startTime:Time,endTime:Time]
Relationships:
 1 TestRequisition association 1 Doctor
 1 TestRequisition association 1 Patient
 0..* TestRequisition association 0..* TestGroup
 0..* Test association 1 TestGroup
 1 Test association 1 Time
 1 Test association 0..* TestResult
 1 TestResult association 1 Text
 1 Appointment association 1 Patient
 1 Appointment association 1 Lab
 1 Appointment association 1 TimeRange
 1 LabTracker association * Lab
 1 LabTracker association * Doctor
 1 LabTracker association * Patient
 0..* TestRequisition association * Test
 0..* TestGroup association * Test
 0..* Appointment association * TestRequisition
 1 Appointment association * Lab
--------------------------------------------------------------------------------
--3/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'RepeatInterval(enum)' - 'Interval(enum)'
 'TimeRange(class)' - 'BusinessHour(class)'
-Attributes:
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'RepeatInterval(enum):Weekly' - 'weekly'
 'RepeatInterval(enum):Monthly' - 'monthly'
 'RepeatInterval(enum):Yearly' - 'yearly'
 'TimeRange(class):startTime' - 'startTime'
 'TimeRange(class):endTime' - 'endTime'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
 ' 1 LabTracker association * Lab' - ' 1 LabTracker association * Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  9                   16                  
Attributes          34                  13                  43                  
Associations        15                  2                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------4/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestType(BloodTest, Ultrasound)
    + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signature:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + TestRequisition( validFromDate:Date)
    + Test( duration:Time)
    + TestGroup()
    + TestResult( result:Enum[Negative, Positive],  report:Text)
    + Appointment( labLocation:string,  businessHours:TimeRange,  confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  registrationNumber:int,  changeCancellationFee:Currency)
    + Lab( address:string,  businessHours:TimeRange,  fee:Currency)
    + TimeRange( startTime:Time,  endTime:Time)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestType(BloodTest, Ultrasound)
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date)
   + Test(duration: Time)
   + TestGroup()
   + TestResult(result: Enum[Negative, Positive], report: Text)
   + Appointment(labLocation: String, businessHours: TimeRange, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int, changeCancellationFee: Currency)
   + Lab(address: String, businessHours: TimeRange, fee: Currency)
   + TimeRange(startTime: Time, endTime: Time)

AI_answer(association):
```
Final Composition Relationships:
    + [1] LabTracker contain [*] Lab
    + [1] LabTracker contain [*] Doctor
    + [1] LabTracker contain [*] Patient
    + [0..*] TestRequisition contain [*] Test
    + [0..*] TestGroup contain [*] Test
    + [0..*] Appointment contain [*] TestRequisition
    + [1] Appointment contain [*] Lab

Final Association Relationships:
    + [1] TestRequisition associate [1] Doctor
    + [1] TestRequisition associate [1] Patient
    + [0..*] TestRequisition associate [0..*] TestGroup
    + [0..*] Test associate [1] TestGroup
    + [1] Test associate [1] Time
    + [1] Test associate [0..*] TestResult
    + [1] TestResult associate [1] Text
    + [1] Appointment associate [1] Patient
    + [1] Appointment associate [1] Lab
    + [1] Appointment associate [1] TimeRange
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + TestRequisition inherit LabTracker
   + Test inherit LabTracker
   + TestGroup inherit LabTracker
   + TestResult inherit LabTracker
   + Appointment inherit LabTracker
   + Lab inherit LabTracker
   + TimeRange inherit LabTracker
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date)
   + Test(duration: Time)
   + TestGroup()
   + TestResult(result: Enum[Negative, Positive], report: Text)
   + Appointment(labLocation: String, businessHours: TimeRange, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int, changeCancellationFee: Currency)
   + Lab(address: String, businessHours: TimeRange, fee: Currency)
   + TimeRange(startTime: Time, endTime: Time)

Relationships:
# Final Association Relationships:
   + [1] TestRequisition associate [1] Doctor
   + [1] TestRequisition associate [1] Patient
   + [0..*] TestRequisition associate [0..*] TestGroup
   + [0..*] Test associate [1] TestGroup
   + [1] Test associate [1] Time
   + [1] Test associate [0..*] TestResult
   + [1] TestResult associate [1] Text
   + [1] Appointment associate [1] Patient
   + [1] Appointment associate [1] Lab
   + [1] Appointment associate [1] TimeRange
   + [1] LabTracker contain [*] Lab
   + [1] LabTracker contain [*] Doctor
   + [1] LabTracker contain [*] Patient
   + [0..*] TestRequisition contain [*] Test
   + [0..*] TestGroup contain [*] Test
   + [0..*] Appointment contain [*] TestRequisition
   + [1] Appointment contain [*] Lab
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepeatInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:Time]
Class: TestGroup (class) - Enum Attributes: [], Class Attributes: []
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:Enum[Negative,Positive]:,report:Text]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [labLocation:String,businessHours:TimeRange,confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,registrationNumber:int,changeCancellationFee:Currency]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:TimeRange,fee:Currency]
Class: TimeRange (class) - Enum Attributes: [], Class Attributes: [startTime:Time,endTime:Time]
Relationships:
 1 TestRequisition association 1 Doctor
 1 TestRequisition association 1 Patient
 0..* TestRequisition association 0..* TestGroup
 0..* Test association 1 TestGroup
 1 Test association 1 Time
 1 Test association 0..* TestResult
 1 TestResult association 1 Text
 1 Appointment association 1 Patient
 1 Appointment association 1 Lab
 1 Appointment association 1 TimeRange
 1 LabTracker association * Lab
 1 LabTracker association * Doctor
 1 LabTracker association * Patient
 0..* TestRequisition association * Test
 0..* TestGroup association * Test
 0..* Appointment association * TestRequisition
 1 Appointment association * Lab
--------------------------------------------------------------------------------
--4/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'RepeatInterval(enum)' - 'Interval(enum)'
 'TimeRange(class)' - 'BusinessHour(class)'
-Attributes:
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'RepeatInterval(enum):Weekly' - 'weekly'
 'RepeatInterval(enum):Monthly' - 'monthly'
 'RepeatInterval(enum):Yearly' - 'yearly'
 'TimeRange(class):startTime' - 'startTime'
 'TimeRange(class):endTime' - 'endTime'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
 ' 1 LabTracker association * Lab' - ' 1 LabTracker association * Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  9                   16                  
Attributes          34                  13                  43                  
Associations        15                  2                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------5/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestType(BloodTest, Ultrasound)
    + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signature:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + TestRequisition( validFromDate:Date,  repeatTimes:int,  repeatInterval:RepeatInterval)
    + Test( type:TestType,  duration:int)
    + TestResult( result:string,  report:Text)
    + Appointment( labAddress:string,  labBusinessHours:BusinessHours,  confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  labRegistrationNumber:int)
    + BusinessHours( startTime:Time,  endTime:Time,  fee:double)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestType(BloodTest, Ultrasound)
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date, repeatTimes: int, repeatInterval: RepeatInterval)
   + Test(type: TestType, duration: int)
   + TestResult(result: String, report: Text)
   + Appointment(labAddress: String, labBusinessHours: BusinessHours, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, labRegistrationNumber: int)
   + BusinessHours(startTime: Time, endTime: Time, fee: double)

AI_answer(association):

```
Final Composition Relationships:
    + [1] LabTracker contain [*] Doctor
    + [1] LabTracker contain [*] Patient
    + [1] Doctor contain [*] TestRequisition
    + [1] TestRequisition contain [*] Test
    + [1] Test contain [1] TestResult
    + [1] Patient contain [1] Appointment
    + [1] Appointment contain [1] BusinessHours

Final Association Relationships:
    + [1] Doctor associate [0..*] Doctor
    + [1] Doctor associate [0..*] Patient
    + [1] Patient associate [0..*] Patient
    + [1] Patient associate [0..*] Doctor
    + [1] TestRequisition associate [1] Doctor
    + [1] TestRequisition associate [1] Patient
    + [1] Test associate [1] TestRequisition
    + [1] TestResult associate [1] Test
    + [1] Appointment associate [1] Patient
    + [1] Appointment associate [1] Lab
    + [1] BusinessHours associate [1] Lab
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Test inherit TestRequisition
    + TestResult inherit Test
    + Appointment inherit Test
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date, repeatTimes: int, repeatInterval: RepeatInterval)
   + Test(type: String, duration: int)
   + TestResult(result: String, report: Text)
   + Appointment(labAddress: String, labBusinessHours: BusinessHours, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, labRegistrationNumber: int)
   + BusinessHours(startTime: Time, endTime: Time, fee: double)

Relationships:
# Final Association Relationships:
   + [1] Doctor associate [0..*] Doctor
   + [1] Doctor associate [0..*] Patient
   + [1] Patient associate [0..*] Doctor
   + [1] Patient associate [0..*] Patient
   + [1] TestRequisition associate [1] Doctor
   + [1] TestRequisition associate [1] Patient
   + [1] Test associate [1] TestRequisition
   + [1] TestResult associate [1] Test
   + [1] Appointment associate [1] Patient
   + [1] Appointment associate [1] BusinessHours
   + [1] BusinessHours associate [1] Lab
   + [1] LabTracker contain [*] Doctor
   + [1] LabTracker contain [*] Patient
   + [1] Doctor contain [*] TestRequisition
   + [1] TestRequisition contain [*] Test
   + [1] Test contain [1] TestResult
   + [1] Patient contain [1] Appointment
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepeatInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date,repeatTimes:int,repeatInterval:RepeatInterval]
Class: Test (class) - Enum Attributes: [], Class Attributes: [type:String,duration:int]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:String,report:Text]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [labAddress:String,labBusinessHours:BusinessHours,confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,labRegistrationNumber:int]
Class: BusinessHours (class) - Enum Attributes: [], Class Attributes: [startTime:Time,endTime:Time,fee:double]
Relationships:
 1 Doctor association 0..* Doctor
 1 Doctor association 0..* Patient
 1 Patient association 0..* Doctor
 1 Patient association 0..* Patient
 1 TestRequisition association 1 Doctor
 1 TestRequisition association 1 Patient
 1 Test association 1 TestRequisition
 1 TestResult association 1 Test
 1 Appointment association 1 Patient
 1 Appointment association 1 BusinessHours
 1 BusinessHours association 1 Lab
 1 LabTracker association * Doctor
 1 LabTracker association * Patient
 1 Doctor association * TestRequisition
 1 TestRequisition association * Test
 1 Test association 1 TestResult
 1 Patient association 1 Appointment
--------------------------------------------------------------------------------
--5/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'BusinessHours(class)' - 'BusinessHour(class)'
 'RepeatInterval(enum)' - 'Interval(enum)'
-Attributes:
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'BusinessHours(class):startTime' - 'startTime'
 'BusinessHours(class):endTime' - 'endTime'
 'RepeatInterval(enum):Weekly' - 'weekly'
 'RepeatInterval(enum):Monthly' - 'monthly'
 'RepeatInterval(enum):Yearly' - 'yearly'
-Relationships:
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             9                   8                   16                  
Attributes          33                  12                  43                  
Associations        16                  0                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------6/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestGroup(BloodTests, UltrasoundExaminations)
    + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
    + TestResult(Negative, Positive)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signature:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + TestRequisition( validFromDate:Date,  repeatTimes:int,  interval:RepetitionInterval)
    + Test( group:TestGroup,  duration:int)
    + TestAppointment( confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  registrationNumber:int)
    + Lab( address:string,  businessHours:TimeRange,  fee:double)
    + TestResult( result:TestResult,  report:Report)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestGroup(BloodTests, UltrasoundExaminations)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
   + TestResult(Negative, Positive)
Classes:
   + LabTracker()
   + Doctor(practitionerNumber:int, signature:Image, fullName:String, address:String, phoneNumber:String)
   + Patient(healthNumber:String, firstName:String, lastName:String, dateOfBirth:Date, address:String, phoneNumber:String)
   + TestRequisition(validFromDate:Date, repeatTimes:int, interval:RepetitionInterval)
   + Test(group:TestGroup, duration:int)
   + TestAppointment(confirmationNumber:int, date:Date, startTime:Time, endTime:Time, labName:String, registrationNumber:int)
   + Lab(address:String, businessHours:TimeRange, fee:double)
   + TestResult(result:TestResult, report:Report)

AI_answer(association):
```
Final Composition Relationships:
    + [1] Doctor contain [1] Image
    + [1] Doctor contain [1] TestRequisition
    + [0..*] TestRequisition contain [1] Patient
    + [0..*] TestRequisition contain [0..*] Test
    + [1] Test contain [1] TestGroup
    + [1] TestResult contain [1] Report

Final Association Relationships:
    + [0..*] Patient associate [0..*] TestRequisition
    + [0..*] Patient associate [0..*] TestAppointment
    + [0..*] Lab associate [0..*] TestAppointment
```
--------------------------------------------------------------------------------
AI_answer(inheritance):

```
Final Inheritance Relationships:
   + Appointment inherit TestAppointment
   + Lab inherit TestAppointment
   + DropOffTest inherit Test
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + TestGroup(BloodTests, UltrasoundExaminations)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
   + TestResult(Negative, Positive)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber:int, signature:Image, fullName:String, address:String, phoneNumber:String)
   + Patient(healthNumber:String, firstName:String, lastName:String, dateOfBirth:Date, address:String, phoneNumber:String)
   + TestRequisition(validFromDate:Date, repeatTimes:int, interval:RepetitionInterval)
   + Test(group:TestGroup, duration:int)
   + TestAppointment(confirmationNumber:int, date:Date, startTime:Time, endTime:Time, labName:String, registrationNumber:int)
   + Lab(address:String, businessHours:TimeRange, fee:double)
   + TestResult(result:TestResult, report:Report)
   + DropOffTest(duration:int)
   + Report()

Relationships:
# Final Inheritance Relationships:
# Final Association Relationships:
   + [0..*] Patient associate [0..*] TestRequisition
   + [0..*] Patient associate [0..*] TestAppointment
   + [0..*] Lab associate [0..*] TestAppointment
   + [1] Doctor contain [1] Image
   + [1] Doctor contain [1] TestRequisition
   + [0..*] TestRequisition contain [1] Patient
   + [0..*] TestRequisition contain [0..*] Test
   + [1] Test contain [1] TestGroup
   + [1] TestResult contain [1] Report
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: TestGroup (enum) - Enum Attributes: [BloodTests, UltrasoundExaminations], Class Attributes: []
Class: RepetitionInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: TestResult (enum) - Enum Attributes: [Negative, Positive], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date,repeatTimes:int,interval:RepetitionInterval]
Class: Test (class) - Enum Attributes: [], Class Attributes: [group:TestGroup,duration:int]
Class: TestAppointment (class) - Enum Attributes: [], Class Attributes: [confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,registrationNumber:int]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:TimeRange,fee:double]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:TestResult,report:Report]
Class: DropOffTest (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: Report (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 0..* Patient association 0..* TestRequisition
 0..* Patient association 0..* TestAppointment
 0..* Lab association 0..* TestAppointment
 1 Doctor association 1 Image
 1 Doctor association 1 TestRequisition
 0..* TestRequisition association 1 Patient
 0..* TestRequisition association 0..* Test
 1 Test association 1 TestGroup
 1 TestResult association 1 Report
--------------------------------------------------------------------------------
--6/20--Classes and attributes matching process:
-Class:
 'TestResult(enum)' - 'TestResult(class)'
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'Lab(class)' - 'Lab(class)'
 'RepetitionInterval(enum)' - 'Interval(enum)'
 'TestAppointment(class)' - 'Appointment(class)'
-Attributes:
 'TestResult(enum):Negative' - 'negative'
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'Lab(class):address' - 'address'
 'RepetitionInterval(enum):Weekly' - 'weekly'
 'RepetitionInterval(enum):Monthly' - 'monthly'
 'RepetitionInterval(enum):Yearly' - 'yearly'
 'TestAppointment(class):date' - 'date'
 'TestAppointment(class):startTime' - 'startTime'
 'TestAppointment(class):endTime' - 'endTime'
-Relationships:
 ' 0..* Lab association 0..* TestAppointment' - ' * Appointment association 1 Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  8                   16                  
Attributes          36                  11                  43                  
Associations        8                   1                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------7/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + TestGroup(BloodTests, UltrasoundExaminations)
    + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signatureImage:image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + Test( duration:int)
    + TestRequisition( validFromDate:Date)
    + TestCombination()
    + TestRepetition( numberOfTimes:int,  interval:RepetitionInterval)
    + TestResult( resultType:string,  report:string)
    + Appointment( confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  registrationNumber:int)
    + Lab( address:string,  businessHours:string,  fee:float)
    + BusinessHours( startTime:Time,  endTime:Time)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + TestGroup(BloodTests, UltrasoundExaminations)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signatureImage: image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + Test(duration: int)
   + TestRequisition(validFromDate: Date)
   + TestCombination()
   + TestRepetition(numberOfTimes: int, interval: RepetitionInterval)
   + TestResult(resultType: String, report: String)
   + Appointment(confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int)
   + Lab(address: String, businessHours: String, fee: float)
   + BusinessHours(startTime: Time, endTime: Time)
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] Lab contain [*] BusinessHours

Final Association Relationships:
    + [1] Doctor associate [1] TestRequisition
    + [1] Doctor associate [*] Test
    + [1] Doctor associate [*] Doctor
    + [1] Doctor associate [0..1] TestCombination
    + [1] Patient associate [1] TestRequisition
    + [0..*] TestRequisition associate [*] Test
    + [0..1] TestRequisition associate [0..1] TestRepetition
    + [0..*] TestRequisition associate [*] TestResult
    + [0..*] Test associate [*] TestResult
    + [0..*] Patient associate [*] Appointment
    + [1] Appointment associate [1] Lab
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + TestCombination inherit Test
   + TestRepetition inherit Test
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signatureImage: image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + Test(duration: int)
   + TestRequisition(validFromDate: Date)
   + TestCombination()
   + TestRepetition(numberOfTimes: int, interval: RepetitionInterval)
   + TestResult(resultType: String, report: String)
   + Appointment(confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int)
   + Lab(address: String, businessHours: String, fee: float)
   + BusinessHours(startTime: Time, endTime: Time)

Relationships:
# Final Inheritance Relationships:
   + [1] TestCombination inherit Test
   + [1] TestRepetition inherit Test
# Final Association Relationships:
   + [1] Doctor associate [1] TestRequisition
   + [1] Doctor associate [*] Test
   + [1] Doctor associate [*] Doctor
   + [1] Doctor associate [0..1] TestCombination
   + [1] Patient associate [1] TestRequisition
   + [0..*] TestRequisition associate [*] Test
   + [0..1] TestRequisition associate [0..1] TestRepetition
   + [0..*] TestRequisition associate [*] TestResult
   + [0..*] Test associate [*] TestResult
   + [0..*] Patient associate [*] Appointment
   + [1] Appointment associate [1] Lab
   + [1] Lab contain [*] BusinessHours
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepetitionInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signatureImage:image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date]
Class: TestCombination (class) - Enum Attributes: [], Class Attributes: []
Class: TestRepetition (class) - Enum Attributes: [], Class Attributes: [numberOfTimes:int,interval:RepetitionInterval]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [resultType:String,report:String]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,registrationNumber:int]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:String,fee:float]
Class: BusinessHours (class) - Enum Attributes: [], Class Attributes: [startTime:Time,endTime:Time]
Relationships:
 False TestCombination inheritance False Test
 False TestRepetition inheritance False Test
 1 Doctor association 1 TestRequisition
 1 Doctor association * Test
 1 Doctor association * Doctor
 1 Doctor association 0..1 TestCombination
 1 Patient association 1 TestRequisition
 0..* TestRequisition association * Test
 0..1 TestRequisition association 0..1 TestRepetition
 0..* TestRequisition association * TestResult
 0..* Test association * TestResult
 0..* Patient association * Appointment
 1 Appointment association 1 Lab
 1 Lab association * BusinessHours
--------------------------------------------------------------------------------
--7/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'BusinessHours(class)' - 'BusinessHour(class)'
 'RepetitionInterval(enum)' - 'Interval(enum)'
-Attributes:
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'BusinessHours(class):startTime' - 'startTime'
 'BusinessHours(class):endTime' - 'endTime'
 'RepetitionInterval(enum):Weekly' - 'weekly'
 'RepetitionInterval(enum):Monthly' - 'monthly'
 'RepetitionInterval(enum):Yearly' - 'yearly'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             12                  9                   16                  
Attributes          32                  12                  43                  
Associations        12                  1                   20                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------8/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestGroup(BloodTests, UltrasoundExaminations)
    + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
    + TestResult(Negative, Positive)

# Classes (attributes):
    + LabTracker()
    + Doctor(practitionerNumber:int, signatureImage:string, fullName:string, address:string, phoneNumber:string)
    + Patient(healthNumber:string, firstName:string, lastName:string, dateOfBirth:Date, address:string, phoneNumber:string)
    + Test(duration:int, group:TestGroup)
    + Appointment(date:Date, startTime:Time, endTime:Time, labName:string, labRegistrationNumber:string)
    + Lab(address:string, businessHours:string, registrationNumber:string, fee:double)
    + TestRequisition(validFromDate:Date, repeatedTimes:int, repeatInterval:RepetitionInterval)
    + TestResultInfo(result:TestResult, report:string)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestGroup(BloodTests, UltrasoundExaminations)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
   + TestResult(Negative, Positive)
Classes:
   + LabTracker()
   + Doctor(practitionerNumber:int, signatureImage:String, fullName:String, address:String, phoneNumber:String)
   + Patient(healthNumber:String, firstName:String, lastName:String, dateOfBirth:Date, address:String, phoneNumber:String)
   + Test(duration:int, group:TestGroup)
   + Appointment(date:Date, startTime:Time, endTime:Time, labName:String, labRegistrationNumber:String)
   + Lab(address:String, businessHours:String, registrationNumber:String, fee:double)
   + TestRequisition(validFromDate:Date, repeatedTimes:int, repeatInterval:RepetitionInterval)
   + TestResultInfo(result:TestResult, report:String)

AI_answer(association):
```
Final Composition Relationships:
    + [1] LabTracker contain [*] Doctor
    + [1] LabTracker contain [*] Patient
    + [1] LabTracker contain [*] TestRequisition
    + [1] LabTracker contain [*] TestResultInfo
    + [1] LabTracker contain [*] Appointment
    + [1] LabTracker contain [*] Lab

Final Association Relationships:
    + [1] Doctor associate [0..*] TestRequisition
    + [1] Patient associate [0..*] TestRequisition
    + [1] TestRequisition associate [0..*] Test
    + [1] TestRequisition associate [0..*] TestResultInfo
    + [1] TestRequisition associate [0..*] Appointment
    + [1] Test associate [0..*] TestGroup
    + [1] Appointment associate [1] Lab
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Intermidiate reasoning results:
   + Test inherit TestRequisition because a Test is-a-kind-of TestRequisition.
   + Appointment inherit TestRequisition because an Appointment is-a-kind-of TestRequisition.
   + TestResultInfo inherit TestRequisition because TestResultInfo is-a-kind-of TestRequisition.
```

```
Final Inheritance Relationships:
   + Test inherit TestRequisition
   + Appointment inherit TestRequisition
   + TestResultInfo inherit TestRequisition
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + TestGroup(BloodTests, UltrasoundExaminations)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
   + TestResult(Negative, Positive)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber:int, signatureImage:String, fullName:String, address:String, phoneNumber:String)
   + Patient(healthNumber:String, firstName:String, lastName:String, dateOfBirth:Date, address:String, phoneNumber:String)
   + Test(duration:int, group:TestGroup)
   + Appointment(date:Date, startTime:Time, endTime:Time, labName:String, labRegistrationNumber:String)
   + Lab(address:String, businessHours:String, registrationNumber:String, fee:double)
   + TestRequisition(validFromDate:Date, repeatedTimes:int, repeatInterval:RepetitionInterval)
   + TestResultInfo(result:TestResult, report:String)

Relationships:
# Final Association Relationships:
   + [1] Doctor associate [0..*] TestRequisition
   + [1] Patient associate [0..*] TestRequisition
   + [1] TestRequisition associate [0..*] Test
   + [1] TestRequisition associate [0..*] TestResultInfo
   + [1] TestRequisition associate [0..*] Appointment
   + [1] Test associate [0..*] TestGroup
   + [1] Appointment associate [1] Lab
   + [1] LabTracker contain [*] Doctor
   + [1] LabTracker contain [*] Patient
   + [1] LabTracker contain [*] TestRequisition
   + [1] LabTracker contain [*] TestResultInfo
   + [1] LabTracker contain [*] Appointment
   + [1] LabTracker contain [*] Lab
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: TestGroup (enum) - Enum Attributes: [BloodTests, UltrasoundExaminations], Class Attributes: []
Class: RepetitionInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: TestResult (enum) - Enum Attributes: [Negative, Positive], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signatureImage:String,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:int,group:TestGroup]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [date:Date,startTime:Time,endTime:Time,labName:String,labRegistrationNumber:String]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:String,registrationNumber:String,fee:double]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date,repeatedTimes:int,repeatInterval:RepetitionInterval]
Class: TestResultInfo (class) - Enum Attributes: [], Class Attributes: [result:TestResult,report:String]
Relationships:
 1 Doctor association 0..* TestRequisition
 1 Patient association 0..* TestRequisition
 1 TestRequisition association 0..* Test
 1 TestRequisition association 0..* TestResultInfo
 1 TestRequisition association 0..* Appointment
 1 Test association 0..* TestGroup
 1 Appointment association 1 Lab
 1 LabTracker association * Doctor
 1 LabTracker association * Patient
 1 LabTracker association * TestRequisition
 1 LabTracker association * TestResultInfo
 1 LabTracker association * Appointment
 1 LabTracker association * Lab
--------------------------------------------------------------------------------
--8/20--Classes and attributes matching process:
-Class:
 'TestResult(enum)' - 'TestResult(class)'
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'RepetitionInterval(enum)' - 'Interval(enum)'
-Attributes:
 'TestResult(enum):Negative' - 'negative'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'Lab(class):registrationNumber' - 'registrationNumber'
 'RepetitionInterval(enum):Weekly' - 'weekly'
 'RepetitionInterval(enum):Monthly' - 'monthly'
 'RepetitionInterval(enum):Yearly' - 'yearly'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
 ' 1 LabTracker association * Appointment' - ' 1 LabTracker association * Appointment'
 ' 1 LabTracker association * Lab' - ' 1 LabTracker association * Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  8                   16                  
Attributes          35                  11                  43                  
Associations        13                  3                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------9/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestType(BloodTest, Ultrasound)
    + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signatureImage:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + TestRequisition( doctor:Doctor,  patient:Patient,  validFromDate:Date,  repeatedTimes:int,  repetitionInterval:RepetitionInterval)
    + Test( type:TestType,  duration:int)
    + TestResult( result:string,  report:Text)
    + Appointment( labAddress:string,  labBusinessHours:string,  confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  labRegistrationNumber:int)
    + Lab( address:string,  businessHours:string,  registrationNumber:int,  fee:float)
    + AppointmentChangeFee( fee:float)
    + AppointmentCancellationFee( fee:float)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestType(BloodTest, Ultrasound)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signatureImage: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(doctor: Doctor, patient: Patient, validFromDate: Date, repeatedTimes: int, repetitionInterval: RepetitionInterval)
   + Test(type: TestType, duration: int)
   + TestResult(result: String, report: Text)
   + Appointment(labAddress: String, labBusinessHours: String, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, labRegistrationNumber: int)
   + Lab(address: String, businessHours: String, registrationNumber: int, fee: float)
   + AppointmentChangeFee(fee: float)
   + AppointmentCancellationFee(fee: float)

AI_answer(association):
```
Final Composition Relationships:
    + [1] LabTracker contain [*] Doctor
    + [1] LabTracker contain [*] Patient
    + [1] LabTracker contain [*] TestRequisition
    + [1] Lab contain [*] Test
    + [1] TestRequisition contain [*] Test
    + [1] TestRequisition contain [*] TestResult
    + [1] TestRequisition contain [*] Appointment

Final Association Relationships:
    + [1] Doctor associate [1] TestRequisition
    + [1] Patient associate [1] TestRequisition
    + [1] Test associate [0..*] TestRequisition
    + [1] TestResult associate [1] Test
    + [1] TestRequisition associate [0..*] Appointment
    + [1] Patient associate [0..*] Appointment
    + [1] Appointment associate [1] Lab
    + [1] Lab associate [1] Appointment
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + TestRequisition inherit LabTracker
   + Test inherit Test
   + TestResult inherit TestResult
   + Appointment inherit Appointment
   + Lab inherit Lab
   + AppointmentChangeFee inherit AppointmentChangeFee
   + AppointmentCancellationFee inherit AppointmentCancellationFee
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + TestType(BloodTest, Ultrasound)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signatureImage: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(doctor: Doctor, patient: Patient, validFromDate: Date, repeatedTimes: int, repetitionInterval: RepetitionInterval)
   + Test(type: TestType, duration: int)
   + TestResult(result: String, report: Text)
   + Appointment(labAddress: String, labBusinessHours: String, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, labRegistrationNumber: int)
   + Lab(address: String, businessHours: String, registrationNumber: int, fee: float)
   + AppointmentChangeFee(fee: float)
   + AppointmentCancellationFee(fee: float)

Relationships:
# Final Inheritance Relationships:

# Final Association Relationships:
   + [1] Doctor associate [1] TestRequisition
   + [1] Patient associate [1] TestRequisition
   + [1] Test associate [0..*] TestRequisition
   + [1] TestResult associate [1] Test
   + [1] TestRequisition associate [0..*] Appointment
   + [1] Patient associate [0..*] Appointment
   + [1] Appointment associate [1] Lab
   + [1] Lab associate [1] Appointment
   + [1] LabTracker contain [*] Doctor
   + [1] LabTracker contain [*] Patient
   + [1] LabTracker contain [*] TestRequisition
   + [1] Lab contain [*] Test
   + [1] TestRequisition contain [*] Test
   + [1] TestRequisition contain [*] TestResult
   + [1] TestRequisition contain [*] Appointment
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: TestType (enum) - Enum Attributes: [BloodTest, Ultrasound], Class Attributes: []
Class: RepetitionInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signatureImage:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [doctor:Doctor,patient:Patient,validFromDate:Date,repeatedTimes:int,repetitionInterval:RepetitionInterval]
Class: Test (class) - Enum Attributes: [], Class Attributes: [type:TestType,duration:int]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:String,report:Text]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [labAddress:String,labBusinessHours:String,confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,labRegistrationNumber:int]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:String,registrationNumber:int,fee:float]
Class: AppointmentChangeFee (class) - Enum Attributes: [], Class Attributes: [fee:float]
Class: AppointmentCancellationFee (class) - Enum Attributes: [], Class Attributes: [fee:float]
Relationships:
 1 Doctor association 1 TestRequisition
 1 Patient association 1 TestRequisition
 1 Test association 0..* TestRequisition
 1 TestResult association 1 Test
 1 TestRequisition association 0..* Appointment
 1 Patient association 0..* Appointment
 1 Appointment association 1 Lab
 1 Lab association 1 Appointment
 1 LabTracker association * Doctor
 1 LabTracker association * Patient
 1 LabTracker association * TestRequisition
 1 Lab association * Test
 1 TestRequisition association * Test
 1 TestRequisition association * TestResult
 1 TestRequisition association * Appointment
--------------------------------------------------------------------------------
--9/20--Classes and attributes matching process:
-Class:
 'TestType(enum)' - 'TestType(class)'
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'RepetitionInterval(enum)' - 'Interval(enum)'
-Attributes:
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'Lab(class):registrationNumber' - 'registrationNumber'
 'RepetitionInterval(enum):Weekly' - 'weekly'
 'RepetitionInterval(enum):Monthly' - 'monthly'
 'RepetitionInterval(enum):Yearly' - 'yearly'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             12                  9                   16                  
Attributes          40                  11                  43                  
Associations        15                  1                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------10/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestGroup(BloodTests, UltrasoundExaminations)
    + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
    + TestResult(Negative, Positive)
# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signatureImage:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + Test( duration:int)
    + Requisition( validFromDate:Date)
    + TestRepetition( times:int,  interval:RepetitionInterval)
    + TestResult( result:TestResult,  report:Text)
    + Appointment( confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  labRegistrationNumber:int)
    + Lab( address:string,  businessHours:string,  registrationNumber:int,  fee:float)
    + TestType( appointmentRequired:boolean,  sampleDropOff:boolean)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestGroup(BloodTests, UltrasoundExaminations)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
   + TestResult(Negative, Positive)
Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signatureImage: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + Test(duration: int)
   + Requisition(validFromDate: Date)
   + TestRepetition(times: int, interval: RepetitionInterval)
   + TestResult(result: TestResult, report: Text)
   + Appointment(confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, labRegistrationNumber: int)
   + Lab(address: String, businessHours: String, registrationNumber: int, fee: float)
   + TestType(appointmentRequired: boolean, sampleDropOff: boolean)

AI_answer(association):

```
Final Composition Relationships:
    + [1] LabTracker contain [*] Doctor
    + [1] LabTracker contain [*] Patient
    + [1] LabTracker contain [*] Lab
    + [1] Doctor contain [*] Requisition
    + [1] Requisition contain [*] Test
    + [0..1] Requisition contain [1] TestRepetition
    + [1] Test contain [1] TestResult
    + [1] Patient contain [*] Appointment

Final Association Relationships:
    + [1] Doctor associate [1] Doctor (self-association)
    + [1] Doctor associate [1] Patient
    + [1] Patient associate [1] Doctor
    + [1] Patient associate [1] Lab
    + [1] Requisition associate [1] Doctor
    + [1] Requisition associate [1] Patient
    + [0..*] Requisition associate [1] Test
    + [1] Test associate [1] Lab
    + [0..*] Test associate [1] TestType
    + [1] Appointment associate [1] Lab
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + Appointment inherit TestRepetition because appointments can have a repetition pattern just like tests.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + TestGroup(BloodTests, UltrasoundExaminations)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
   + TestResult(Negative, Positive)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signatureImage: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + Test(duration: int)
   + Requisition(validFromDate: Date)
   + TestRepetition(times: int, interval: RepetitionInterval)
   + TestResult(result: TestResult, report: Text)
   + Appointment(confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, labRegistrationNumber: int)
   + Lab(address: String, businessHours: String, registrationNumber: int, fee: float)
   + TestType(appointmentRequired: boolean, sampleDropOff: boolean)

Relationships:
# Final Association Relationships:
   + [1] Doctor associate [1] Doctor (self-association)
   + [1] Doctor associate [1] Patient
   + [1] Patient associate [1] Doctor
   + [1] Patient associate [1] Lab
   + [1] Requisition associate [1] Doctor
   + [1] Requisition associate [1] Patient
   + [0..*] Requisition associate [1] Test
   + [1] Test associate [1] Lab
   + [0..*] Test associate [1] TestType
   + [1] Appointment associate [1] Lab
   + [1] LabTracker contain [*] Doctor
   + [1] LabTracker contain [*] Patient
   + [1] LabTracker contain [*] Lab
   + [1] Doctor contain [*] Requisition
   + [1] Requisition contain [*] Test
   + [0..1] Requisition contain [1] TestRepetition
   + [1] Test contain [1] TestResult
   + [1] Patient contain [*] Appointment
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: TestGroup (enum) - Enum Attributes: [BloodTests, UltrasoundExaminations], Class Attributes: []
Class: RepetitionInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: TestResult (enum) - Enum Attributes: [Negative, Positive], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signatureImage:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: Requisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date]
Class: TestRepetition (class) - Enum Attributes: [], Class Attributes: [times:int,interval:RepetitionInterval]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:TestResult,report:Text]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,labRegistrationNumber:int]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:String,registrationNumber:int,fee:float]
Class: TestType (class) - Enum Attributes: [], Class Attributes: [appointmentRequired:boolean,sampleDropOff:boolean]
Relationships:
 1 Doctor association 1 Doctor
 1 Doctor association 1 Patient
 1 Patient association 1 Doctor
 1 Patient association 1 Lab
 1 Requisition association 1 Doctor
 1 Requisition association 1 Patient
 0..* Requisition association 1 Test
 1 Test association 1 Lab
 0..* Test association 1 TestType
 1 Appointment association 1 Lab
 1 LabTracker association * Doctor
 1 LabTracker association * Patient
 1 LabTracker association * Lab
 1 Doctor association * Requisition
 1 Requisition association * Test
 0..1 Requisition association 1 TestRepetition
 1 Test association 1 TestResult
 1 Patient association * Appointment
--------------------------------------------------------------------------------
--10/20--Classes and attributes matching process:
-Class:
 'TestResult(enum)' - 'TestResult(class)'
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'Requisition(class)' - 'Requisition(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'TestType(class)' - 'TestType(class)'
 'RepetitionInterval(enum)' - 'Interval(enum)'
-Attributes:
 'TestResult(enum):Negative' - 'negative'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'Lab(class):registrationNumber' - 'registrationNumber'
 'RepetitionInterval(enum):Weekly' - 'weekly'
 'RepetitionInterval(enum):Monthly' - 'monthly'
 'RepetitionInterval(enum):Yearly' - 'yearly'
-Relationships:
 ' 1 Requisition association 1 Doctor' - ' 1 Doctor association * Requisition'
 ' 1 Requisition association 1 Patient' - ' 1 Patient association * Requisition'
 ' 0..* Test association 1 TestType' - ' 1 TestType association * Test'
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
 ' 1 LabTracker association * Lab' - ' 1 LabTracker association * Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             13                  10                  16                  
Attributes          37                  11                  43                  
Associations        18                  5                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------11/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestGroup(BloodTests, UltrasoundExaminations)
    + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signature:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + Test( duration:int)
    + TestRequisition( validFromDate:Date)
    + TestResult( result:string,  report:string)
    + Appointment( confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  registrationNumber:int)
    + Lab( address:string,  businessHours:string,  fee:float)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestGroup(BloodTests, UltrasoundExaminations)
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber:int, signature:Image, fullName:String, address:String, phoneNumber:String)
   + Patient(healthNumber:String, firstName:String, lastName:String, dateOfBirth:Date, address:String, phoneNumber:String)
   + Test(duration:int)
   + TestRequisition(validFromDate:Date)
   + TestResult(result:String, report:String)
   + Appointment(confirmationNumber:int, date:Date, startTime:Time, endTime:Time, labName:String, registrationNumber:int)
   + Lab(address:String, businessHours:String, fee:float)

AI_answer(association):

```
Final Composition Relationships:
    + [1] Lab contain [*] Test
    + [1] Lab contain [*] Appointment
    + [1] TestRequisition contain [*] Test
    + [1] TestRequisition contain [*] TestResult
    + [1] Appointment contain [1] Lab

Final Association Relationships:
    + [1] TestRequisition associate [1] Doctor
    + [1] TestRequisition associate [1] Patient
    + [0..*] TestRequisition associate [1] Test
    + [1] TestResult associate [1] Test
    + [1] TestResult associate [1] TestRequisition
    + [1] Appointment associate [1] TestRequisition
    + [1] Appointment associate [1] Patient
    + [1] Appointment associate [1] Lab
    + [0..*] Patient associate [1] Appointment
    + [0..*] Patient associate [0..*] TestRequisition
```
--------------------------------------------------------------------------------
AI_answer(inheritance):

```
Final Inheritance Relationships:
    + Patient inherit Person
    + Doctor inherit Person
    + TestRequisition inherit Requisition
    + TestResult inherit Result
    + Appointment inherit Schedule
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Person(fullName:String, address:String, phoneNumber:String)
   + Doctor(practitionerNumber:int, signature:Image) extends Person
   + Patient(healthNumber:String, dateOfBirth:Date) extends Person
   + Test(duration:int)
   + TestRequisition(validFromDate:Date, repeatInterval:RepeatInterval, repeatTimes:int)
   + TestResult(result:String, report:String)
   + Appointment(confirmationNumber:int, date:Date, startTime:Time, endTime:Time)
   + Lab(address:String, businessHours:String, fee:float)

Relationships:
# Final Inheritance Relationships:
   + Doctor extends Person
   + Patient extends Person
# Final Association Relationships:
   + [1] TestRequisition associate [1] Doctor
   + [1] TestRequisition associate [1] Patient
   + [0..*] TestRequisition associate [1] Test
   + [1] TestResult associate [1] Test
   + [1] TestResult associate [1] TestRequisition
   + [1] Appointment associate [1] TestRequisition
   + [1] Appointment associate [1] Patient
   + [1] Appointment associate [1] Lab
   + [0..*] Patient associate [1] Appointment
   + [0..*] Patient associate [0..*] TestRequisition
   + [1] Lab contain [*] Test
   + [1] Lab contain [*] Appointment
   + [1] TestRequisition contain [*] Test
   + [1] TestRequisition contain [*] TestResult
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepeatInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Person (class) - Enum Attributes: [], Class Attributes: [fullName:String,address:String,phoneNumber:String]
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,dateOfBirth:Date]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date,repeatInterval:RepeatInterval,repeatTimes:int]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:String,report:String]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [confirmationNumber:int,date:Date,startTime:Time,endTime:Time]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:String,fee:float]
Relationships:
 False Doctor inheritance False Person
 False Patient inheritance False Person
 1 TestRequisition association 1 Doctor
 1 TestRequisition association 1 Patient
 0..* TestRequisition association 1 Test
 1 TestResult association 1 Test
 1 TestResult association 1 TestRequisition
 1 Appointment association 1 TestRequisition
 1 Appointment association 1 Patient
 1 Appointment association 1 Lab
 0..* Patient association 1 Appointment
 0..* Patient association 0..* TestRequisition
 1 Lab association * Test
 1 Lab association * Appointment
 1 TestRequisition association * Test
 1 TestRequisition association * TestResult
--------------------------------------------------------------------------------
--11/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Person(class)' - 'Person(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'RepeatInterval(enum)' - 'Interval(enum)'
-Attributes:
 'Person(class):address' - 'address'
 'Person(class):phoneNumber' - 'phoneNumber'
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'RepeatInterval(enum):Weekly' - 'weekly'
 'RepeatInterval(enum):Monthly' - 'monthly'
 'RepeatInterval(enum):Yearly' - 'yearly'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  9                   16                  
Attributes          24                  13                  43                  
Associations        14                  1                   20                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------12/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestGroup(BloodTest, UltrasoundExamination)
    + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
    + TestResult(Negative, Positive)
    
# Classes (attributes):
    + LabTracker()
    + Doctor(practitionerNumber:int, signature:Image, fullName:string, address:string, phoneNumber:string)
    + Patient(healthNumber:string, firstName:string, lastName:string, dateOfBirth:Date, address:string, phoneNumber:string)
    + Test(duration:int)
    + Requisition(validFromDate:Date)
    + RepeatedTest(repetitionTimes:int, repetitionInterval:RepetitionInterval)
    + TestResultInfo(result:TestResult, report:string)
    + Appointment(confirmationNumber:int, date:Date, startTime:Time, endTime:Time, labName:string, labRegistrationNumber:int)
    + Lab(address:string, businessHours:string, fee:float)
    + LabBusinessHours(startOfBusiness:Time, endOfBusiness:Time)
--------------------------------------------------------------------------------
2nd conversation AI:

```
Enumerations:
   + TestGroup(BloodTest, UltrasoundExamination)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
   + TestResult(Negative, Positive)
Classes:
   + LabTracker()
   + Doctor(practitionerNumber:int, signature:Image, fullName:String, address:String, phoneNumber:String)
   + Patient(healthNumber:String, firstName:String, lastName:String, dateOfBirth:Date, address:String, phoneNumber:String)
   + Test(duration:int)
   + Requisition(validFromDate:Date)
   + RepeatedTest(repetitionTimes:int, repetitionInterval:RepetitionInterval)
   + TestResultInfo(result:TestResult, report:String)
   + Appointment(confirmationNumber:int, date:Date, startTime:Time, endTime:Time, labName:String, labRegistrationNumber:int)
   + Lab(address:String, businessHours:String, fee:float)
   + LabBusinessHours(startOfBusiness:Time, endOfBusiness:Time)
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] LabTracker contain [*] Doctor
    + [1] LabTracker contain [*] Patient
    + [1] LabTracker contain [*] Lab
    + [1] Doctor contain [*] Requisition
    + [1] Requisition contain [0..*] Test
    + [1] Requisition contain [0..1] RepeatedTest
    + [1] Requisition contain [*] TestResultInfo
    + [1] Patient contain [0..*] Appointment

Final Association Relationships:
    + [1] Doctor associate [*] Patient
    + [0..*] Test associate [1] Requisition
    + [0..*] Test associate [1] TestResultInfo
    + [1] Lab associate [*] Appointment
    + [1] Lab associate [*] LabBusinessHours
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + BloodTest extends Test
    + UltrasoundExam extends Test
    + XRayExam extends Test
    + DropOffTest extends Test
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
   + TestResult(Negative, Positive)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber:int, signature:Image, fullName:String, address:String, phoneNumber:String)
   + Patient(healthNumber:String, firstName:String, lastName:String, dateOfBirth:Date, address:String, phoneNumber:String)
   + Test(duration:int)
   + Requisition(validFromDate:Date)
   + RepeatedTest(repetitionTimes:int, repetitionInterval:RepetitionInterval)
   + TestResultInfo(result:TestResult, report:String)
   + Appointment(confirmationNumber:int, date:Date, startTime:Time, endTime:Time, labName:String, labRegistrationNumber:int)
   + Lab(address:String, businessHours:String, fee:float)
   + LabBusinessHours(startOfBusiness:Time, endOfBusiness:Time)
   + BloodTest(duration:int) extends Test
   + UltrasoundExam(duration:int) extends Test
   + XRayExam(duration:int) extends Test
   + DropOffTest(duration:int) extends Test

Relationships:
# Final Association Relationships:
   + [1] Doctor associate [*] Patient
   + [0..*] Test associate [1] Requisition
   + [0..*] Test associate [1] TestResultInfo
   + [1] Lab associate [*] Appointment
   + [1] Lab associate [*] LabBusinessHours
   + [1] LabTracker contain [*] Doctor
   + [1] LabTracker contain [*] Patient
   + [1] LabTracker contain [*] Lab
   + [1] Doctor contain [*] Requisition
   + [1] Requisition contain [0..*] Test
   + [1] Requisition contain [0..1] RepeatedTest
   + [1] Requisition contain [*] TestResultInfo
   + [1] Patient contain [0..*] Appointment
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepetitionInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: TestResult (enum) - Enum Attributes: [Negative, Positive], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: Requisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date]
Class: RepeatedTest (class) - Enum Attributes: [], Class Attributes: [repetitionTimes:int,repetitionInterval:RepetitionInterval]
Class: TestResultInfo (class) - Enum Attributes: [], Class Attributes: [result:TestResult,report:String]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,labRegistrationNumber:int]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:String,fee:float]
Class: LabBusinessHours (class) - Enum Attributes: [], Class Attributes: [startOfBusiness:Time,endOfBusiness:Time]
Class: BloodTest (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: UltrasoundExam (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: XRayExam (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: DropOffTest (class) - Enum Attributes: [], Class Attributes: [duration:int]
Relationships:
 1 Doctor association * Patient
 0..* Test association 1 Requisition
 0..* Test association 1 TestResultInfo
 1 Lab association * Appointment
 1 Lab association * LabBusinessHours
 1 LabTracker association * Doctor
 1 LabTracker association * Patient
 1 LabTracker association * Lab
 1 Doctor association * Requisition
 1 Requisition association 0..* Test
 1 Requisition association 0..1 RepeatedTest
 1 Requisition association * TestResultInfo
 1 Patient association 0..* Appointment
--------------------------------------------------------------------------------
--12/20--Classes and attributes matching process:
-Class:
 'TestResult(enum)' - 'TestResult(class)'
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'Requisition(class)' - 'Requisition(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'RepetitionInterval(enum)' - 'Interval(enum)'
-Attributes:
 'TestResult(enum):Negative' - 'negative'
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'RepetitionInterval(enum):Weekly' - 'weekly'
 'RepetitionInterval(enum):Monthly' - 'monthly'
 'RepetitionInterval(enum):Yearly' - 'yearly'
-Relationships:
 ' 1 Lab association * Appointment' - ' * Appointment association 1 Lab'
 ' 1 LabTracker association * Lab' - ' 1 LabTracker association * Lab'
 ' 1 Doctor association * Requisition' - ' 1 Doctor association * Requisition'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             16                  9                   16                  
Attributes          38                  11                  43                  
Associations        13                  3                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------13/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestGroup(BloodTest, Ultrasound)
    + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)
    + TestResult(Negative, Positive)
    
# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signatureImage:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + Test( duration:Time)
    + Requisition( validFromDate:Date)
    + Appointment( confirmationNumber:string,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  registrationNumber:string)
    + Lab( address:string,  businessHours:TimeRange,  fee:float)
    + BusinessHours( startTime:Time,  endTime:Time)
    + TestRepetition( times:int,  interval:RepeatInterval)
    + TestResult( result:TestResult,  report:Text)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestGroup(BloodTest, Ultrasound)
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)
   + TestResult(Negative, Positive)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signatureImage: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + Test(duration: Time)
   + Requisition(validFromDate: Date)
   + Appointment(confirmationNumber: String, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: String)
   + Lab(address: String, businessHours: TimeRange, fee: float)
   + BusinessHours(startTime: Time, endTime: Time)
   + TestRepetition(times: int, interval: RepeatInterval)
   + TestResult(result: TestResult, report: Text)

AI_answer(association):
```
Final Composition Relationships:
    + [1] Doctor contain [1] Image
    + [1] Doctor contain [*] Requisition
    + [1] Patient contain [*] Appointment
    + [1] Requisition contain [*] Test
    + [1] Requisition contain [1] Patient
    + [1] Requisition contain [1] Doctor
    + [1] TestRepetition contain [1] RepeatInterval
    + [1] TestResult contain [1] Text

Final Association Relationships:
    + [0..*] Requisition associate [1] Lab
    + [0..*] Appointment associate [1] Lab
    + [0..*] Appointment associate [1] Requisition
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + BloodTest inherit Test
    + Ultrasound inherit Test
    + XRay inherit Test
    + DropOffTest inherit Test
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)
   + TestResult(Negative, Positive)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signatureImage: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + Test(duration: Time)
   + Requisition(validFromDate: Date)
   + Appointment(confirmationNumber: String, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: String)
   + Lab(address: String, businessHours: TimeRange, fee: float)
   + BusinessHours(startTime: Time, endTime: Time)
   + TestRepetition(times: int, interval: RepeatInterval)
   + TestResult(result: TestResult, report: Text)
   + BloodTest(duration: Time) extends Test
   + Ultrasound(duration: Time) extends Test
   + XRay(duration: Time) extends Test
   + DropOffTest(duration: Time) extends Test

Relationships:
# Final Inheritance Relationships:
   + BloodTest extends Test
   + Ultrasound extends Test
   + XRay extends Test
   + DropOffTest extends Test
# Final Association Relationships:
   + [0..*] Requisition associate [1] Lab
   + [0..*] Appointment associate [1] Lab
   + [0..*] Appointment associate [1] Requisition
   + [1] Doctor contain [1] Image
   + [1] Doctor contain [*] Requisition
   + [1] Patient contain [*] Appointment
   + [1] Requisition contain [*] Test
   + [1] Requisition contain [1] Patient
   + [1] Requisition contain [1] Doctor
   + [1] TestRepetition contain [1] RepeatInterval
   + [1] TestResult contain [1] Text
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepeatInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: TestResult (enum) - Enum Attributes: [Negative, Positive], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signatureImage:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:Time]
Class: Requisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [confirmationNumber:String,date:Date,startTime:Time,endTime:Time,labName:String,registrationNumber:String]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:TimeRange,fee:float]
Class: BusinessHours (class) - Enum Attributes: [], Class Attributes: [startTime:Time,endTime:Time]
Class: TestRepetition (class) - Enum Attributes: [], Class Attributes: [times:int,interval:RepeatInterval]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:TestResult,report:Text]
Class: BloodTest (class) - Enum Attributes: [], Class Attributes: [duration:Time]
Class: Ultrasound (class) - Enum Attributes: [], Class Attributes: [duration:Time]
Class: XRay (class) - Enum Attributes: [], Class Attributes: [duration:Time]
Class: DropOffTest (class) - Enum Attributes: [], Class Attributes: [duration:Time]
Relationships:
 False BloodTest inheritance False Test
 False Ultrasound inheritance False Test
 False XRay inheritance False Test
 False DropOffTest inheritance False Test
 0..* Requisition association 1 Lab
 0..* Appointment association 1 Lab
 0..* Appointment association 1 Requisition
 1 Doctor association 1 Image
 1 Doctor association * Requisition
 1 Patient association * Appointment
 1 Requisition association * Test
 1 Requisition association 1 Patient
 1 Requisition association 1 Doctor
 1 TestRepetition association 1 RepeatInterval
 1 TestResult association 1 Text
--------------------------------------------------------------------------------
--13/20--Classes and attributes matching process:
-Class:
 'TestResult(enum)' - 'TestResult(class)'
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'Requisition(class)' - 'Requisition(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'BusinessHours(class)' - 'BusinessHour(class)'
 'RepeatInterval(enum)' - 'Interval(enum)'
-Attributes:
 'TestResult(enum):Negative' - 'negative'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'BusinessHours(class):startTime' - 'startTime'
 'BusinessHours(class):endTime' - 'endTime'
 'RepeatInterval(enum):Weekly' - 'weekly'
 'RepeatInterval(enum):Monthly' - 'monthly'
 'RepeatInterval(enum):Yearly' - 'yearly'
-Relationships:
 ' 0..* Appointment association 1 Lab' - ' * Appointment association 1 Lab'
 ' 0..* Appointment association 1 Requisition' - ' * Requisition association * Appointment'
 ' 1 Doctor association * Requisition' - ' 1 Doctor association * Requisition'
 ' 1 Requisition association 1 Patient' - ' 1 Patient association * Requisition'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             16                  10                  16                  
Attributes          38                  12                  43                  
Associations        9                   4                   20                  
Inheritances        4                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------14/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + TestGroup(BloodTests, UltrasoundExaminations)
    + TestRepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signature:Image,  fullName:string,  address:string, phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + Requisition( validFromDate:Date,  testGroup:TestGroup,  repeatedTimes:int,  repetitionInterval:TestRepetitionInterval)
    + Test( duration:int)
    + TestResult( resultType:string,  report:string)
    + Appointment( labAddress:string,  businessHours:string,  confirmationNumber:int,  date:Date,  startTime:Time, endTime:Time, labName:string,  regNumber:int)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + TestGroup(BloodTests, UltrasoundExaminations)
   + TestRepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
Classes:
   + LabTracker()
   + Doctor(practitionerNumber:int, signature:Image, fullName:String, address:String, phoneNumber:String)
   + Patient(healthNumber:String, firstName:String, lastName:String, dateOfBirth:Date, address:String, phoneNumber:String)
   + Requisition(validFromDate:Date, testGroup:TestGroup, repeatedTimes:int, repetitionInterval:TestRepetitionInterval)
   + Test(duration:int)
   + TestResult(resultType:String, report:String)
   + Appointment(labAddress:String, businessHours:String, confirmationNumber:int, date:Date, startTime:Time, endTime:Time, labName:String, regNumber:int)
```

AI_answer(association):

```
Final Composition Relationships:
    + [1] LabTracker contain [*] Doctor
    + [1] LabTracker contain [*] Patient
    + [1] Doctor contain [*] Requisition
    + [0..*] Requisition contain [*] Test
    + [1] Test contain [1] TestResult
    + [1] Patient contain [0..*] Appointment

Final Association Relationships:
    + [1] Doctor associate [*] Doctor (for prescribing tests to another doctor)
    + [1] Doctor associate [1] TestGroup
    + [1] Requisition associate [0..*] Test
    + [1] Requisition associate [1] Patient
    + [1] Test associate [1] TestGroup
    + [1] Appointment associate [1] Patient
    + [1] Appointment associate [1] Lab
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + TestGroup inherit Test
   + BloodTest inherit Test
   + UltrasoundExamination inherit Test
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + TestRepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber:int, signature:Image, fullName:String, address:String, phoneNumber:String)
   + Patient(healthNumber:String, firstName:String, lastName:String, dateOfBirth:Date, address:String, phoneNumber:String)
   + Requisition(validFromDate:Date, repeatedTimes:int, repetitionInterval:TestRepetitionInterval)
   + Test(duration:int)
   + TestResult(resultType:String, report:String)
   + Appointment(labAddress:String, businessHours:String, confirmationNumber:int, date:Date, startTime:Time, endTime:Time, labName:String, regNumber:int)
   + TestGroup
   + BloodTest
   + UltrasoundExamination

Relationships:
# Final Inheritance Relationships:
   + BloodTest extends Test
   + UltrasoundExamination extends Test
# Final Association Relationships:
   + [1] Doctor associate [*] Doctor (for prescribing tests to another doctor)
   + [1] Doctor associate [1] TestGroup
   + [1] Requisition associate [0..*] Test
   + [1] Requisition associate [1] Patient
   + [1] Test associate [1] TestGroup
   + [1] Appointment associate [1] Patient
   + [1] Appointment associate [1] Lab
   + [1] LabTracker contain [*] Doctor
   + [1] LabTracker contain [*] Patient
   + [1] Doctor contain [*] Requisition
   + [0..*] Requisition contain [*] Test
   + [1] Test contain [1] TestResult
   + [1] Patient contain [0..*] Appointment
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: TestRepetitionInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: Requisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date,repeatedTimes:int,repetitionInterval:TestRepetitionInterval]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [resultType:String,report:String]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [labAddress:String,businessHours:String,confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,regNumber:int]
Class: TestGroup (class) - Enum Attributes: [], Class Attributes: []
Class: BloodTest (class) - Enum Attributes: [], Class Attributes: []
Class: UltrasoundExamination (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False BloodTest inheritance False Test
 False UltrasoundExamination inheritance False Test
 1 Doctor association * Doctor
 1 Doctor association 1 TestGroup
 1 Requisition association 0..* Test
 1 Requisition association 1 Patient
 1 Test association 1 TestGroup
 1 Appointment association 1 Patient
 1 Appointment association 1 Lab
 1 LabTracker association * Doctor
 1 LabTracker association * Patient
 1 Doctor association * Requisition
 0..* Requisition association * Test
 1 Test association 1 TestResult
 1 Patient association 0..* Appointment
--------------------------------------------------------------------------------
--14/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Requisition(class)' - 'Requisition(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'TestRepetitionInterval(enum)' - 'Interval(enum)'
-Attributes:
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Requisition(class):repetitionInterval' - 'repetitionInterval'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'TestRepetitionInterval(enum):Weekly' - 'weekly'
 'TestRepetitionInterval(enum):Monthly' - 'monthly'
 'TestRepetitionInterval(enum):Yearly' - 'yearly'
-Relationships:
 ' 1 Requisition association 1 Patient' - ' 1 Patient association * Requisition'
 ' 1 Doctor association * Requisition' - ' 1 Doctor association * Requisition'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  8                   16                  
Attributes          29                  11                  43                  
Associations        12                  2                   20                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------15/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestType(BloodTest, UltrasoundExamination, XRayExamination, UrineSample, StoolSample)
    + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signature:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + TestRequisition( validFromDate:Date,  repeatedTimes:int,  repetitionInterval:RepetitionInterval)
    + Test( duration:int)
    + TestResult( result:bool,  report:string)
    + Appointment( labAddress:string,  businessHours:string,  confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  registrationNumber:int,  changeCancellationFee:double)
    + Lab( address:string,  businessHours:string,  confirmationNumber:int,  fee:double,  startTime:Time,  endTime:Time)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestType(BloodTest, UltrasoundExamination, XRayExamination, UrineSample, StoolSample)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date, repeatedTimes: int, repetitionInterval: RepetitionInterval)
   + Test(duration: int)
   + TestResult(result: boolean, report: String)
   + Appointment(labAddress: String, businessHours: String, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int, changeCancellationFee: double)
   + Lab(address: String, businessHours: String, confirmationNumber: int, fee: double, startTime: Time, endTime: Time)

AI_answer(association):
```
Final Composition Relationships:
    + [1] LabTracker contain [*] Doctor
    + [1] LabTracker contain [*] Patient
    + [1] LabTracker contain [*] TestRequisition
    + [1] Doctor contain [*] TestRequisition
    + [1] TestRequisition contain [*] Test
    + [1] TestRequisition contain [*] TestResult
    + [1] Patient contain [*] Appointment
    + [1] Lab contain [*] Appointment

Final Association Relationships:
    + [1] Doctor associate [1] Doctor
    + [1] Doctor associate [1] Patient
    + [0..*] Test associate [0..1] TestRequisition
    + [1] TestResult associate [0..1] Test
    + [1] Appointment associate [1] Patient
    + [1] Appointment associate [1] Lab
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + BloodTest inherit Test
   + UltrasoundExamination inherit Test
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date, repeatedTimes: int, repetitionInterval: RepetitionInterval)
   + Test(duration: int)
   + TestResult(result: boolean, report: String)
   + Appointment(labAddress: String, businessHours: String, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int, changeCancellationFee: double)
   + Lab(address: String, businessHours: String, confirmationNumber: int, fee: double, startTime: Time, endTime: Time)
   + BloodTest(duration: int) extends Test
   + UltrasoundExamination(duration: int) extends Test

Relationships:
# Final Association Relationships:
   + [1] Doctor associate [1] Doctor
   + [1] Doctor associate [1] Patient
   + [0..*] Test associate [0..1] TestRequisition
   + [1] TestResult associate [0..1] Test
   + [1] Appointment associate [1] Patient
   + [1] Appointment associate [1] Lab
   + [1] LabTracker contain [*] Doctor
   + [1] LabTracker contain [*] Patient
   + [1] LabTracker contain [*] TestRequisition
   + [1] Doctor contain [*] TestRequisition
   + [1] TestRequisition contain [*] Test
   + [1] TestRequisition contain [*] TestResult
   + [1] Patient contain [*] Appointment
   + [1] Lab contain [*] Appointment
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepetitionInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date,repeatedTimes:int,repetitionInterval:RepetitionInterval]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:boolean,report:String]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [labAddress:String,businessHours:String,confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,registrationNumber:int,changeCancellationFee:double]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:String,confirmationNumber:int,fee:double,startTime:Time,endTime:Time]
Class: BloodTest (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: UltrasoundExamination (class) - Enum Attributes: [], Class Attributes: [duration:int]
Relationships:
 1 Doctor association 1 Doctor
 1 Doctor association 1 Patient
 0..* Test association 0..1 TestRequisition
 1 TestResult association 0..1 Test
 1 Appointment association 1 Patient
 1 Appointment association 1 Lab
 1 LabTracker association * Doctor
 1 LabTracker association * Patient
 1 LabTracker association * TestRequisition
 1 Doctor association * TestRequisition
 1 TestRequisition association * Test
 1 TestRequisition association * TestResult
 1 Patient association * Appointment
 1 Lab association * Appointment
--------------------------------------------------------------------------------
--15/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'RepetitionInterval(enum)' - 'Interval(enum)'
-Attributes:
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'RepetitionInterval(enum):Weekly' - 'weekly'
 'RepetitionInterval(enum):Monthly' - 'monthly'
 'RepetitionInterval(enum):Yearly' - 'yearly'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  8                   16                  
Attributes          38                  11                  43                  
Associations        14                  1                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------16/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestGroup(BloodTest, Ultrasound)
    + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signatureImage:image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + Test( duration:int)
    + TestRequisition( validFromDate:Date)
    + TestResult( resultType:string,  report:string)
    + Appointment( confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  registrationNumber:int)
    + Lab( address:string,  businessHours:string,  registrationNumber:int,  fee:double)
    + LabBusinessHours( startTime:Time,  endTime:Time)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestGroup(BloodTest, Ultrasound)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signatureImage: image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + Test(duration: int)
   + TestRequisition(validFromDate: Date)
   + TestResult(resultType: String, report: String)
   + Appointment(confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int)
   + Lab(address: String, businessHours: String, registrationNumber: int, fee: double)
   + LabBusinessHours(startTime: Time, endTime: Time)

AI_answer(association):

```
Final Composition Relationships:
    + [1] LabTracker contain [*] TestRequisition
    + [1] LabTracker contain [*] Appointment
    + [1] LabTracker contain [*] TestResult
    + [1] LabTracker contain [*] Lab

Final Association Relationships:
    + [1] Doctor associate [0..*] TestRequisition
    + [1] Patient associate [0..*] TestRequisition
    + [0..*] TestRequisition associate [0..*] Test
    + [0..*] TestRequisition associate [0..1] Appointment
    + [0..*] TestRequisition associate [0..*] TestResult
    + [1] Appointment associate [1] Lab
    + [1] Lab associate [1] LabBusinessHours
```
--------------------------------------------------------------------------------
AI_answer(inheritance):

```
Final Inheritance Relationships:
   + TestRequisition inherit Test
   + TestResult inherit Test
   + Appointment inherit Lab
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signatureImage: image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + Test(duration: int)
   + TestRequisition(validFromDate: Date)
   + TestResult(resultType: String, report: String)
   + Appointment(confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int)
   + Lab(address: String, businessHours: String, registrationNumber: int, fee: double)
   + LabBusinessHours(startTime: Time, endTime: Time)

Relationships:
# Final Inheritance Relationships:
   + TestRequisition extends Test
   + TestResult extends Test
   + Appointment extends Lab
# Final Association Relationships:
   + [1] Doctor associate [0..*] TestRequisition
   + [1] Patient associate [0..*] TestRequisition
   + [0..*] TestRequisition associate [0..*] Test
   + [0..*] TestRequisition associate [0..1] Appointment
   + [0..*] TestRequisition associate [0..*] TestResult
   + [1] Appointment associate [1] Lab
   + [1] Lab associate [1] LabBusinessHours
   + [1] LabTracker contain [*] TestRequisition
   + [1] LabTracker contain [*] Appointment
   + [1] LabTracker contain [*] TestResult
   + [1] LabTracker contain [*] Lab
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepetitionInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signatureImage:image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [resultType:String,report:String]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,registrationNumber:int]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:String,registrationNumber:int,fee:double]
Class: LabBusinessHours (class) - Enum Attributes: [], Class Attributes: [startTime:Time,endTime:Time]
Relationships:
 False TestRequisition inheritance False Test
 False TestResult inheritance False Test
 False Appointment inheritance False Lab
 1 Doctor association 0..* TestRequisition
 1 Patient association 0..* TestRequisition
 0..* TestRequisition association 0..* Test
 0..* TestRequisition association 0..1 Appointment
 0..* TestRequisition association 0..* TestResult
 1 Appointment association 1 Lab
 1 Lab association 1 LabBusinessHours
 1 LabTracker association * TestRequisition
 1 LabTracker association * Appointment
 1 LabTracker association * TestResult
 1 LabTracker association * Lab
--------------------------------------------------------------------------------
--16/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'RepetitionInterval(enum)' - 'Interval(enum)'
 'LabBusinessHours(class)' - 'BusinessHour(class)'
-Attributes:
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'Lab(class):registrationNumber' - 'registrationNumber'
 'RepetitionInterval(enum):Weekly' - 'weekly'
 'RepetitionInterval(enum):Monthly' - 'monthly'
 'RepetitionInterval(enum):Yearly' - 'yearly'
 'LabBusinessHours(class):startTime' - 'startTime'
 'LabBusinessHours(class):endTime' - 'endTime'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
 ' 1 LabTracker association * Appointment' - ' 1 LabTracker association * Appointment'
 ' 1 LabTracker association * TestResult' - ' 1 LabTracker association * TestResult'
 ' 1 LabTracker association * Lab' - ' 1 LabTracker association * Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  9                   16                  
Attributes          31                  13                  43                  
Associations        11                  4                   20                  
Inheritances        3                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------17/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestGroup(BloodTests, UltrasoundExaminations)
    + TestRepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signatureImage:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + Test( duration:int)
    + TestRequisition( validFromDate:Date)
    + TestResult( result:string,  report:string)
    + Appointment( confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  registrationNumber:int)
    + Lab( address:string,  businessHours:string,  registrationNumber:int,  fee:double,  tests:List<Test>,  appointmentType:string)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestGroup(BloodTests, UltrasoundExaminations)
   + TestRepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signatureImage: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + Test(duration: int)
   + TestRequisition(validFromDate: Date)
   + TestResult(result: String, report: String)
   + Appointment(confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int)
   + Lab(address: String, businessHours: String, registrationNumber: int, fee: double, tests: List<Test>, appointmentType: String)

AI_answer(association):

```
Final Composition Relationships:
    + [1] Lab contain [*] Test
    + [1] Lab contain [*] Appointment
    + [1] Lab contain [*] TestRequisition
    + [1] TestRequisition contain [*] Test
    + [1] TestRequisition contain [*] TestResult
    + [1] Appointment contain [1] Lab
    + [1] Doctor contain [*] TestRequisition
    + [1] Doctor contain [*] Test
    + [1] Patient contain [*] TestRequisition
    + [1] Patient contain [1] Appointment

Final Association Relationships:
    + [1] Doctor associate [*] Doctor (for prescribing tests to other doctors)
    + [0..*] Test associate [1] TestRequisition
    + [0..*] TestResult associate [1] Test
    + [1] Patient associate [0..*] TestRequisition
    + [1] Patient associate [*] Appointment
    + [1] TestRequisition associate [1] Doctor
    + [1] TestRequisition associate [1] Patient
    + [1] TestRequisition associate [1] Test
    + [1] TestRequisition associate [0..*] TestResult
    + [1] Appointment associate [1] TestRequisition
    + [1] Appointment associate [1] Lab
    + [1] Lab associate [0..*] TestRequisition
    + [1] Lab associate [0..*] Appointment
    + [1] Lab associate [1] Test
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + BloodTest extends Test
    + UltrasoundExamination extends Test
    + RepeatedTestRequisition extends TestRequisition
    + SingleTestRequisition extends TestRequisition
    + LabAppointment extends Appointment
    + WalkInLabAppointment extends LabAppointment
    + AppointmentWithSampleDropOff extends LabAppointment
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + TestRepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signatureImage: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + Test(duration: int)
   + TestRequisition(validFromDate: Date)
   + TestResult(result: String, report: String)
   + Appointment(confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int)
   + Lab(address: String, businessHours: String, registrationNumber: int, fee: double, tests: List<Test>, appointmentType: String)
   + BloodTest extends Test
   + UltrasoundExamination extends Test
   + RepeatedTestRequisition extends TestRequisition
   + SingleTestRequisition extends TestRequisition
   + LabAppointment extends Appointment
   + WalkInLabAppointment extends LabAppointment
   + AppointmentWithSampleDropOff extends LabAppointment

Relationships:
# Final Inheritance Relationships:
   + BloodTest extends Test
   + UltrasoundExamination extends Test
   + RepeatedTestRequisition extends TestRequisition
   + SingleTestRequisition extends TestRequisition
   + LabAppointment extends Appointment
   + WalkInLabAppointment extends LabAppointment
   + AppointmentWithSampleDropOff extends LabAppointment

# Final Association Relationships:
   + [1] Doctor associate [*] Doctor (for prescribing tests to other doctors)
   + [0..*] Test associate [1] TestRequisition
   + [0..*] TestResult associate [1] Test
   + [1] Patient associate [0..*] TestRequisition
   + [1] Patient associate [*] Appointment
   + [1] TestRequisition associate [1] Doctor
   + [1] TestRequisition associate [1] Patient
   + [1] TestRequisition associate [1] Test
   + [1] TestRequisition associate [0..*] TestResult
   + [1] Appointment associate [1] TestRequisition
   + [1] Appointment associate [1] Lab
   + [1] Lab associate [0..*] TestRequisition
   + [1] Lab associate [0..*] Appointment
   + [1] Lab associate [0..*] Test
   + [1] Lab contain [*] Test
   + [1] Lab contain [*] Appointment
   + [1] Lab contain [*] TestRequisition
   + [1] TestRequisition contain [*] Test
   + [1] TestRequisition contain [*] TestResult
   + [1] Appointment contain [1] Lab
   + [1] Doctor contain [*] TestRequisition
   + [1] Doctor contain [*] Test
   + [1] Patient contain [*] TestRequisition
   + [1] Patient contain [1] Appointment
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: TestRepetitionInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signatureImage:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:String,report:String]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,registrationNumber:int]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:String,registrationNumber:int,fee:double,tests:List<Test>,appointmentType:String]
Class: BloodTest (class) - Enum Attributes: [], Class Attributes: []
Class: UltrasoundExamination (class) - Enum Attributes: [], Class Attributes: []
Class: RepeatedTestRequisition (class) - Enum Attributes: [], Class Attributes: []
Class: SingleTestRequisition (class) - Enum Attributes: [], Class Attributes: []
Class: LabAppointment (class) - Enum Attributes: [], Class Attributes: []
Class: WalkInLabAppointment (class) - Enum Attributes: [], Class Attributes: []
Class: AppointmentWithSampleDropOff (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False BloodTest inheritance False Test
 False UltrasoundExamination inheritance False Test
 False RepeatedTestRequisition inheritance False TestRequisition
 False SingleTestRequisition inheritance False TestRequisition
 False LabAppointment inheritance False Appointment
 False WalkInLabAppointment inheritance False LabAppointment
 False AppointmentWithSampleDropOff inheritance False LabAppointment
 1 Doctor association * Doctor
 0..* Test association 1 TestRequisition
 0..* TestResult association 1 Test
 1 Patient association 0..* TestRequisition
 1 Patient association * Appointment
 1 TestRequisition association 1 Doctor
 1 TestRequisition association 1 Patient
 1 TestRequisition association 1 Test
 1 TestRequisition association 0..* TestResult
 1 Appointment association 1 TestRequisition
 1 Appointment association 1 Lab
 1 Lab association 0..* TestRequisition
 1 Lab association 0..* Appointment
 1 Lab association 0..* Test
 1 Lab association * Test
 1 Lab association * Appointment
 1 Lab association * TestRequisition
 1 TestRequisition association * Test
 1 TestRequisition association * TestResult
 1 Appointment association 1 Lab
 1 Doctor association * TestRequisition
 1 Doctor association * Test
 1 Patient association * TestRequisition
 1 Patient association 1 Appointment
--------------------------------------------------------------------------------
--17/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'TestRepetitionInterval(enum)' - 'Interval(enum)'
-Attributes:
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'Lab(class):registrationNumber' - 'registrationNumber'
 'TestRepetitionInterval(enum):Weekly' - 'weekly'
 'TestRepetitionInterval(enum):Monthly' - 'monthly'
 'TestRepetitionInterval(enum):Yearly' - 'yearly'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             16                  8                   16                  
Attributes          31                  11                  43                  
Associations        24                  1                   20                  
Inheritances        7                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------18/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestGroup(BloodTest, UltrasoundExamination)
    + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signature:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + Test( duration:int)
    + Requisition( validFromDate:Date)
    + TestRequisition( repetitionNumber:int,  repetitionInterval:RepetitionInterval)
    + TestResult( resultType:string,  report:string)
    + Appointment( confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  registrationNumber:int)
    + Lab( address:string,  businessHours:string,  fee:double)
    + Schedule( day:string,  startTime:Time,  endTime:Time)
    + SampleDropOffTest()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestGroup(BloodTest, UltrasoundExamination)
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)
Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + Test(duration: int)
   + Requisition(validFromDate: Date)
   + TestRequisition(repetitionNumber: int, repetitionInterval: RepetitionInterval)
   + TestResult(resultType: String, report: String)
   + Appointment(confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int)
   + Lab(address: String, businessHours: String, fee: double)
   + Schedule(day: String, startTime: Time, endTime: Time)
   + SampleDropOffTest()

AI_answer(association):

```
Final Composition Relationships:
    + [1] Lab contain [*] Test
    + [1] Lab contain [*] Schedule
    + [1] Lab contain [*] Appointment
    + [1] Lab contain [*] SampleDropOffTest
    + [1] Requisition contain [*] Test
    + [1] Requisition contain [*] TestRequisition
    + [1] TestRequisition contain [*] Test
    + [1] Appointment contain [*] Schedule

Final Association Relationships:
    + [1] Doctor associate [0..*] Requisition
    + [1] Patient associate [0..*] Requisition
    + [1] Patient associate [*] Appointment
    + [1] Appointment associate [1] Lab
    + [1] TestRequisition associate [1] Test
    + [1] TestResult associate [1] Test
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + BloodTest inherit Test
    + UltrasoundExamination inherit Test
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepetitionInterval(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + Test(duration: int)
   + Requisition(validFromDate: Date)
   + TestRequisition(repetitionNumber: int, repetitionInterval: RepetitionInterval)
   + TestResult(resultType: String, report: String)
   + Appointment(confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, registrationNumber: int)
   + Lab(address: String, businessHours: String, fee: double)
   + Schedule(day: String, startTime: Time, endTime: Time)
   + SampleDropOffTest()
   + BloodTest(duration: int) extends Test
   + UltrasoundExamination(duration: int) extends Test

Relationships:
# Final Inheritance Relationships:
   + BloodTest extends Test
   + UltrasoundExamination extends Test
# Final Association Relationships:
   + [1] Doctor associate [0..*] Requisition
   + [1] Patient associate [0..*] Requisition
   + [1] Patient associate [*] Appointment
   + [1] Appointment associate [1] Lab
   + [1] TestRequisition associate [1] Test
   + [1] TestResult associate [1] Test
   + [1] Lab contain [*] Test
   + [1] Lab contain [*] Schedule
   + [1] Lab contain [*] Appointment
   + [1] Lab contain [*] SampleDropOffTest
   + [1] Requisition contain [*] Test
   + [1] Requisition contain [*] TestRequisition
   + [1] TestRequisition contain [*] Test
   + [1] Appointment contain [*] Schedule
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepetitionInterval (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: Test (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: Requisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [repetitionNumber:int,repetitionInterval:RepetitionInterval]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [resultType:String,report:String]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,registrationNumber:int]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:String,fee:double]
Class: Schedule (class) - Enum Attributes: [], Class Attributes: [day:String,startTime:Time,endTime:Time]
Class: SampleDropOffTest (class) - Enum Attributes: [], Class Attributes: []
Class: BloodTest (class) - Enum Attributes: [], Class Attributes: [duration:int]
Class: UltrasoundExamination (class) - Enum Attributes: [], Class Attributes: [duration:int]
Relationships:
 False BloodTest inheritance False Test
 False UltrasoundExamination inheritance False Test
 1 Doctor association 0..* Requisition
 1 Patient association 0..* Requisition
 1 Patient association * Appointment
 1 Appointment association 1 Lab
 1 TestRequisition association 1 Test
 1 TestResult association 1 Test
 1 Lab association * Test
 1 Lab association * Schedule
 1 Lab association * Appointment
 1 Lab association * SampleDropOffTest
 1 Requisition association * Test
 1 Requisition association * TestRequisition
 1 TestRequisition association * Test
 1 Appointment association * Schedule
--------------------------------------------------------------------------------
--18/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'Requisition(class)' - 'Requisition(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'RepetitionInterval(enum)' - 'Interval(enum)'
-Attributes:
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'RepetitionInterval(enum):Weekly' - 'weekly'
 'RepetitionInterval(enum):Monthly' - 'monthly'
 'RepetitionInterval(enum):Yearly' - 'yearly'
-Relationships:
 ' 1 Doctor association 0..* Requisition' - ' 1 Doctor association * Requisition'
 ' 1 Patient association 0..* Requisition' - ' 1 Patient association * Requisition'
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             14                  9                   16                  
Attributes          35                  11                  43                  
Associations        14                  3                   20                  
Inheritances        2                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------19/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestType(BloodTest, Ultrasound)
    + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signature:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + TestRequisition( validFromDate:Date,  repeatTimes:int,  repeatInterval:RepeatInterval)
    + Test( testType:TestType,  duration:int)
    + TestResult( result:string,  report:Text)
    + Appointment( labAddress:string,  labBusinessHours:string,  confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  labRegistrationNumber:int)
    + Lab( address:string,  businessHours:string,  fee:int)
    + BusinessHours( startTime:Time,  endTime:Time)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestTypeEnum(BloodTest, Ultrasound)
   + RepeatIntervalEnum(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date, repeatTimes: int, repeatInterval: RepeatIntervalEnum)
   + Test(testType: TestTypeEnum, duration: int)
   + TestResult(result: String, report: Text)
   + Appointment(labAddress: String, labBusinessHours: String, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, labRegistrationNumber: int)
   + Lab(address: String, businessHours: String, fee: int)
   + BusinessHours(startTime: Time, endTime: Time)

AI_answer(association):

```
Final Composition Relationships:
    + [1] LabTracker contain [*] TestRequisition
    + [1] LabTracker contain [*] Appointment
    + [1] Lab contain [*] BusinessHours

Final Association Relationships:
    + [1] Doctor associate [0..*] TestRequisition
    + [1] Patient associate [0..*] TestRequisition
    + [1] TestRequisition associate [1] Test
    + [1] TestRequisition associate [1] TestResult
    + [1] Test associate [1] Lab
    + [1] Appointment associate [1] Lab
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Test inherit TestRequisition
    + TestResult inherit TestRequisition
    + Appointment inherit Lab
    + BusinessHours inherit Lab
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepeatIntervalEnum(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date, repeatTimes: int, repeatInterval: RepeatIntervalEnum)
   + Test(testType: TestTypeEnum, duration: int)
   + TestResult(result: String, report: Text)
   + Appointment(labAddress: String, labBusinessHours: String, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, labRegistrationNumber: int)
   + Lab(address: String, businessHours: String, fee: int)
   + BusinessHours(startTime: Time, endTime: Time)

Relationships:
# Final Association Relationships:
   + [1] Doctor associate [0..*] TestRequisition
   + [1] Patient associate [0..*] TestRequisition
   + [1] TestRequisition associate [1] Test
   + [1] TestRequisition associate [1] TestResult
   + [1] Test associate [1] Lab
   + [1] Appointment associate [1] Lab
   + [1] LabTracker contain [*] TestRequisition
   + [1] LabTracker contain [*] Appointment
   + [1] Lab contain [*] BusinessHours
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepeatIntervalEnum (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date,repeatTimes:int,repeatInterval:RepeatIntervalEnum]
Class: Test (class) - Enum Attributes: [], Class Attributes: [testType:TestTypeEnum,duration:int]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:String,report:Text]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [labAddress:String,labBusinessHours:String,confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,labRegistrationNumber:int]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:String,fee:int]
Class: BusinessHours (class) - Enum Attributes: [], Class Attributes: [startTime:Time,endTime:Time]
Relationships:
 1 Doctor association 0..* TestRequisition
 1 Patient association 0..* TestRequisition
 1 TestRequisition association 1 Test
 1 TestRequisition association 1 TestResult
 1 Test association 1 Lab
 1 Appointment association 1 Lab
 1 LabTracker association * TestRequisition
 1 LabTracker association * Appointment
 1 Lab association * BusinessHours
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'BusinessHours(class)' - 'BusinessHour(class)'
 'RepeatIntervalEnum(enum)' - 'Interval(enum)'
-Attributes:
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'BusinessHours(class):startTime' - 'startTime'
 'BusinessHours(class):endTime' - 'endTime'
 'RepeatIntervalEnum(enum):Weekly' - 'weekly'
 'RepeatIntervalEnum(enum):Monthly' - 'monthly'
 'RepeatIntervalEnum(enum):Yearly' - 'yearly'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
 ' 1 LabTracker association * Appointment' - ' 1 LabTracker association * Appointment'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  9                   16                  
Attributes          35                  13                  43                  
Associations        9                   2                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------20/20------Lab Requisition Management System:
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + TestType(BloodTest, Ultrasound)
    + RepeatInterval(Weekly, Monthly, HalfYearly, Yearly)

# Classes (attributes):
    + LabTracker()
    + Doctor( practitionerNumber:int,  signature:Image,  fullName:string,  address:string,  phoneNumber:string)
    + Patient( healthNumber:string,  firstName:string,  lastName:string,  dateOfBirth:Date,  address:string,  phoneNumber:string)
    + TestRequisition( validFromDate:Date,  repeatTimes:int,  repeatInterval:RepeatInterval)
    + Test( testType:TestType,  duration:int)
    + TestResult( result:string,  report:Text)
    + Appointment( labAddress:string,  labBusinessHours:string,  confirmationNumber:int,  date:Date,  startTime:Time,  endTime:Time,  labName:string,  labRegistrationNumber:int)
    + Lab( address:string,  businessHours:string,  fee:int)
    + BusinessHours( startTime:Time,  endTime:Time)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + TestTypeEnum(BloodTest, Ultrasound)
   + RepeatIntervalEnum(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date, repeatTimes: int, repeatInterval: RepeatIntervalEnum)
   + Test(testType: TestTypeEnum, duration: int)
   + TestResult(result: String, report: Text)
   + Appointment(labAddress: String, labBusinessHours: String, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, labRegistrationNumber: int)
   + Lab(address: String, businessHours: String, fee: int)
   + BusinessHours(startTime: Time, endTime: Time)

AI_answer(association):

```
Final Composition Relationships:
    + [1] LabTracker contain [*] TestRequisition
    + [1] LabTracker contain [*] Appointment
    + [1] Lab contain [*] BusinessHours

Final Association Relationships:
    + [1] Doctor associate [0..*] TestRequisition
    + [1] Patient associate [0..*] TestRequisition
    + [1] TestRequisition associate [1] Test
    + [1] TestRequisition associate [1] TestResult
    + [1] Test associate [1] Lab
    + [1] Appointment associate [1] Lab
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Test inherit TestRequisition
    + TestResult inherit TestRequisition
    + Appointment inherit Lab
    + BusinessHours inherit Lab
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + RepeatIntervalEnum(Weekly, Monthly, HalfYearly, Yearly)

Classes:
   + LabTracker()
   + Doctor(practitionerNumber: int, signature: Image, fullName: String, address: String, phoneNumber: String)
   + Patient(healthNumber: String, firstName: String, lastName: String, dateOfBirth: Date, address: String, phoneNumber: String)
   + TestRequisition(validFromDate: Date, repeatTimes: int, repeatInterval: RepeatIntervalEnum)
   + Test(testType: TestTypeEnum, duration: int)
   + TestResult(result: String, report: Text)
   + Appointment(labAddress: String, labBusinessHours: String, confirmationNumber: int, date: Date, startTime: Time, endTime: Time, labName: String, labRegistrationNumber: int)
   + Lab(address: String, businessHours: String, fee: int)
   + BusinessHours(startTime: Time, endTime: Time)

Relationships:
# Final Association Relationships:
   + [1] Doctor associate [0..*] TestRequisition
   + [1] Patient associate [0..*] TestRequisition
   + [1] TestRequisition associate [1] Test
   + [1] TestRequisition associate [1] TestResult
   + [1] Test associate [1] Lab
   + [1] Appointment associate [1] Lab
   + [1] LabTracker contain [*] TestRequisition
   + [1] LabTracker contain [*] Appointment
   + [1] Lab contain [*] BusinessHours
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: RepeatIntervalEnum (enum) - Enum Attributes: [Weekly, Monthly, HalfYearly, Yearly], Class Attributes: []
Class: LabTracker (class) - Enum Attributes: [], Class Attributes: []
Class: Doctor (class) - Enum Attributes: [], Class Attributes: [practitionerNumber:int,signature:Image,fullName:String,address:String,phoneNumber:String]
Class: Patient (class) - Enum Attributes: [], Class Attributes: [healthNumber:String,firstName:String,lastName:String,dateOfBirth:Date,address:String,phoneNumber:String]
Class: TestRequisition (class) - Enum Attributes: [], Class Attributes: [validFromDate:Date,repeatTimes:int,repeatInterval:RepeatIntervalEnum]
Class: Test (class) - Enum Attributes: [], Class Attributes: [testType:TestTypeEnum,duration:int]
Class: TestResult (class) - Enum Attributes: [], Class Attributes: [result:String,report:Text]
Class: Appointment (class) - Enum Attributes: [], Class Attributes: [labAddress:String,labBusinessHours:String,confirmationNumber:int,date:Date,startTime:Time,endTime:Time,labName:String,labRegistrationNumber:int]
Class: Lab (class) - Enum Attributes: [], Class Attributes: [address:String,businessHours:String,fee:int]
Class: BusinessHours (class) - Enum Attributes: [], Class Attributes: [startTime:Time,endTime:Time]
Relationships:
 1 Doctor association 0..* TestRequisition
 1 Patient association 0..* TestRequisition
 1 TestRequisition association 1 Test
 1 TestRequisition association 1 TestResult
 1 Test association 1 Lab
 1 Appointment association 1 Lab
 1 LabTracker association * TestRequisition
 1 LabTracker association * Appointment
 1 Lab association * BusinessHours
--------------------------------------------------------------------------------
--20/20--Classes and attributes matching process:
-Class:
 'LabTracker(class)' - 'LabTracker(class)'
 'Doctor(class)' - 'Doctor(class)'
 'Patient(class)' - 'Patient(class)'
 'Test(class)' - 'Test(class)'
 'TestResult(class)' - 'TestResult(class)'
 'Appointment(class)' - 'Appointment(class)'
 'Lab(class)' - 'Lab(class)'
 'BusinessHours(class)' - 'BusinessHour(class)'
 'RepeatIntervalEnum(enum)' - 'Interval(enum)'
-Attributes:
 'Doctor(class):signature' - 'signature'
 'Patient(class):dateOfBirth' - 'dateOfBirth'
 'Test(class):duration' - 'duration'
 'TestResult(class):report' - 'report'
 'Appointment(class):date' - 'date'
 'Appointment(class):startTime' - 'startTime'
 'Appointment(class):endTime' - 'endTime'
 'Lab(class):address' - 'address'
 'BusinessHours(class):startTime' - 'startTime'
 'BusinessHours(class):endTime' - 'endTime'
 'RepeatIntervalEnum(enum):Weekly' - 'weekly'
 'RepeatIntervalEnum(enum):Monthly' - 'monthly'
 'RepeatIntervalEnum(enum):Yearly' - 'yearly'
-Relationships:
 ' 1 Appointment association 1 Lab' - ' * Appointment association 1 Lab'
 ' 1 LabTracker association * Appointment' - ' 1 LabTracker association * Appointment'
--------------------------------------------------------------------------------
Lab Requisition Management System, matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  9                   16                  
Attributes          35                  13                  43                  
Associations        9                   2                   20                  
Inheritances        0                   0                   2                   
--------------------------------------------------------------------------------
------------------------------------------------------------

