------------------------------------------------------------
---------------------1/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
# Classes (attributes):
    + Project( title:string, description:string, startDate:Date, deadline:Date, grade:int, projectType:ProjectType)
    + Student( name:string, email:string, studentID:string, studentType:StudentType)
    + UndergraduateStudent()
    + GraduateStudent()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, projectType: ProjectType)
   + Student(name: String, email: String, studentID: String, studentType: StudentType)
   + UndergraduateStudent()
   + GraduateStudent()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Project contain [1] ProjectType
    + [0..*] Student contain [1] Project
    + [0..*] Student contain [1] StudentType

Final Association Relationships:
    + [1] Student associate [0..*] Project
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + UndergraduateStudent extends Student
    + GraduateStudent extends Student
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, projectType: ProjectType)
   + Student(name: String, email: String, studentID: String, studentType: StudentType)
   + UndergraduateStudent()
   + GraduateStudent()

Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student

# Final Association Relationships:
   + Student associate Project
   + Project contain ProjectType
   + Student contain Project
   + Student contain StudentType
```

--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,projectType:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:String,studentType:StudentType]
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 1 Student association 1 Project
 1 Project association 1 ProjectType
 1 Student association 1 Project
 1 Student association 1 StudentType
--------------------------------------------------------------------------------
--1/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 1 Student association 1 Project' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             6                   5                   5                   
Attributes          14                  9                   10                  
Associations        4                   1                   3                   
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------2/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:int,  type:ProjectType)
    + Student( name:string,  email:string,  studentId:int,  type:StudentType)
    + ResearchProject() 
    + CourseBasedProject()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentId: int, type: StudentType)
   + ResearchProject()
   + CourseBasedProject()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Student contain [*] Project

Final Association Relationships:
    + [1] Project associate [1] Student
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + UndergraduateStudent extends Student because UndergraduateStudent is-a-kind-of Student.
   + GraduateStudent extends Student because GraduateStudent is-a-kind-of Student.
   + ResearchProject extends Project because ResearchProject is-a-kind-of Project.
   + CourseBasedProject extends Project because CourseBasedProject is-a-kind-of Project.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentId: int, type: StudentType)
   + ResearchProject()
   + CourseBasedProject()
   + UndergraduateStudent(name: String, email: String, studentId: int, type: StudentType) 
   + GraduateStudent(name: String, email: String, studentId: int, type: StudentType) 
   + ResearchProject(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType) 
   + CourseBasedProject(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)

Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
# Final Association Relationships:
   + [1] Project associate [1] Student
   + [1] Student contain [*] Project
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentId:int,type:StudentType]
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentId:int,type:StudentType]
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentId:int,type:StudentType]
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 1 Project association 1 Student
 1 Student association * Project
--------------------------------------------------------------------------------
--2/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 1 Project association 1 Student' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  5                   5                   
Attributes          34                  9                   10                  
Associations        2                   1                   3                   
Inheritances        4                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------3/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:int,  type:ProjectType)
    + Student( name:string,  email:string,  studentID:string,  type:StudentType)
    + abstract Person()
    + ResearchProject()
    + CourseBasedProject()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: String, type: StudentType)
   + Person()
   + ResearchProject()
   + CourseBasedProject()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Project contain [1] ProjectType
    + [0..*] Student contain [0..1] Project

Final Association Relationships:
    + [1] Student associate [0..*] Project
    + [0..*] Project associate [1] ProjectType
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + UndergraduateStudent extends Student
    + GraduateStudent extends Student
    + ResearchProject extends Project
    + CourseBasedProject extends Project
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: String, type: StudentType)
   + Person()
   + ResearchProject()
   + CourseBasedProject()
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student

Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project

# Final Association Relationships:
   + [0..*] Student associate [0..*] Project
   + [1] Project associate [1] ProjectType
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:String,type:StudentType]
Class: Person (class) - Enum Attributes: [], Class Attributes: []
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 0..* Student association 0..* Project
 1 Project association 1 ProjectType
--------------------------------------------------------------------------------
--3/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 0..* Student association 0..* Project' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             9                   5                   5                   
Attributes          14                  9                   10                  
Associations        2                   1                   3                   
Inheritances        4                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------4/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)

# Classes (attributes):
    + Project(title:string, description:string, startDate:Date, deadline:Date, grade:int, type:ProjectType)
    + Student(name:string, email:string, studentId:string, type:StudentType)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title:String, description:String, startDate:Date, deadline:Date, grade:int, type:ProjectType)
   + Student(name:String, email:String, studentId:String, type:StudentType)
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] Project contain [1] ProjectType
    + [1] Student contain [1] StudentType

Final Association Relationships:
    + [0..*] Project associate [1] Student
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title:String, description:String, startDate:Date, deadline:Date, grade:int, type:ProjectType)
   + Student(name:String, email:String, studentId:String, type:StudentType)
   + ResearchProject extends Project
   + CourseBasedProject extends Project
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   
Relationships:
# Final Inheritance Relationships:
   + ResearchProject extends Project
   + CourseBasedProject extends Project
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
# Final Association Relationships:
   + [0..*] Project associate [1] Student
   + [1] Project contain [1] ProjectType
   + [1] Student contain [1] StudentType
```

--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentId:String,type:StudentType]
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 0..* Project association 1 Student
 1 Project association 1 ProjectType
 1 Student association 1 StudentType
--------------------------------------------------------------------------------
--4/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 0..* Project association 1 Student' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             8                   5                   5                   
Attributes          14                  9                   10                  
Associations        3                   1                   3                   
Inheritances        4                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------5/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)

# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:int,  type:ProjectType)
    + Student( name:string, email:string, studentID:int, type:StudentType)
    + abstract Role()
    + UndergraduateStudent()
    + GraduateStudent()
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: int, type: StudentType)
   + Role()
   + UndergraduateStudent()
   + GraduateStudent()
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] Project contain [*] Student

Final Association Relationships:
    + [1] Project associate [*] Student
    + [0..1] Student associate [1] Role
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + UndergraduateStudent extends Student because an UndergraduateStudent is-a-kind-of Student.
   + GraduateStudent extends Student because a GraduateStudent is-a-kind-of Student.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: int, type: StudentType)
   + Role()
   + UndergraduateStudent()
   + GraduateStudent()

Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
# Final Association Relationships:
   + [*] Project associate [*] Student
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:int,type:StudentType]
Class: Role (class) - Enum Attributes: [], Class Attributes: []
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 * Project association * Student
--------------------------------------------------------------------------------
--5/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' * Project association * Student' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             7                   5                   5                   
Attributes          14                  9                   10                  
Associations        1                   1                   3                   
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------6/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
    
# Classes (attributes):
    + Project( title:string, description:string, startDate:Date, deadline:Date, grade:float, type:ProjectType)
    + Student( name:string, email:string, studentId:int, type:StudentType)
    + Abstract Person()
    + ResearchProject()
    + CourseBasedProject()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title:String, description:String, startDate:Date, deadline:Date, grade:float, type:ProjectType)
   + Student(name:String, email:String, studentId:int, type:StudentType)
   + Person()
   + ResearchProject()
   + CourseBasedProject()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Project contain [1] ProjectType
    + [0..*] Student contain [1] StudentType

Final Association Relationships:
    + [1] Student associate [0..*] Project
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + Student extends Person because a Student is-a-kind-of Person.
    + UndergraduateStudent extends Student because an UndergraduateStudent is-a-kind-of Student.
    + GraduateStudent extends Student because a GraduateStudent is-a-kind-of Student.
    + ResearchProject extends Project because a ResearchProject is-a-kind-of Project.
    + CourseBasedProject extends Project because a CourseBasedProject is-a-kind-of Project.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title:String, description:String, startDate:Date, deadline:Date, grade:float, type:ProjectType)
   + Student(name:String, email:String, studentId:int, type:StudentType)
   + Person()
   + ResearchProject()
   + CourseBasedProject()
   
Relationships:
# Final Inheritance Relationships:
   + Student extends Person
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:float,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentId:int,type:StudentType]
Class: Person (class) - Enum Attributes: [], Class Attributes: []
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False Student inheritance False Person
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
--------------------------------------------------------------------------------
--6/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             7                   3                   5                   
Attributes          14                  9                   10                  
Associations        0                   0                   3                   
Inheritances        3                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------7/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:int,  type:ProjectType)
    + Student( name:string,  email:string,  studentId:string,  type:StudentType)
    + ProjectManagementSystem()
    + abstract Role()
    + UndergraduateStudent()
    + GraduateStudent()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentId: String, type: StudentType)
   + ProjectManagementSystem()
   + Role()
   + UndergraduateStudent()
   + GraduateStudent()

AI_answer(association):
```
Final Composition Relationships:
    + [1] ProjectManagementSystem contain [*] Project
    + [0..*] Project contain [1] ProjectType
    + [1] Student contain [0..*] Project
    + [0..*] Student contain [1] StudentType

Final Association Relationships:
    + [1] Project associate [0..*] Student
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + UndergraduateStudent extends Student because an UndergraduateStudent is-a-kind-of Student.
    + GraduateStudent extends Student because a GraduateStudent is-a-kind-of Student.
```

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentId: String, type: StudentType)
   + ProjectManagementSystem()
   + Role()
   + UndergraduateStudent()
   + GraduateStudent()
   
Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
# Final Association Relationships:
   + [1] Project associate [0..*] Student
   + [1] ProjectManagementSystem contain [*] Project
   + [1] Student contain [0..*] Project
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentId:String,type:StudentType]
Class: ProjectManagementSystem (class) - Enum Attributes: [], Class Attributes: []
Class: Role (class) - Enum Attributes: [], Class Attributes: []
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 1 Project association 0..* Student
 1 ProjectManagementSystem association * Project
 1 Student association 0..* Project
--------------------------------------------------------------------------------
--7/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 1 Project association 0..* Student' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             8                   5                   5                   
Attributes          14                  9                   10                  
Associations        3                   1                   3                   
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------8/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:int,  type:ProjectType)
    + Student( name:string,  email:string,  studentID:string,  type:StudentType)
    + UndergraduateStudent()
    + GraduateStudent()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: String, type: StudentType)
   + UndergraduateStudent()
   + GraduateStudent()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Project contain [1] ProjectType
    + [0..*] Student contain [1] StudentType

Final Association Relationships:
    + [0..*] Project associate [1] Student
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + UndergraduateStudent extends Student because UndergraduateStudent is-a-kind-of Student.
   + GraduateStudent extends Student because GraduateStudent is-a-kind-of Student.
   + ResearchProject extends Project because ResearchProject is-a-kind-of Project.
   + CourseBasedProject extends Project because CourseBasedProject is-a-kind-of Project.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: String, type: StudentType)
   + UndergraduateStudent()
   + GraduateStudent()
   
Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
# Final Association Relationships:
   + [0..*] Project associate [1] Student
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:String,type:StudentType]
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 0..* Project association 1 Student
--------------------------------------------------------------------------------
--8/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 0..* Project association 1 Student' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             6                   5                   5                   
Attributes          14                  9                   10                  
Associations        1                   1                   3                   
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------9/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
    
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:int,  type:ProjectType)
    + Student( name:string,  email:string,  studentId:int,  type:StudentType)
    + UndergraduateStudent()
    + GraduateStudent()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
   
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentId: int, type: StudentType)
   + UndergraduateStudent()
   + GraduateStudent()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Project contain [1] ProjectType
    + [1] Student contain [1] StudentType

Final Association Relationships:
    + [1] Project associate [*] Student
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + UndergraduateStudent extends Student because an UndergraduateStudent is-a-kind-of Student.
   + GraduateStudent extends Student because a GraduateStudent is-a-kind-of Student.
   + ResearchProject extends Project because a ResearchProject is-a-kind-of Project.
   + CourseBasedProject extends Project because a CourseBasedProject is-a-kind-of Project.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentId: int, type: StudentType)
   + UndergraduateStudent()
   + GraduateStudent()
   
Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
# Final Association Relationships:
   + [1] Project associate [*] Student
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentId:int,type:StudentType]
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 1 Project association * Student
--------------------------------------------------------------------------------
--9/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 1 Project association * Student' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             6                   5                   5                   
Attributes          14                  9                   10                  
Associations        1                   1                   3                   
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------10/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
    
# Classes (attributes):
    + Project(title:string, description:string, startDate:Date, deadline:Date, grade:int, type:ProjectType)
    + Student(name:string, email:string, studentId:int, type:StudentType)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title:String, description:String, startDate:Date, deadline:Date, grade:int, type:ProjectType)
   + Student(name:String, email:String, studentId:int, type:StudentType)
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] Student contain [*] Project

Final Association Relationships:
    + [0..*] Project associate [1] Student
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + UndergraduateStudent extends Student
    + GraduateStudent extends Student
    + ResearchProject extends Project
    + CourseBasedProject extends Project
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title:String, description:String, startDate:Date, deadline:Date, grade:int, type:ProjectType)
   + Student(name:String, email:String, studentId:int, type:StudentType)
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
   
Relationships:
# Final Association Relationships:
   + [0..*] Project associate [1] Student
   + [1] Student contain [*] Project
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentId:int,type:StudentType]
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 0..* Project association 1 Student
 1 Student association * Project
--------------------------------------------------------------------------------
--10/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 0..* Project association 1 Student' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             8                   5                   5                   
Attributes          14                  9                   10                  
Associations        2                   1                   3                   
Inheritances        0                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------11/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:int,  type:ProjectType)
    + Student( name:string,  email:string,  studentId:string,  type:StudentType)
    + ResearchProject()
    + CourseBasedProject()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentId: String, type: StudentType)
   + ResearchProject()
   + CourseBasedProject()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Project contain [1] ProjectType
    + [1] Student contain [1] StudentType

Final Association Relationships:
    + [0..*] Student associate [1] Project
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + Student extends Person
   + GraduateStudent extends Student
   + UndergraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentId: String, type: StudentType)
   + ResearchProject()
   + CourseBasedProject()
   + GraduateStudent()
   + UndergraduateStudent()

Relationships:
# Final Inheritance Relationships:
   + Student extends Person
   + GraduateStudent extends Student
   + UndergraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project

# Final Association Relationships:
   + [0..*] Student associate [1] Project
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentId:String,type:StudentType]
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False Student inheritance False Person
 False GraduateStudent inheritance False Student
 False UndergraduateStudent inheritance False Student
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 0..* Student association 1 Project
--------------------------------------------------------------------------------
--11/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 0..* Student association 1 Project' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             8                   5                   5                   
Attributes          14                  9                   10                  
Associations        1                   1                   3                   
Inheritances        4                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------12/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
    
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:int,  type:ProjectType)
    + Student( name:string, email:string, studentID:string, type:StudentType)
    + ResearchProject()
    + CourseBasedProject()
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: String, type: StudentType)
   + ResearchProject()
   + CourseBasedProject()
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] Project contain [1] ProjectType
    + [0..*] Student contain [1] Project

Final Association Relationships:
    + [1] Student associate [0..*] Project
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + UndergraduateStudent extends Student because UndergraduateStudent is-a-kind-of Student.
   + GraduateStudent extends Student because GraduateStudent is-a-kind-of Student.
   + ResearchProject extends Project because ResearchProject is-a-kind-of Project.
   + CourseBasedProject extends Project because CourseBasedProject is-a-kind-of Project.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: String, type: StudentType)
   + ResearchProject()
   + CourseBasedProject()
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project

Relationships:
# Final Inheritance Relationships:
   + ResearchProject extends Project
   + CourseBasedProject extends Project
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   
# Final Association Relationships:
   + [1] Student associate [0..*] Project
   + [1] Project contain [1] ProjectType
   + [0..*] Student contain [1] Project
```

--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:String,type:StudentType]
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 1 Student association 0..* Project
 1 Project association 1 ProjectType
 0..* Student association 1 Project
--------------------------------------------------------------------------------
--12/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 1 Student association 0..* Project' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             10                  5                   5                   
Attributes          14                  9                   10                  
Associations        3                   1                   3                   
Inheritances        4                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------13/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
    
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:float,  type:ProjectType)
    + Student( name:string,  email:string,  studentID:int,  type:StudentType)
    + abstract UserRole()
    + ResearchProject()
    + CourseBasedProject()
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: float, type: ProjectType)
   + Student(name: String, email: String, studentID: int, type: StudentType)
   + UserRole()
   + ResearchProject()
   + CourseBasedProject()
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] Project contain [1] ProjectType
    + [1] Student contain [1] StudentType

Final Association Relationships:
    + [0..*] Project associate [1] Student
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + UndergraduateStudent extends Student because an UndergraduateStudent is-a-kind-of Student.
    + GraduateStudent extends Student because a GraduateStudent is-a-kind-of Student.
    + ResearchProject extends Project because a ResearchProject is-a-kind-of Project.
    + CourseBasedProject extends Project because a CourseBasedProject is-a-kind-of Project.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: float, type: ProjectType)
   + Student(name: String, email: String, studentID: int, type: StudentType)
   + UserRole()

Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project

# Final Association Relationships:
   + [0..*] Project associate [1] Student
   + [1] Project contain [1] ProjectType
   + [1] Student contain [1] StudentType
```

--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:float,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:int,type:StudentType]
Class: UserRole (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 0..* Project association 1 Student
 1 Project association 1 ProjectType
 1 Student association 1 StudentType
--------------------------------------------------------------------------------
--13/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 0..* Project association 1 Student' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             5                   3                   5                   
Attributes          14                  9                   10                  
Associations        3                   1                   3                   
Inheritances        0                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------14/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
# Classes (attributes):
    + Project(title:string, description:string, startDate:Date, deadline:Date, grade:float, type:ProjectType)
    + Student(name:string, email:string, studentId:string, type:StudentType)
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title:String, description:String, startDate:Date, deadline:Date, grade:float, type:ProjectType)
   + Student(name:String, email:String, studentId:String, type:StudentType)

AI_answer(association):
```
Final Composition Relationships:
    + [1] Project contain [*] Student

Final Association Relationships:
    + [1..*] Student associate [1..*] Project
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title:String, description:String, startDate:Date, deadline:Date, grade:float, type:ProjectType)
   + Student(name:String, email:String, studentId:String, type:StudentType)
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project

Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project

# Final Association Relationships:
   + [1..*] Student associate [1..*] Project
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:float,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentId:String,type:StudentType]
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 1..* Student association 1..* Project
--------------------------------------------------------------------------------
--14/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 1..* Student association 1..* Project' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             8                   5                   5                   
Attributes          14                  9                   10                  
Associations        1                   1                   3                   
Inheritances        4                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------15/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:int,  type:ProjectType)
    + Student( name:string,  email:string,  studentID:string,  type:StudentType)
    + UndergraduateStudent() 
    + GraduateStudent() 
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: String, type: StudentType)
   + UndergraduateStudent()
   + GraduateStudent()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Project contain [*] Student

Final Association Relationships:
    + [0..*] Student associate [1] Project
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + UndergraduateStudent extends Student
    + GraduateStudent extends Student
    + ResearchProject extends Project
    + CourseBasedProject extends Project
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: String, type: StudentType)
   + UndergraduateStudent()
   + GraduateStudent()
   
Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
# Final Association Relationships:
   + [0..*] Student associate [1] Project
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:String,type:StudentType]
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 0..* Student association 1 Project
--------------------------------------------------------------------------------
--15/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 0..* Student association 1 Project' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             6                   5                   5                   
Attributes          14                  9                   10                  
Associations        1                   1                   3                   
Inheritances        2                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------16/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:int,  type:ProjectType)
    + Student( name:string,  email:string,  studentID:string,  type:StudentType)
    + UndergraduateStudent()
    + GraduateStudent()
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: String, type: StudentType)
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] Student contain [1] Project

Final Association Relationships:
    + [1] Project associate [*] Student
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: String, type: StudentType)
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project

Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
# Final Association Relationships:
   + [1] Project associate [*] Student
   + [1] Student contain [1] Project
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:String,type:StudentType]
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 1 Project association * Student
 1 Student association 1 Project
--------------------------------------------------------------------------------
--16/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 1 Project association * Student' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             8                   5                   5                   
Attributes          14                  9                   10                  
Associations        2                   1                   3                   
Inheritances        4                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------17/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
    
# Classes (attributes):
    + Project(title:string, description:string, startDate:Date, deadline:Date, grade:int, type:ProjectType)
    + Student(name:string, email:string, studentId:int, type:StudentType)
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentId: int, type: StudentType)
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] Student contain [*] Project

Final Association Relationships:
    + [1] Project associate [0..*] Student
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentId: int, type: StudentType)
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project

Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentId:int,type:StudentType]
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
--------------------------------------------------------------------------------
--17/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             8                   5                   5                   
Attributes          14                  9                   10                  
Associations        0                   0                   3                   
Inheritances        4                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------18/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
    
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:int,  type:ProjectType)
    + Student( name:string,  email:string,  studentID:string,  type:StudentType)
    + UserRole()
    + ResearchProject()
    + CourseBasedProject()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
   
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: String, type: StudentType)
   + UserRole()
   + ResearchProject()
   + CourseBasedProject()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Student contain [*] Project

Final Association Relationships:
    + [1] Project associate [1] Student
    + [0..*] Student associate [1] UserRole
    + [0..*] Project associate [1] ProjectType
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + UndergraduateStudent extends Student because UndergraduateStudent is-a-kind-of Student
    + GraduateStudent extends Student because GraduateStudent is-a-kind-of Student
    + ResearchProject extends Project because ResearchProject is-a-kind-of Project
    + CourseBasedProject extends Project because CourseBasedProject is-a-kind-of Project
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: String, type: StudentType)
   + UserRole()
   + ResearchProject()
   + CourseBasedProject()
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
   
Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
# Final Association Relationships:
   + [1] Project associate [1] Student
   + [0..*] Student associate [1] UserRole
   + [0..*] Project associate [1] ProjectType
```
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:String,type:StudentType]
Class: UserRole (class) - Enum Attributes: [], Class Attributes: []
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 1 Project association 1 Student
 0..* Student association 1 UserRole
 0..* Project association 1 ProjectType
--------------------------------------------------------------------------------
--18/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 1 Project association 1 Student' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             11                  5                   5                   
Attributes          14                  9                   10                  
Associations        3                   1                   3                   
Inheritances        4                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------19/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:

# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:float,  type:ProjectType)
    + Student( name:string,  email:string,  studentID:int,  type:StudentType)
    + ResearchProject()
    + CourseBasedProject()
--------------------------------------------------------------------------------
2nd conversation AI:

Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: float, type: ProjectType)
   + Student(name: String, email: String, studentID: int, type: StudentType)
   + ResearchProject()
   + CourseBasedProject()

AI_answer(association):
```
Final Composition Relationships:
    + [1] Student contain [0..*] Project
    + [1] Project contain [0..*] Student

Final Association Relationships:
    + [0..*] Student associate [0..*] Project
    + [1] Project associate [0..*] ResearchProject
    + [1] Project associate [0..*] CourseBasedProject
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
   + ResearchProject extends Project because a ResearchProject is-a-kind-of Project.
   + CourseBasedProject extends Project because a CourseBasedProject is-a-kind-of Project.
   + UndergraduateStudent extends Student because an UndergraduateStudent is-a-kind-of Student.
   + GraduateStudent extends Student because a GraduateStudent is-a-kind-of Student.
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: float, type: ProjectType)
   + Student(name: String, email: String, studentID: int, type: StudentType)
   + ResearchProject()
   + CourseBasedProject()
   + UndergraduateStudent(name: String, email: String, studentID: int, type: StudentType)
   + GraduateStudent(name: String, email: String, studentID: int, type: StudentType)

Relationships:
# Final Inheritance Relationships:
   + ResearchProject extends Project
   + CourseBasedProject extends Project
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student

# Final Association Relationships:
   + [0..*] Student associate [0..*] Project
   + [1] Project associate [0..*] ResearchProject
   + [1] Project associate [0..*] CourseBasedProject
   + [1] Student contain [0..*] Project
   + [1] Project contain [0..*] Student
```

--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:float,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:int,type:StudentType]
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:int,type:StudentType]
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:int,type:StudentType]
Relationships:
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 0..* Student association 0..* Project
 1 Project association 0..* ResearchProject
 1 Project association 0..* CourseBasedProject
 1 Student association 0..* Project
 1 Project association 0..* Student
--------------------------------------------------------------------------------
--19/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 0..* Student association 0..* Project' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             8                   5                   5                   
Attributes          22                  9                   10                  
Associations        5                   1                   3                   
Inheritances        4                   0                   0                   
--------------------------------------------------------------------------------
------------------------------------------------------------
---------------------20/20------Project Management System (PMS):
------------------------------------------------------------
1st conversation AI:
# Enumerations:
    + ProjectType(Research, CourseBased)
    + StudentType(Undergraduate, Graduate)
# Classes (attributes):
    + Project( title:string,  description:string,  startDate:Date,  deadline:Date,  grade:int,  type:ProjectType)
    + Student( name:string,  email:string,  studentID:int,  type:StudentType)
    + abstract Person()
    + abstract Role()
    + ResearchProject()
    + CourseBasedProject()
--------------------------------------------------------------------------------
2nd conversation AI:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)
Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: int, type: StudentType)
```

AI_answer(association):
```
Final Composition Relationships:
    + [1] Student contain [*] Project

Final Association Relationships:
    + [1] Project associate [*] Student
```
--------------------------------------------------------------------------------
AI_answer(inheritance):
```
Final Inheritance Relationships:
    + UndergraduateStudent inherit Student
    + GraduateStudent inherit Student
    + ResearchProject inherit Project
    + CourseBasedProject inherit Project
```
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
AI_review:
```
Enumerations:
   + ProjectType(Research, CourseBased)
   + StudentType(Undergraduate, Graduate)

Classes:
   + Project(title: String, description: String, startDate: Date, deadline: Date, grade: int, type: ProjectType)
   + Student(name: String, email: String, studentID: int, type: StudentType)
   + UndergraduateStudent
   + GraduateStudent
   + ResearchProject
   + CourseBasedProject
   
Relationships:
# Final Inheritance Relationships:
   + UndergraduateStudent extends Student
   + GraduateStudent extends Student
   + ResearchProject extends Project
   + CourseBasedProject extends Project
# Final Association Relationships:
   + [1] Project associate [*] Student
   + [1] Student contain [*] Project
```  
--------------------------------------------------------------------------------
Structure Model_Gen:
 Classes:
Class: ProjectType (enum) - Enum Attributes: [Research, CourseBased], Class Attributes: []
Class: StudentType (enum) - Enum Attributes: [Undergraduate, Graduate], Class Attributes: []
Class: Project (class) - Enum Attributes: [], Class Attributes: [title:String,description:String,startDate:Date,deadline:Date,grade:int,type:ProjectType]
Class: Student (class) - Enum Attributes: [], Class Attributes: [name:String,email:String,studentID:int,type:StudentType]
Class: UndergraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: GraduateStudent (class) - Enum Attributes: [], Class Attributes: []
Class: ResearchProject (class) - Enum Attributes: [], Class Attributes: []
Class: CourseBasedProject (class) - Enum Attributes: [], Class Attributes: []
Relationships:
 False UndergraduateStudent inheritance False Student
 False GraduateStudent inheritance False Student
 False ResearchProject inheritance False Project
 False CourseBasedProject inheritance False Project
 1 Project association * Student
 1 Student association * Project
--------------------------------------------------------------------------------
--20/20--Classes and attributes matching process:
-Class:
 'ProjectType(enum)' - 'ProjectType(enum)'
 'Project(class)' - 'Project(class)'
 'Student(class)' - 'Student(class)'
 'UndergraduateStudent(class)' - 'UndergraduateStudent(class)'
 'GraduateStudent(class)' - 'GraduateStudent(class)'
-Attributes:
 'ProjectType(enum):Research' - 'Research'
 'ProjectType(enum):CourseBased' - 'CourseBased'
 'Project(class):title' - 'title'
 'Project(class):description' - 'description'
 'Project(class):startDate' - 'startDate'
 'Project(class):deadline' - 'deadline'
 'Project(class):grade' - 'grade'
 'Student(class):name' - 'name'
 'Student(class):email' - 'email'
-Relationships:
 ' 1 Project association * Student' - ' 1..* Student association 0..* Project'
--------------------------------------------------------------------------------
Project Management System (PMS), matching result
--------------------------------------------------------------------------------
Metric              Generate            Match               Oracle              
--------------------------------------------------------------------------------
Classes             8                   5                   5                   
Attributes          14                  9                   10                  
Associations        2                   1                   3                   
Inheritances        4                   0                   0                   
--------------------------------------------------------------------------------
Project Management System (PMS), avg-method2
--------------------------------------------------------------------------------
Metric              Precision      Recall         F1             F2             
--------------------------------------------------------------------------------
Classes             0.619          0.960          0.753          0.865
Attributes          0.584          0.900          0.709          0.812
Associations        0.450          0.300          0.360          0.321
Inheritances        0.000          0.000          0.000          0.000
--------------------------------------------------------------------------------
