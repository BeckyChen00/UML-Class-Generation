Name,Description,Classes,Associations
Restaurant Management System,"Restaurant Management System,
Purpose: Restaurant management systems are a type of restaurant management software intended to assist with the tasks associated with the day-to-day management of a restaurant. 
Scope: A restaurant management system may also run on your tablet, so waiting staff can take orders and alert the kitchen and counter even before leaving the table.
Requirements: Restaurant management systems can include the following:
Point-of-sale System: Used to input orders and record payments. The system captures all transactions, including charges, payments, voids, promo deals, and expenses.
Payment Processing: This allows you to accept various payment options like credit or debit cards and mobile payments.
Restaurant Inventory Management: Used to monitor current stock, the cost of the items, and more. The system shows the order details and table number when the cook prepares the order. The waiter in the service section serves the customer. When the waiter serves, the system shows the waiter's name and table number.
Employee Scheduling: Check employee attendance, shifts, and time off.
The restaurant has more than one employee. Each employee has a name, age, and gender information. The restaurant has more than one section. These sections are kitchen, service, and cash. Personnel works according to their sections. Personnel can be cooks, waiters, and cashiers. The cook stays in the kitchen and prepares the orders. The waiter in the service section serves the customer. The cashier prepares the check according to the order details in the system.
Payroll, Accounting Service: Used to manage employee payroll and monitor the restaurant's cash flow.","Enumeration:
SectionKind(kitchen, service, cash)
EvenType(attendance, shift, timeOff)

Classes:
RestaurantManagementSystem()
Employee(string name, int age, boolean gender, SectionKind kind)
EmployeeScheduling()
SchedulingEvent(Employee employee, date startTime, date endTime)
Inventory()
Table(int number)
Order(string details, string waiter)
StockItem(string name, double cost, int amount)
PaymentProcessing()
PointOfSaleSystem()
Payment(double amount)
AccountingService()
Payroll(double salaries)","1 RestaurantManagementSystem contain * Inventory
1 RestaurantManagementSystem contain * PointOfSaleSystem
1 RestaurantManagementSystem contain * AccountingService
1 RestaurantManagementSystem contain * EmployeeScheduling
1 EmployeeScheduling contain * SchedulingEvent
1 Inventory contain * Table
1 Inventory contain * StockItem
1 AccountingService contain * Payroll
1 PointOfSaleSystem contain * Order
1 PointOfSaleSystem contain * Payment

1 Payroll associate 0..1 Employee
1 SchedulingEvent associate 0..1 Employee
0..1 Order associate 0..1 Table
0..1 Table associate 0..1 Order
1 Payment associate 0..1 Order
"
Supermarket,"The processes we want to describe are recording the product on the shelf, the customer collecting product, and payment after choosing items; in this part, we have two types of customers: Normal and Extra-customer.

Before purchasing products from different continents, the supermarket puts on store according to or following on type of each product. They use physical inventory where every product purchased is recorded by using the form of stock. When the chief of the store wants to check the number on the store, they take all forms for each product and then count products to verify if the number written on the form matches the number of products stored.

After purchasing a new product or getting the outcome from a supplier, those products are recorded in stock. For selling, Products are recorded on the shelf of supermarkets. Others to the cold chamber (cheese, meat) or in the fridge and freezer sometimes come from the cold chamber toward the freezer before being recorded to the shelf, checking the product's expiration date.

All products are recorded according to the group of each product, the group of alimentation products, the group of pastry/bakery, and butcher products. After recording all products on stock and shelf, it is necessary to record on the cashier's machine where recordable depending on the group. There is a person loaded that action in the supermarket who controller when the shelf is taken care of or occupied of products.

When clients or customers enter the supermarket, saw the product wanted in a different group of products, and some employees can help us or orient clients/customers by showing where products are placed. After choosing and selecting products, one can take a basket for storing goods; before going, check the price, expiration date, and ingredients, then go to the cashier. Arriving there, they deposit around him; the cashier takes one by one entering on machine according also on a group of the product when finished, gives us to the controller to make the product on free packing. When the cashier finishes those transactions, they calculate and show the client/customer on-screen of the machine and tell the customer total of money they can pay, and give us an invoice when the customer or client needed.

The delivery process begins when the customer first interacts with the service organization and ends when the delivery of the desired service is completed and the customer exits the process. At the supermarket, after getting the order from the chief of order, the bakery and pastry agent prepare the goods and quantities of the order. When finished, they package according to each category of product. Then the chief of order checks and counts if there is no mistake; when the number of orders written to the proforma invoice is well prepared, they give the order for put out before arriving to the customer. Some controllers check again to see if there is some product stolen. After those actions, customers get their order of items ordered; after delivery of that product, the stump and original of the proforma invoice are transferred to the office of the general director.

After selecting the product and calculating the total money, the payment to the customer is made in the following ways:
Cash: where the customer presents cash to the cashier or where the cashier receives money, and the customer gets an invoice. 
Cheques: where customers present checks to the cashier for extra-person, not every customer, for example, MINISANTE, CNLS, Rwanda Revenue Authority, and Top Tower Hotel","Classes:
Supermarket()
Product(string group, int amountInStock, string placeInStock,int amountOnShelf,string placeOnShelf,double price,date expirationDate,string ingredients,string supplier)
Order(double totalMoney)
OrderItem(int amount, double money)
DeliveryOrder(string customer,double money, string supplier)","
1 Order contain * OrderItem

1 OrderItem associate 0..1 Procuct
1 DeliveryOrder associate * OrderItem
1 Payment associate 1 Customer"
HotelReservation,"The total price of the reservation depends on the time of year and the type of room. There are three types of rooms in the hotel. There are 100 odd numbered rooms which types are standard, and six even numbered rooms which are large-deluxe. The types of remaining rooms are Deluxe.
The price of standard rooms:
$60 for the summer season, 
$40 for the spring season, 
And $25 for the autumn season per night per person. The room takes up to 4 people. The price is calculated according to the number of people entering the room.
Rates for the deluxe room:
$90 per person per night in the summer,
$75 in the spring,
And $50 in the autumn. The room takes up to 4 people. The price is calculated according to the number of people entering the room.
While calculating the price for Large Deluxe rooms, the number of people is not considered. It is $400 daily in the summer, $300 in the spring, and $250 in the autumn. There can be a maximum of 7 people in this room.
The user must be registered for the first time to the system. She must enter for pre-payment, 'H' for payment with a wire transfer, and 'S' for a standard reservation. A 15% discount will be applied on the price calculated when pre-paid reservation is selected. When payment using a wire transfer is selected, if the number of guests exceeds three persons, 50% of 1 guest's fee and 75% of 1 guest's fee will be deducted from the calculated amount. In standard reservations, customers make payments at the end of the accommodation. If all the rooms are reserved before, the user will be asked to make a choice again. If the user wishes to make another reservation transaction, the loop must start, and all transactions must be repeated.","Enumeration:
RoomType(standard,large-deluxe,deluxe)
PaymentMethod(WireTransfer, StandardReservation)

Classes:
Room(RoomType type,int maxOccupancy)
Reservation(string pre-payment, date checkinDate,date checkoutDate, int guestCount, PaymentMethod paymentMethod)
User(string name)","1 Reservation associate 1 Room
1 Reservation associate 1 User"
Romano,"Romano's Italian Restaurant

Romano's is the finest Italian restaurant in the city. Unless you are a celebrity or a good friend of Romano, you will need a reservation. A reservation is made for a specific time, date, and number of people. The reservation also captures the name and phone number of the person making the reservation. Each reservation is assigned a unique reservation number.

There are two categories of reservations at Romano's: individual and banquet. Additional reservation information captured when an individual makes a reservation includes seating preference (inside or patio) and smoking preference (smoking or nonsmoking). Additional information captured for banquet reservations includes the group name and payment method.

Seating at Romano's is limited. Romano's has a fixed number of tables. Each table is identified.

By unique table number. Tables are further described by unique free-form descriptions such as ""located by the North window,"" ""located in front of the fountain,"" and ""by the kitchen door.""Each table is classified as a 2-person, 4-person, or 6-person table.

When a reservation is made, Romano associates a specific tal4 number(s) to the reservation. A table can be utilized many times over the evening by many reservations. Romano tends to overbook tables. Therefore, there can be overlapping table reservations.

The management structure at Romano's is hierarchical. Several restaurant managers report to Romano. The managers are responsible for managing the Maitre and the chefs and ensuring guests have a pleasant dining experience. The Maitre'd responsible for managing the waiters, bartenders, and bus personnel. The Chefs are responsible for managing the cooks and dishwashers.

Each person working for Romano's must be classified as a manager, Maitre, waiter, bartender, chef, cook, bus person, or dishwasher. Additional information maintained by Romano's for each person includes the person's name, date of birth, and driver's license number.

When the reservation party arrives at Romano's, the reservation is assigned to one waiter. A waiter can be assigned to many reservations during the evening"".

The menu at Romano's is exquisite. There are many exciting and exotic items. A unique menu item number identifies each menu item. Information maintained by Romano for each.

A menu item includes an item description of (e.g., ""chicken marsala,"" ""fish soup,"" ""endive salad,"" ""1988 Merlot wine"", etc.) and item prep time.

Romanos classify each menu item as ""appetizer,"" ""entree"", ""dessert,"" or ""beverage.""

The price of each menu item can vary based on the time of day. For example, some menu items have different lunch and dinner prices. Some of the menu items change prices for happy hour.
To calculate the check at the end of the dinner, the waiter maintains a list, by reservation number, of the menu items ordered and the time that the menu item was ordered. In other words, each reservation can be associated with many menu items, and a menu item can be associated with many reservations.

In addition to menu items, Romano's maintains a list of the food items utilized by the restaurant, such as chicken, mushrooms, bread sticks, red sauce, cream sauce, etc. Food items are utilized in the preparation of menu items. A unique food item number identifies each food item.

Additional information maintained by Romano's about food items includes a description of the food item and a purchase flag. A purchase flag indicates that the food item is purchased from a vendor rather than Prepared in-house.

Many menu items can utilize a food item. A menu item can utilize many food items. For example, the menu item ""chicken lasagna dinner"" is comprised of the food items ""chicken lasagna, Italian bread, and broccoli spears. The menu item ""fish soup"" is comprised of the food items fish soup, crackers, and melon balls.

Each food item is classified by one unit of measure. For example, olive oil is measured in tablespoons (tsp.), mozzarella cheese is measured in ounces (oz), and breadsticks are measured in

""each"" The complete domain of unit of measure is each ounce, sheet, pound, gram, and dozen.

Each food item can be comprised of many other items, and each can be used as an ingredient to comprise other items. For example, the food item chicken lasagna comprises chicken, mozzarella cheese, ricotta cheese, sheet pasta, tomatoes, and red sauce. Red sauce comprises the food items tomato sauce, olive oil and garlic, and white wine vinegar. Mozzarella cheese can be used as an ingredient in chicken lasagna, endive salad, and cheese pizza.

The relationship between food items is identified by a combination of a parent food item number and the food item number used as an ingredient (child) of the parent food item. Additional information about the relationship between food items is the quantity of the child's food item used. For example, chicken lasagna and cheese pizza use mozzarella cheese as an ingredient (child).

Chicken lasagna uses three oz. of mozzarella cheese, and cheese pizza uses 9 oz of mozzarella cheese.","Enumeration:
SeatingPreference(inside, patio)
SmokingPreference(smoking, nonsmoking)
TableType(2person, 4person, 6person)
Role(manager,Maitre,waiter,bartender,chef,cook,busPerson,dishwasher)
MenuItemType(appetizer,entree,dessert,deverage)
Unit(ounce,sheet,pound,gram,dozen)

Classes:
Reservation(string name, string phoneNumber, int reservationNumber, string date, string time, int numberOfPeople)
OrderItem(date orderTime)
IndividualReservation(SeatingPreference seatingPreference, SmokingPreference smokingPreference)
BanquetReservation(string groupName, string paymentMethod)
Table(int tableNumber, string description, TableType type)
Employee(string name, date dateOfBirth, string driverLicenseNumber, Role role)
Menu()
MenuItem(int number, string description, int prepTime, MenuItemType type)
FoodItem(int number, string description, boolean purchase, Unit unit)
Ingredient(double quantity)
Restaurant()
","1 Reservation contain 0..* OrderItem
1 Restaurant contain * Reservation
1 Restaurant contain * Employee
1 Restaurant contain * Table
1 Restaurant contain 1 Menu
1 Restaurant contain * FoodItem

1 Employee associate * Employee
1 Reservation associate 1 Employee
1 Reservation associate 0..* Table
1 OrderItem associate 1 MenuItem
1 MenuItem associate * Ingredient
1 FoodItem associate * Ingredient
1 Ingredient associate 1 FoodItem

IndividualReservation inherit Reservation
BanquetReservation inherit Reservation"
SchlockBuster,"SchlockBuster video is a chain of video rental stores. A unique storeID identifies each store. Additional information about each store is the store address and phone number. SchlockBuster has many employees. An employee ID identifies each employee. Additional information about an employee is the employee's name, address, and phone number. Each employee has at least one and could have many phone numbers. Each employee's phone number is classified by a phone number type, such as an office phone number, home phone number, beeper number, etc. An employee can have many phone numbers but only one per phone number type.

Each employee is classified as one type of employee: ""manager,"" ""cashier,"" or ""stocker. An employee type such as ""manager,"" ""cashier,"" or ""stocker"" can classify many employees. A store can employ many employees. An employee must be employed by one and only one store.

There are numerous video titles (Braveheart, Lion King, Waterworld, etc.) available to SchlockBuster from many video distributors. SchlockBuster maintains a listing of titles by a title ID. Additional information for each title includes the title's name, run time(such as 120 minutes), and rating (G, PG, R).

SchlockBuster maintains a listing of distributors by distributor ID. Additional information about a distributor includes the distributor's name and phone number. A video title is available from one and only one distributor. A distributor can provide many video titles.

Each SchlockBuster store can carry many titles. Many stores can carry a title. All stores carry not all titles. In other words, stores can carry many of the same titles, and some can carry titles that other stores do not. SchlockBuster also maintains, by store, the amount (rental rate) that the store charges to customers to rent the title. This implies that each store can set its rental price for each title.

A store can stock multiple copies (the physical cassette cartridge) of the same title. In other words, store 101 can maintain five physical cartridges of ""Mission Impossible."" A cartridge ID number identifies each cartridge. A cartridge utilization count is also maintained for each cartridge. The utilization count represents the number of times a cartridge has been rented. A cartridge status classifies each cartridge. The domain of cartridge status is Available"", ""Rented,"" and ""Broken."" A status type can apply to many cartridges.

SchlockBuster maintains a record of each of its customers. A unique customer ID identifies each customer. Additional information maintained about each customer is the customer's name and the customer's phone number. Each customer is associated with the store where they enrolled as members to receive their SchlockBuster Video card. A customer can rent a video from any store. This relationship allows Schlockbuster to credit a portion of each rental amount to the home store of the member, regardless of where the video is rented.

SchlockBuster maintains a record of each rental transaction. A rental ID number identifies each rental transaction. Each rental transaction is associated with one and only one customer. Each rental transaction is associated with (rented from) one and only one store. Each rental transaction also captures the rental date and total rental amount. Each rental transaction is associated with one or more rental transaction detail lines. Each rental transaction detail line captures the id of the cartridge being rented, the due date of the cartridge being rented, and the actual return date.","Enumeration:
EmployeeType(manager, cashier, stocker)
CartridgeStatus(Available, Rented, Broken)

Classes:
SchlockBuster()
Store(string id, string phoneNumber, string address)
Employee(string id, string address, string name,EmployeeType type)
PhoneNumber(string type, string number)
VideoTitle(string name, string id, string rating, int runtime)
Distributor(string name, strign id, string phoneNumber)
StoreVideoTitle(double charge)
Cartridge(string id,int utilizationCount, CartridgeStatus status)
Customer(string name, string id, string phoneNumber)
Rental(string id,date rentalDate, double totalAmount)
DetailLine(Cartridge cartridge, date returnDue, date actualReturnDate)","1 SchlockBuster contain * Store
1 SchlockBuster contain * VideoTitle
1 SchlockBuster contain * Distributor
1 SchlockBuster contain * Customer
1 SchlockBuster contain * Rental
1 Store contain * StoreVideoTitle
1 Store contain * Employee
1 Employee contain * PhoneNumber
1 StoreVideoTitle contain * Cartridge
1 Rental contain * DetailLine

1 VideoTitle associate 1 Distributor
1 StoreVideoTitle associate 1 VideoTitle
1 Cartridge associate 1 VideoTitle
1 Customer associate 1 Store
1 Rental associate 1 Customer
1 Rental associate 1 Store
1 DetailLine associate 1 Cartridge"
Board Game,"Presentation of the board
The board is a rectangular zone where the user can move some blocks. Let x be the mesure unit. The height of the board game is x; its width is x: x can't be less than 0 pixels and greater than 00 pixels. The blocks are separated by a marge of 0. x.
There are four square blocks with a side of x.
Four rectangular blocks have the following dimensions: a height of x and a width of x.
One block has the dimensions: a height of x and a width of x.
There is one square block with a side of x.
The board is black, and the blocks are yellow.
Block selection
Input
Left-clicked down on a block.
Processing
The game state becomes ""Block replacement.""
Output None.

Block deselection
Input
Left-clicked up on a selected block.
Processing
The game state becomes ""Block selection.""
Output None.

Block movement
Input
Mouse movement during the ""Block movement"" state. 
Processing
The selected block follows the mouse movement without overlapping the other blocks and exits the game zone. The selected block can' move near other blocks at least 0.0x from the other blocks.
Output None.

Undo Action
Description
The user can cancel a movement. 
Input Menu selection.
Processing
The game displays the block positions at the places where they were before the last movement. This action is considered a movement. The ""undo"" action is unavailable if there is no previous movement.
Output
New game board display.","Enumeration:
GameState(BlockSelection, BlockReplacement, BlockMovement)
Classes:
Board(int width, int height)
Block(int width,int height)
Game(GameState state)
Movement()
Position(int x,int y)
","1 Board contain * Block
1 Block contain 1 Position
1 Game contain * Movement
1 Game contain 1 Board
1 Movement contain 1 Position

1 Movement associate 1 Block"
Centralized store,"Centralized store for user information 
The Framework MUST be capable of capturing information from the software tools. The data captured SHOULD be stored in a centralized data store. The Framework MAY decide whether the information should be stored as Entities or Associates. The data capturing and archiving mechanisms MAY resemble the following. 
Type of Information: Personnel Mechanism: The Address Book is used to create Entities under the category ""People"" (Category names are user definable. However,a particular set of categories like People, Email, etc. MAY always need to be present).The user SHOULD be able to modify,add,delete or group these Entities by navigating to a virtual folder (e.g.,""People"").
Type of Information: Email (Outbound) Mechanism: An Associate is created to contain the message body. The recipien's name(s) are used to create (if required) Entities under the""People""  category. The Associate is then linked to each Entity. 
Type of Information: Email (Inbound) Mechanism: An Associate is created to contain the message body.The sender's name is used to create Entities under the category ""People"" .The Associate is then linked to this Entity. 
Type of Information: Website Documents Mechanism: The user SHOULD be able to specify when he is to start a research project, i.e. when the websites he visits subsequently are to be permanently stored. The project name specified by the user spawns a new Entity in the Framework. An associate is created as an archive and is linked to this Entity. 
Type of Information: Textual Documents Mechanism: The user may optionally specify a descriptive name for the document. The document is automatically saved to disk in a manner that reflects the relationships it has with other Entities. The user may,in the future, fetch this document by following the relationship paths he had created.","Enumeration:
Type(outbound,inbound,website,document)
Classes:
Folder(string name)
Entity(string name)
People()
Project()
Associate(string body,Type type)
DataStore()
AddressBook()","1 Folder contain * Entity
1 Folder contain * Type
1 DataStore contain * Folder

1 Associate associate * Entity

People inherit Entity
Project inherit Entity"
StuffLendingSystem,"The Stuff Lending System

The Stuff Lending System allows members to lend out their belongings in exchange for credits, which they can use to borrow items from others. 
The system tracks where items are at a given time. 
The system controls the username and password and authenticates the person as a user role (Member, System Administrator) in the system, the assigned user role is presented. 
The person need to supply a user name , password,an unique email and an unique phone number for registering the system. Then the system creates a new member profile, assigns a unique member ID, and records the date of creation.

Firstly, Member could register their possessions to the system and earn credits for every listing. 
Member adds item and provides the item details including category, name, and a short description. System validates the information and registers the item to the member's account. The system rewards member with 100 credits and records the day of item registration.

They also lend items from other members using credits and are responsible for returning the items within the agreed time. System verifies the member's credit amounts against the item's lending cost. If sufficient credits exist, system creates a lending contract. Credits are transferred from lender member to lending member based on the contract.If member does not have enough credits or the item is unavailable, the system denies the lending request.
Member can initiate a request to update item details and profile information. They can request to view existing contract details.

Administrator manages overall system functionality and provides administrative oversight. This includes tracking item listings, membership records, and the day counter.
Administrator can view Member/Item details and number of owned items, remove the member and their associated data from the system if the member exists in the system. 

Administrator triggers Advance Day count command. System increases the current day count. System triggers all established lending contracts. Each lending contract triggers a credit transfer equalling the item's lending cost. System transfers credits from the borrowing member to the lending member's account. If a lending contract cannot be executed (i.e. insufficient credits), the system flags the contract and notifies both the borrowing and lending member.

Member/ Administrator both can request to remove a specific item listed in the system and its associated data from the system.

It should be considered that notifications or updates need to be sent to members especially in situations like credit transfers, item unavailability, or disputed transactions. This is a common feature in lending or rental platforms. ","Classes:
StuffLendingSystem()
Member(int credits)
Administrator()
User(string username, string password,string email,string phoneNumber,string memberID,date dateOfCreation)
Notification(string content,date date)
Item(string name,string shortDescription,int cost,date dateOfRegistration)
DayCounter(int count)
LendingContract(date returnDue)","1 StuffLendingSystem contain * User
1 StuffLendingSystem contain * LendingContract
1 StuffLendingSystem contain * Item
1 StuffLendingSystem contain * DayCounter
1 Member contain * Notification

1 Member associate * Item
1 LendingContract associate 1 Member
1 LendingContract associate 1 Member
1 LendingContract associate 1 Item

Member inherit User
Administrator inherit User"
HRIS,"Human-Resources Information System(HRIS)

The Human-Resources Information System (HRIS) web-based, it is divided into four parts; they are User Login Management, Employee Information Management, Employee Leaves Management, and Employee Discipline Management.

In the User Login Management, it is divided into ordinary user login, and administrator user login. The ordinary user is the registered user, such as employees and so on. The administrators are responsible for maintaining and updating the entire system and have more rights on the system. This system includes employee information entry, employee information changes, employee information inquiry, and employee information deleted. The Employee Leaves Management includes: leave information input, leave information query and statistics leave information. Employee Discipline Management includes: input information punishment, query information punishment.
1. User login Management is divided into ordinary user login and administrator login. When ordinary users log on, the system will give him low authority to meet the basic needs of ordinary users. When the user is an administrator, the system will assign a higher authority in order to achieve the system's updates and maintenance by the administrator.
2. The Employee Information Management is mainly the basic information management for employees. Employees can view the personal information page their own such as (name, address, sex, minority status, etc.,) when they enter system and do not have any right to edit and manage of the information as defined by HR Policies of the organization. They can edit personal information only as defined by HR administrators of the organization and also uploads their personal photographs into the system. 
3. The Employee leaves Management is the assessment of the daily work of employees. The employee worth an annual leave when he has at least one year of continuous service to be eligible for this type of leave. The employee can request another leave (maternity, satisfactory, without pay, etc.,) as well as a local leave period of seven days for a while if an employee did not complete the year on his appointment and will be in cases necessary only. The employee can send request leave to the administrator after getting employee's to initial approval from the senior management for submission of the application. The administrator can approve or reject the approval.
4. The Employee Discipline Management is the It encourages harmony and cooperation among employees as well as acts as a morale booster for the employees. In the absence of discipline, there will be chaos, confusion, corruption and disobedience in an organization. If the employee has committed any breach, the senior management will determine the type of offense and the punishment necessary. After the notify system administrator, such as (dismissal, written reprimand, etc.) when the employee gets on three written reprimand the administrator will notify senior management to take appropriate procedures against the employee such as separating the employee or transmission in the same or the outside institution.





","Enumerations:
EmployeeRole(normal,seniorMangement)
ApprovalStatus(pending,initial,approved,rejected)
LeaveType(annual,maternity,satisfactory,withoutPay,local)
PunishmentType(dismissal,writtenReprimand)
Classes:
User()
Administrator()
Employee(string name,string adress,boolean sex,string minorityStatus,string photo,EmployeeRole role,int leaveBalance)
LeaveRequest(LeaveType leavetype,ApprovalStatus approvalStatus,date startDate,date endDate)
DisciplineRecord(string offenseType,PunishmentType punishmentType)","
1 LeaveRequest associate 1 Employee
1 DisciplineRecord associate 1 Employee

Administrator inherit User
Employee inherit User"
Yacht Club System,"The Yacht Club System

The yacht club system--The system is used to manage the club's competition infomation, the member's boat berth information, and the membership fee. Person need to supply a user name and password to sign up for a user role (Member, Treasurer or Secretary). Then, the person can use the user name and password to login the system. 
The secretary would be able to goes through all members'boats and book their berth in the spring.  
The secretary can choose to list all berths. A list of unbooked and booked berths with information about the boat and member is presented. The secretary can choose to book berths. The system assign and book berths in accordance with applicable rules and update member information.
The Secretary would also be able to manage the club's calendar where important events and meetings are advertised. The Secretary can add, delete or change a calendar event. Then, boat club calendar will be updated.
The treasurer would be able to manage member payments in an efficient manner. The treasurer lists and sends a reminder to those members who have not paid enough dues for a calendar year. The treasurer choose to print an invoice for each member in the invoice also includes a reminder fee of 25% per year behind schedule.The system prints an invoice per member and records that the member received a payment reminder. The Treasurer would be able to change a Member's payment status to paid.
Member of the boat club, probably owns one or more boats registered and want a good berth for these. Members could view and manage their membership data, including registered boats, as well as to have a smooth overview of their payment history. They would also like to be able to participate in various boat club meetings and social activities.
Members need to pay their dues via credit card. The system transmits a transaction id and a total to third-party system for Credit Card Payment. Third Party Credit Card Payments System for process the transaction and reply with a positive result. The system updates the Member's pay status to paid and presents a receipt of the transaction.
Members could register a new boat and need to supply boat details including size and type (sailboat, motorsailer, powerboat, kayak/canoe, other) and an optional image of the boat. The system presents the information for the boat to be registered, including cost of berth. The member confirms the correct information.If the boat is registered during the ""offseason""(October 1 to December 31) , system assigns no berth and the membership fee for the current year is unchanged. If the boat is registered during the pre-season (January 1 to April 1) when no berth assignment has been made yet, system assigns no berth. This is done by the Secretary before the start of the season.
Members can remove one of their registered boats and change a boat's data. Members also are able to list calendar events including a short title and start date in a certain time interval, and view all details for a particular calendar event including start and end dates.
Municipality could know what boat owners have what berth. The tax authority has an interest in that the current regulations regarding the taxation of income associations are followed.","Enumerations:
BoatType(sailboat,motosailer,powerboat,kayak,other)

Classes:
YachtClubSystem()
User(string name,string password)
Member(boolean paymentStatus,double membershipFee,string creditCard)
Treasurer()
Secretary()
Reminder(date due,double fee)
Receipt()
Boat(double size, BoatType type,string image, double berthCost, date registerDate)
Berth(boolean isBooked)
Event(string shortTitle,date startDate,date endDate)
Calendar()
","1 YachtClubSystem contain * User
1 YachtClubSystem contain * Reminder
1 YachtClubSystem contain * Receipt
1 YachtClubSystem contain 1 Calendar
1 YachtClubSystem contain * Berth
1 Calendar contain * Event
1 Member contain * Boat

1 Member associate * Event
1 Member associate * Receipt
1 Reminder associate 1 User
1 Boat associate 1 Berth

Member inherit User
Treasurer inherit User
Secretary inherit User"
